{"ast":null,"code":"export const transformMessage = message => {\n  var _message$parent_id;\n  console.log('Transforming message:', {\n    id: message.id,\n    content: message.content.slice(0, 50),\n    // Only log first 50 chars\n    reactions: message.reactions\n  });\n\n  // Ensure reactions is an array and contains valid reaction objects\n  const reactions = Array.isArray(message.reactions) ? message.reactions.filter(r => r && r.emoji && r.userId) : [];\n  console.log('Processed reactions:', reactions);\n  const transformed = {\n    id: message.id.toString(),\n    content: message.content,\n    channelId: message.channel_id.toString(),\n    userId: message.sender_id.toString(),\n    reactions,\n    attachments: Array.isArray(message.attachments) ? message.attachments : [],\n    createdAt: message.created_at,\n    updatedAt: message.updated_at || message.created_at,\n    parentId: (_message$parent_id = message.parent_id) === null || _message$parent_id === void 0 ? void 0 : _message$parent_id.toString(),\n    replyCount: message.reply_count || 0,\n    isExpanded: false,\n    repliesLoaded: false,\n    replies: []\n  };\n  console.log('Transformed message:', {\n    id: transformed.id,\n    content: transformed.content.slice(0, 50),\n    // Only log first 50 chars\n    reactions: transformed.reactions\n  });\n  return transformed;\n};","map":{"version":3,"names":["transformMessage","message","_message$parent_id","console","log","id","content","slice","reactions","Array","isArray","filter","r","emoji","userId","transformed","toString","channelId","channel_id","sender_id","attachments","createdAt","created_at","updatedAt","updated_at","parentId","parent_id","replyCount","reply_count","isExpanded","repliesLoaded","replies"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/utils/messageTransform.ts"],"sourcesContent":["import { Message, RawMessage, StoreMessage } from '../types';\n\nexport const transformMessage = (message: RawMessage | Message): StoreMessage => {\n  console.log('Transforming message:', {\n    id: message.id,\n    content: message.content.slice(0, 50), // Only log first 50 chars\n    reactions: message.reactions\n  });\n  \n  // Ensure reactions is an array and contains valid reaction objects\n  const reactions = Array.isArray(message.reactions) \n    ? message.reactions.filter(r => r && r.emoji && r.userId) \n    : [];\n\n  console.log('Processed reactions:', reactions);\n  \n  const transformed: StoreMessage = {\n    id: message.id.toString(),\n    content: message.content,\n    channelId: message.channel_id.toString(),\n    userId: message.sender_id.toString(),\n    reactions,\n    attachments: Array.isArray(message.attachments) ? message.attachments : [],\n    createdAt: message.created_at,\n    updatedAt: message.updated_at || message.created_at,\n    parentId: message.parent_id?.toString(),\n    replyCount: message.reply_count || 0,\n    isExpanded: false,\n    repliesLoaded: false,\n    replies: []\n  };\n  \n  console.log('Transformed message:', {\n    id: transformed.id,\n    content: transformed.content.slice(0, 50), // Only log first 50 chars\n    reactions: transformed.reactions\n  });\n  return transformed;\n}; "],"mappings":"AAEA,OAAO,MAAMA,gBAAgB,GAAIC,OAA6B,IAAmB;EAAA,IAAAC,kBAAA;EAC/EC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE;IACnCC,EAAE,EAAEJ,OAAO,CAACI,EAAE;IACdC,OAAO,EAAEL,OAAO,CAACK,OAAO,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAAE;IACvCC,SAAS,EAAEP,OAAO,CAACO;EACrB,CAAC,CAAC;;EAEF;EACA,MAAMA,SAAS,GAAGC,KAAK,CAACC,OAAO,CAACT,OAAO,CAACO,SAAS,CAAC,GAC9CP,OAAO,CAACO,SAAS,CAACG,MAAM,CAACC,CAAC,IAAIA,CAAC,IAAIA,CAAC,CAACC,KAAK,IAAID,CAAC,CAACE,MAAM,CAAC,GACvD,EAAE;EAENX,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEI,SAAS,CAAC;EAE9C,MAAMO,WAAyB,GAAG;IAChCV,EAAE,EAAEJ,OAAO,CAACI,EAAE,CAACW,QAAQ,CAAC,CAAC;IACzBV,OAAO,EAAEL,OAAO,CAACK,OAAO;IACxBW,SAAS,EAAEhB,OAAO,CAACiB,UAAU,CAACF,QAAQ,CAAC,CAAC;IACxCF,MAAM,EAAEb,OAAO,CAACkB,SAAS,CAACH,QAAQ,CAAC,CAAC;IACpCR,SAAS;IACTY,WAAW,EAAEX,KAAK,CAACC,OAAO,CAACT,OAAO,CAACmB,WAAW,CAAC,GAAGnB,OAAO,CAACmB,WAAW,GAAG,EAAE;IAC1EC,SAAS,EAAEpB,OAAO,CAACqB,UAAU;IAC7BC,SAAS,EAAEtB,OAAO,CAACuB,UAAU,IAAIvB,OAAO,CAACqB,UAAU;IACnDG,QAAQ,GAAAvB,kBAAA,GAAED,OAAO,CAACyB,SAAS,cAAAxB,kBAAA,uBAAjBA,kBAAA,CAAmBc,QAAQ,CAAC,CAAC;IACvCW,UAAU,EAAE1B,OAAO,CAAC2B,WAAW,IAAI,CAAC;IACpCC,UAAU,EAAE,KAAK;IACjBC,aAAa,EAAE,KAAK;IACpBC,OAAO,EAAE;EACX,CAAC;EAED5B,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE;IAClCC,EAAE,EAAEU,WAAW,CAACV,EAAE;IAClBC,OAAO,EAAES,WAAW,CAACT,OAAO,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAAE;IAC3CC,SAAS,EAAEO,WAAW,CAACP;EACzB,CAAC,CAAC;EACF,OAAOO,WAAW;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}