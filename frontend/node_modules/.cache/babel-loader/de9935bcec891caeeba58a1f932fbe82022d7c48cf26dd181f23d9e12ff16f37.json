{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ChatMessage from '../../common/ChatMessage';\nimport { getChannelMessages } from '../../../services/api/chat';\nimport { fetchMessagesSuccess } from '../../../store/messages/messagesSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column-reverse; // Makes messages start from bottom\n  padding: 16px;\n  gap: 2px;\n`;\n_c = MessageListContainer;\nconst LoadingMessage = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.textSecondary};\n  font-family: 'Courier New', monospace;\n  font-style: italic;\n`;\n_c2 = LoadingMessage;\nconst NoMessagesMessage = styled.div`\n  text-align: center;\n  padding: 20px;\n  color: ${props => props.theme.colors.secondary};\n  font-family: 'Courier New', monospace;\n`;\n_c3 = NoMessagesMessage;\nconst MESSAGES_PER_PAGE = 30;\n\n// Transform API message to store message format\nconst transformMessage = msg => ({\n  id: String(msg.id),\n  content: msg.content,\n  channelId: String(msg.channel_id),\n  userId: String(msg.sender_id),\n  reactions: [],\n  createdAt: msg.created_at,\n  updatedAt: msg.created_at\n});\nconst MessageList = ({\n  channelId\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const containerRef = useRef(null);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [hasMoreMessages, setHasMoreMessages] = useState(true);\n  const messages = useSelector(state => {\n    var _state$messages;\n    if (!channelId || !((_state$messages = state.messages) !== null && _state$messages !== void 0 && _state$messages.messagesByChannel)) return [];\n    return state.messages.messagesByChannel[String(channelId)] || [];\n  });\n  const users = useSelector(state => {\n    var _state$chat;\n    return ((_state$chat = state.chat) === null || _state$chat === void 0 ? void 0 : _state$chat.users) || {};\n  });\n\n  // Initial message load\n  useEffect(() => {\n    if (channelId) {\n      setIsLoadingMore(true);\n      setHasMoreMessages(true);\n      getChannelMessages(channelId, MESSAGES_PER_PAGE).then(newMessages => {\n        if (newMessages.length < MESSAGES_PER_PAGE) {\n          setHasMoreMessages(false);\n        }\n        const transformedMessages = newMessages.map(transformMessage);\n        dispatch(fetchMessagesSuccess({\n          channelId: String(channelId),\n          messages: transformedMessages\n        }));\n      }).catch(error => {\n        console.error('Failed to fetch messages:', error);\n      }).finally(() => {\n        setIsLoadingMore(false);\n      });\n    }\n  }, [channelId, dispatch]);\n\n  // Handle scroll to load more messages\n  const handleScroll = async e => {\n    const div = e.currentTarget;\n    const isNearTop = div.scrollHeight + div.scrollTop <= div.clientHeight + 100;\n    if (isNearTop && !isLoadingMore && hasMoreMessages && channelId) {\n      setIsLoadingMore(true);\n      try {\n        const oldestMessage = messages[messages.length - 1];\n        const olderMessages = await getChannelMessages(channelId, MESSAGES_PER_PAGE);\n        if (olderMessages.length < MESSAGES_PER_PAGE) {\n          setHasMoreMessages(false);\n        }\n        if (olderMessages.length > 0) {\n          // Filter out messages we already have\n          const newMessages = olderMessages.filter(msg => !messages.some(existing => existing.id === String(msg.id)));\n          if (newMessages.length > 0) {\n            const transformedMessages = newMessages.map(transformMessage);\n            dispatch(fetchMessagesSuccess({\n              channelId: String(channelId),\n              messages: [...messages, ...transformedMessages].sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())\n            }));\n          }\n        }\n      } catch (error) {\n        console.error('Failed to fetch older messages:', error);\n      } finally {\n        setIsLoadingMore(false);\n      }\n    }\n  };\n  if (!channelId) {\n    return /*#__PURE__*/_jsxDEV(MessageListContainer, {\n      children: /*#__PURE__*/_jsxDEV(NoMessagesMessage, {\n        children: \"Select a channel to view messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(MessageListContainer, {\n    ref: containerRef,\n    onScroll: handleScroll,\n    children: [messages.map(msg => {\n      var _users$Number;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `message-${msg.id}`,\n        children: /*#__PURE__*/_jsxDEV(ChatMessage, {\n          content: msg.content,\n          sender: ((_users$Number = users[Number(msg.userId)]) === null || _users$Number === void 0 ? void 0 : _users$Number.username) || 'Unknown',\n          timestamp: msg.createdAt,\n          isSystem: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this);\n    }), isLoadingMore && /*#__PURE__*/_jsxDEV(LoadingMessage, {\n      children: \"Loading older messages...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), !hasMoreMessages && messages.length === 0 && /*#__PURE__*/_jsxDEV(NoMessagesMessage, {\n      children: \"No messages yet. Start the conversation!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageList, \"YHagrVrIbcEXZr9lxxneAvZAf3M=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c4 = MessageList;\nexport default MessageList;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"MessageListContainer\");\n$RefreshReg$(_c2, \"LoadingMessage\");\n$RefreshReg$(_c3, \"NoMessagesMessage\");\n$RefreshReg$(_c4, \"MessageList\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","useDispatch","useSelector","ChatMessage","getChannelMessages","fetchMessagesSuccess","jsxDEV","_jsxDEV","MessageListContainer","div","_c","LoadingMessage","props","theme","colors","textSecondary","_c2","NoMessagesMessage","secondary","_c3","MESSAGES_PER_PAGE","transformMessage","msg","id","String","content","channelId","channel_id","userId","sender_id","reactions","createdAt","created_at","updatedAt","MessageList","_s","dispatch","containerRef","isLoadingMore","setIsLoadingMore","hasMoreMessages","setHasMoreMessages","messages","state","_state$messages","messagesByChannel","users","_state$chat","chat","then","newMessages","length","transformedMessages","map","catch","error","console","finally","handleScroll","e","currentTarget","isNearTop","scrollHeight","scrollTop","clientHeight","oldestMessage","olderMessages","filter","some","existing","sort","a","b","Date","getTime","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onScroll","_users$Number","sender","Number","username","timestamp","isSystem","_c4","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageList/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ChatMessage from '../../common/ChatMessage';\r\nimport { getChannelMessages } from '../../../services/api/chat';\r\nimport { fetchMessagesSuccess } from '../../../store/messages/messagesSlice';\r\nimport { Message as ApiMessage } from '../../../types';\r\nimport { Message as StoreMessage } from '../../../store/types';\r\nimport { RootState } from '../../../store/rootReducer';\r\n\r\nconst MessageListContainer = styled.div`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  display: flex;\r\n  flex-direction: column-reverse; // Makes messages start from bottom\r\n  padding: 16px;\r\n  gap: 2px;\r\n`;\r\n\r\nconst LoadingMessage = styled.div`\r\n  text-align: center;\r\n  padding: 8px;\r\n  color: ${props => props.theme.colors.textSecondary};\r\n  font-family: 'Courier New', monospace;\r\n  font-style: italic;\r\n`;\r\n\r\nconst NoMessagesMessage = styled.div`\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: ${props => props.theme.colors.secondary};\r\n  font-family: 'Courier New', monospace;\r\n`;\r\n\r\ninterface MessageListProps {\r\n  channelId: number | null;\r\n}\r\n\r\nconst MESSAGES_PER_PAGE = 30;\r\n\r\n// Transform API message to store message format\r\nconst transformMessage = (msg: ApiMessage): StoreMessage => ({\r\n  id: String(msg.id),\r\n  content: msg.content,\r\n  channelId: String(msg.channel_id),\r\n  userId: String(msg.sender_id),\r\n  reactions: [],\r\n  createdAt: msg.created_at,\r\n  updatedAt: msg.created_at,\r\n});\r\n\r\nconst MessageList: React.FC<MessageListProps> = ({ channelId }) => {\r\n  const dispatch = useDispatch();\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n  const [hasMoreMessages, setHasMoreMessages] = useState(true);\r\n\r\n  const messages = useSelector((state: RootState) => {\r\n    if (!channelId || !state.messages?.messagesByChannel) return [];\r\n    return state.messages.messagesByChannel[String(channelId)] || [];\r\n  });\r\n  \r\n  const users = useSelector((state: RootState) => state.chat?.users || {});\r\n\r\n  // Initial message load\r\n  useEffect(() => {\r\n    if (channelId) {\r\n      setIsLoadingMore(true);\r\n      setHasMoreMessages(true);\r\n      \r\n      getChannelMessages(channelId, MESSAGES_PER_PAGE)\r\n        .then(newMessages => {\r\n          if (newMessages.length < MESSAGES_PER_PAGE) {\r\n            setHasMoreMessages(false);\r\n          }\r\n          const transformedMessages = newMessages.map(transformMessage);\r\n          dispatch(fetchMessagesSuccess({ \r\n            channelId: String(channelId), \r\n            messages: transformedMessages \r\n          }));\r\n        })\r\n        .catch(error => {\r\n          console.error('Failed to fetch messages:', error);\r\n        })\r\n        .finally(() => {\r\n          setIsLoadingMore(false);\r\n        });\r\n    }\r\n  }, [channelId, dispatch]);\r\n\r\n  // Handle scroll to load more messages\r\n  const handleScroll = async (e: React.UIEvent<HTMLDivElement>) => {\r\n    const div = e.currentTarget;\r\n    const isNearTop = div.scrollHeight + div.scrollTop <= div.clientHeight + 100;\r\n    \r\n    if (isNearTop && !isLoadingMore && hasMoreMessages && channelId) {\r\n      setIsLoadingMore(true);\r\n      try {\r\n        const oldestMessage = messages[messages.length - 1];\r\n        const olderMessages = await getChannelMessages(channelId, MESSAGES_PER_PAGE);\r\n        \r\n        if (olderMessages.length < MESSAGES_PER_PAGE) {\r\n          setHasMoreMessages(false);\r\n        }\r\n\r\n        if (olderMessages.length > 0) {\r\n          // Filter out messages we already have\r\n          const newMessages = olderMessages.filter(msg => \r\n            !messages.some((existing: StoreMessage) => existing.id === String(msg.id))\r\n          );\r\n          \r\n          if (newMessages.length > 0) {\r\n            const transformedMessages = newMessages.map(transformMessage);\r\n            dispatch(fetchMessagesSuccess({ \r\n              channelId: String(channelId), \r\n              messages: [...messages, ...transformedMessages].sort((a, b) => \r\n                new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\r\n              )\r\n            }));\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch older messages:', error);\r\n      } finally {\r\n        setIsLoadingMore(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!channelId) {\r\n    return (\r\n      <MessageListContainer>\r\n        <NoMessagesMessage>\r\n          Select a channel to view messages\r\n        </NoMessagesMessage>\r\n      </MessageListContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <MessageListContainer\r\n      ref={containerRef}\r\n      onScroll={handleScroll}\r\n    >\r\n      {messages.map((msg: StoreMessage) => (\r\n        <div key={msg.id} id={`message-${msg.id}`}>\r\n          <ChatMessage\r\n            content={msg.content}\r\n            sender={users[Number(msg.userId)]?.username || 'Unknown'}\r\n            timestamp={msg.createdAt}\r\n            isSystem={false}\r\n          />\r\n        </div>\r\n      ))}\r\n      {isLoadingMore && (\r\n        <LoadingMessage>Loading older messages...</LoadingMessage>\r\n      )}\r\n      {!hasMoreMessages && messages.length === 0 && (\r\n        <NoMessagesMessage>\r\n          No messages yet. Start the conversation!\r\n        </NoMessagesMessage>\r\n      )}\r\n    </MessageListContainer>\r\n  );\r\n};\r\n\r\nexport default MessageList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}