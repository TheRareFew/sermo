{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageInput\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { sendMessage } from '../../../store/messages/messagesThunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputContainer = styled.div`\n  display: flex;\n  padding: 1rem;\n  background-color: ${props => props.theme.colors.backgroundDark};\n  border-top: 2px solid ${props => props.theme.colors.border};\n  position: relative;\n\n  &:before {\n    content: '>';\n    position: absolute;\n    left: 0.5rem;\n    top: 50%;\n    transform: translateY(-50%);\n    color: ${props => props.theme.colors.primary};\n    font-family: 'VT323', monospace;\n  }\n`;\n_c = InputContainer;\nconst StyledInput = styled.input`\n  flex: 1;\n  background-color: ${props => props.theme.colors.background};\n  border: 2px solid ${props => props.theme.colors.border};\n  color: ${props => props.theme.colors.text};\n  padding: 0.5rem;\n  padding-left: 1.5rem;\n  font-family: 'VT323', monospace;\n  font-size: 1rem;\n  outline: none;\n\n  &:focus {\n    border-color: ${props => props.theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${props => props.theme.colors.textDim};\n  }\n`;\n_c2 = StyledInput;\nconst CharCount = styled.span`\n  position: absolute;\n  right: 1.5rem;\n  top: 50%;\n  transform: translateY(-50%);\n  font-size: 0.875rem;\n  color: ${props => props.isNearLimit ? props.theme.colors.error : props.theme.colors.textDim};\n  font-family: 'VT323', monospace;\n`;\n_c3 = CharCount;\nconst MAX_MESSAGE_LENGTH = 4096; // 4KB max message length\nconst WARNING_THRESHOLD = MAX_MESSAGE_LENGTH * 0.9; // Show warning at 90% of limit\n\nconst MessageInput = ({\n  channelId\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [message, setMessage] = useState('');\n  const handleKeyPress = event => {\n    if (event.key === 'Enter' && message.trim()) {\n      dispatch(sendMessage({\n        channelId,\n        content: message.trim()\n      }));\n      setMessage('');\n    }\n  };\n  const handleChange = event => {\n    const newValue = event.target.value;\n    if (newValue.length <= MAX_MESSAGE_LENGTH) {\n      setMessage(newValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(InputContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n      type: \"text\",\n      value: message,\n      onChange: handleChange,\n      onKeyPress: handleKeyPress,\n      placeholder: \"Type your message and press Enter...\",\n      maxLength: MAX_MESSAGE_LENGTH\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CharCount, {\n      isNearLimit: message.length >= WARNING_THRESHOLD,\n      children: [message.length, \"/\", MAX_MESSAGE_LENGTH]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageInput, \"K3c+Ui0YNnVCamzDk2mXf3M3wzA=\", false, function () {\n  return [useDispatch];\n});\n_c4 = MessageInput;\nexport default MessageInput;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"InputContainer\");\n$RefreshReg$(_c2, \"StyledInput\");\n$RefreshReg$(_c3, \"CharCount\");\n$RefreshReg$(_c4, \"MessageInput\");","map":{"version":3,"names":["React","useState","useDispatch","styled","sendMessage","jsxDEV","_jsxDEV","InputContainer","div","props","theme","colors","backgroundDark","border","primary","_c","StyledInput","input","background","text","textDim","_c2","CharCount","span","isNearLimit","error","_c3","MAX_MESSAGE_LENGTH","WARNING_THRESHOLD","MessageInput","channelId","_s","dispatch","message","setMessage","handleKeyPress","event","key","trim","content","handleChange","newValue","target","value","length","children","type","onChange","onKeyPress","placeholder","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageInput/index.tsx"],"sourcesContent":["import React, { useState, KeyboardEvent } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { sendMessage } from '../../../store/messages/messagesThunks';\r\n\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  padding: 1rem;\r\n  background-color: ${props => props.theme.colors.backgroundDark};\r\n  border-top: 2px solid ${props => props.theme.colors.border};\r\n  position: relative;\r\n\r\n  &:before {\r\n    content: '>';\r\n    position: absolute;\r\n    left: 0.5rem;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    color: ${props => props.theme.colors.primary};\r\n    font-family: 'VT323', monospace;\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  flex: 1;\r\n  background-color: ${props => props.theme.colors.background};\r\n  border: 2px solid ${props => props.theme.colors.border};\r\n  color: ${props => props.theme.colors.text};\r\n  padding: 0.5rem;\r\n  padding-left: 1.5rem;\r\n  font-family: 'VT323', monospace;\r\n  font-size: 1rem;\r\n  outline: none;\r\n\r\n  &:focus {\r\n    border-color: ${props => props.theme.colors.primary};\r\n  }\r\n\r\n  &::placeholder {\r\n    color: ${props => props.theme.colors.textDim};\r\n  }\r\n`;\r\n\r\nconst CharCount = styled.span<{ isNearLimit: boolean }>`\r\n  position: absolute;\r\n  right: 1.5rem;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  font-size: 0.875rem;\r\n  color: ${props => props.isNearLimit ? props.theme.colors.error : props.theme.colors.textDim};\r\n  font-family: 'VT323', monospace;\r\n`;\r\n\r\ninterface MessageInputProps {\r\n  channelId: number;\r\n}\r\n\r\nconst MAX_MESSAGE_LENGTH = 4096; // 4KB max message length\r\nconst WARNING_THRESHOLD = MAX_MESSAGE_LENGTH * 0.9; // Show warning at 90% of limit\r\n\r\nconst MessageInput: React.FC<MessageInputProps> = ({ channelId }) => {\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleKeyPress = (event: KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key === 'Enter' && message.trim()) {\r\n      dispatch(sendMessage({ channelId, content: message.trim() }) as any);\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newValue = event.target.value;\r\n    if (newValue.length <= MAX_MESSAGE_LENGTH) {\r\n      setMessage(newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputContainer>\r\n      <StyledInput\r\n        type=\"text\"\r\n        value={message}\r\n        onChange={handleChange}\r\n        onKeyPress={handleKeyPress}\r\n        placeholder=\"Type your message and press Enter...\"\r\n        maxLength={MAX_MESSAGE_LENGTH}\r\n      />\r\n      <CharCount isNearLimit={message.length >= WARNING_THRESHOLD}>\r\n        {message.length}/{MAX_MESSAGE_LENGTH}\r\n      </CharCount>\r\n    </InputContainer>\r\n  );\r\n};\r\n\r\nexport default MessageInput; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}