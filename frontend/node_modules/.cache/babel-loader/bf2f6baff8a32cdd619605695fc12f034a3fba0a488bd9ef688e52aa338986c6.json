{"ast":null,"code":"export function transformMessage(message) {\n  console.log('Transforming message:', message);\n\n  // Ensure reactions is an array\n  const reactions = Array.isArray(message.reactions) ? message.reactions : [];\n  console.log('Transformed reactions:', reactions);\n  return {\n    id: message.id.toString(),\n    content: message.content,\n    channelId: message.channelId || message.channel_id,\n    userId: message.userId || message.sender_id,\n    createdAt: message.createdAt || message.created_at,\n    updatedAt: message.updatedAt || message.updated_at,\n    parentId: message.parentId || message.parent_id,\n    replyCount: message.replyCount || message.reply_count || 0,\n    isExpanded: message.isExpanded || false,\n    repliesLoaded: message.repliesLoaded || false,\n    replies: message.replies || [],\n    reactions: reactions,\n    attachments: message.attachments || []\n  };\n}","map":{"version":3,"names":["transformMessage","message","console","log","reactions","Array","isArray","id","toString","content","channelId","channel_id","userId","sender_id","createdAt","created_at","updatedAt","updated_at","parentId","parent_id","replyCount","reply_count","isExpanded","repliesLoaded","replies","attachments"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/utils/messageTransform.ts"],"sourcesContent":["import { RawMessage, StoreMessage, Reaction } from '../types';\n\nexport function transformMessage(message: RawMessage) {\n  console.log('Transforming message:', message);\n  \n  // Ensure reactions is an array\n  const reactions = Array.isArray(message.reactions) ? message.reactions : [];\n  console.log('Transformed reactions:', reactions);\n  \n  return {\n    id: message.id.toString(),\n    content: message.content,\n    channelId: message.channelId || message.channel_id,\n    userId: message.userId || message.sender_id,\n    createdAt: message.createdAt || message.created_at,\n    updatedAt: message.updatedAt || message.updated_at,\n    parentId: message.parentId || message.parent_id,\n    replyCount: message.replyCount || message.reply_count || 0,\n    isExpanded: message.isExpanded || false,\n    repliesLoaded: message.repliesLoaded || false,\n    replies: message.replies || [],\n    reactions: reactions,\n    attachments: message.attachments || []\n  };\n} "],"mappings":"AAEA,OAAO,SAASA,gBAAgBA,CAACC,OAAmB,EAAE;EACpDC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,OAAO,CAAC;;EAE7C;EACA,MAAMG,SAAS,GAAGC,KAAK,CAACC,OAAO,CAACL,OAAO,CAACG,SAAS,CAAC,GAAGH,OAAO,CAACG,SAAS,GAAG,EAAE;EAC3EF,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,SAAS,CAAC;EAEhD,OAAO;IACLG,EAAE,EAAEN,OAAO,CAACM,EAAE,CAACC,QAAQ,CAAC,CAAC;IACzBC,OAAO,EAAER,OAAO,CAACQ,OAAO;IACxBC,SAAS,EAAET,OAAO,CAACS,SAAS,IAAIT,OAAO,CAACU,UAAU;IAClDC,MAAM,EAAEX,OAAO,CAACW,MAAM,IAAIX,OAAO,CAACY,SAAS;IAC3CC,SAAS,EAAEb,OAAO,CAACa,SAAS,IAAIb,OAAO,CAACc,UAAU;IAClDC,SAAS,EAAEf,OAAO,CAACe,SAAS,IAAIf,OAAO,CAACgB,UAAU;IAClDC,QAAQ,EAAEjB,OAAO,CAACiB,QAAQ,IAAIjB,OAAO,CAACkB,SAAS;IAC/CC,UAAU,EAAEnB,OAAO,CAACmB,UAAU,IAAInB,OAAO,CAACoB,WAAW,IAAI,CAAC;IAC1DC,UAAU,EAAErB,OAAO,CAACqB,UAAU,IAAI,KAAK;IACvCC,aAAa,EAAEtB,OAAO,CAACsB,aAAa,IAAI,KAAK;IAC7CC,OAAO,EAAEvB,OAAO,CAACuB,OAAO,IAAI,EAAE;IAC9BpB,SAAS,EAAEA,SAAS;IACpBqB,WAAW,EAAExB,OAAO,CAACwB,WAAW,IAAI;EACtC,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}