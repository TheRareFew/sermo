{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport ChatMessage from '../../common/ChatMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n_c = MessageListContainer;\nconst MessageWrapper = styled.div`\n  &.highlight {\n    background-color: ${props => props.theme.colors.border}40;\n    border-radius: 4px;\n    transition: background-color 0.3s ease;\n  }\n`;\n_c2 = MessageWrapper;\nconst MessageList = /*#__PURE__*/_s(/*#__PURE__*/React.forwardRef(_c3 = _s(({\n  selectedMessageId\n}, ref) => {\n  _s();\n  const {\n    messages,\n    activeChannelId\n  } = useSelector(state => {\n    var _state$messages$messa;\n    return {\n      messages: ((_state$messages$messa = state.messages.messagesByChannel) === null || _state$messages$messa === void 0 ? void 0 : _state$messages$messa[state.chat.activeChannelId]) || [],\n      activeChannelId: state.chat.activeChannelId\n    };\n  });\n  const scrollRef = useRef(null);\n  const actualRef = ref || scrollRef;\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    if (actualRef.current) {\n      actualRef.current.scrollTop = actualRef.current.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(MessageListContainer, {\n    ref: actualRef,\n    children: messages.map(message => /*#__PURE__*/_jsxDEV(MessageWrapper, {\n      id: `message-${message.id}`,\n      isSelected: message.id === selectedMessageId,\n      children: /*#__PURE__*/_jsxDEV(ChatMessage, {\n        content: message.content,\n        sender: message.sender,\n        timestamp: message.createdAt,\n        userId: message.userId,\n        messageId: message.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}, \"K+0SPjdHFoJnUQepUkprmd/Gd2Q=\", false, function () {\n  return [useSelector];\n})), \"K+0SPjdHFoJnUQepUkprmd/Gd2Q=\", false, function () {\n  return [useSelector];\n});\n_c4 = MessageList;\nMessageList.displayName = 'MessageList';\nexport default MessageList;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"MessageListContainer\");\n$RefreshReg$(_c2, \"MessageWrapper\");\n$RefreshReg$(_c3, \"MessageList$React.forwardRef\");\n$RefreshReg$(_c4, \"MessageList\");","map":{"version":3,"names":["React","useEffect","useRef","styled","useSelector","ChatMessage","jsxDEV","_jsxDEV","MessageListContainer","div","_c","MessageWrapper","props","theme","colors","border","_c2","MessageList","_s","forwardRef","_c3","selectedMessageId","ref","messages","activeChannelId","state","_state$messages$messa","messagesByChannel","chat","scrollRef","actualRef","current","scrollTop","scrollHeight","children","map","message","id","isSelected","content","sender","timestamp","createdAt","userId","messageId","fileName","_jsxFileName","lineNumber","columnNumber","_c4","displayName","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageList/index.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { RootState, Message } from '../../../types';\nimport ChatMessage from '../../common/ChatMessage';\n\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst MessageWrapper = styled.div<{ isSelected?: boolean }>`\n  &.highlight {\n    background-color: ${props => props.theme.colors.border}40;\n    border-radius: 4px;\n    transition: background-color 0.3s ease;\n  }\n`;\n\ninterface MessageListProps {\n  selectedMessageId?: string | null;\n}\n\nconst MessageList: React.FC<MessageListProps> = React.forwardRef<HTMLDivElement, MessageListProps>(\n  ({ selectedMessageId }, ref) => {\n    const { messages, activeChannelId } = useSelector((state: RootState) => ({\n      messages: state.messages.messagesByChannel?.[state.chat.activeChannelId] || [],\n      activeChannelId: state.chat.activeChannelId,\n    }));\n\n    const scrollRef = useRef<HTMLDivElement>(null);\n    const actualRef = (ref as React.RefObject<HTMLDivElement>) || scrollRef;\n\n    // Auto-scroll to bottom when new messages arrive\n    useEffect(() => {\n      if (actualRef.current) {\n        actualRef.current.scrollTop = actualRef.current.scrollHeight;\n      }\n    }, [messages]);\n\n    return (\n      <MessageListContainer ref={actualRef}>\n        {messages.map((message: Message) => (\n          <MessageWrapper\n            key={message.id}\n            id={`message-${message.id}`}\n            isSelected={message.id === selectedMessageId}\n          >\n            <ChatMessage \n              content={message.content}\n              sender={message.sender}\n              timestamp={message.createdAt}\n              userId={message.userId}\n              messageId={message.id}\n            />\n          </MessageWrapper>\n        ))}\n      </MessageListContainer>\n    );\n  }\n);\n\nMessageList.displayName = 'MessageList';\n\nexport default MessageList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}