{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageReplies\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { transformMessage } from '../../../utils/messageTransform';\nimport Message from '../Message';\nimport { updateMessage } from '../../../store/messages/messagesSlice';\nimport { getReplies } from '../../../services/api/chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RepliesContainer = styled.div`\n  margin-left: 24px;\n  border-left: 1px solid ${props => props.theme.colors.border};\n  padding-left: 8px;\n`;\n_c = RepliesContainer;\nconst ReplyWrapper = styled.div`\n  margin-top: 4px;\n`;\n_c2 = ReplyWrapper;\nconst MessageReplies = ({\n  parentId,\n  replies = [],\n  currentUserId,\n  isExpanded,\n  onToggleReplies,\n  onDelete\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    users\n  } = useSelector(state => ({\n    users: state.chat.users\n  }));\n  useEffect(() => {\n    const loadReplies = async () => {\n      try {\n        var _transformedReplies$;\n        const fetchedReplies = await getReplies(parentId);\n        const transformedReplies = fetchedReplies.map(transformMessage);\n\n        // Update the parent message with the new replies\n        dispatch(updateMessage({\n          channelId: (_transformedReplies$ = transformedReplies[0]) === null || _transformedReplies$ === void 0 ? void 0 : _transformedReplies$.channelId,\n          messageId: parentId,\n          message: {\n            replies: transformedReplies,\n            repliesLoaded: true\n          }\n        }));\n      } catch (error) {\n        console.error('Failed to load replies:', error);\n      }\n    };\n    if (isExpanded && (!replies || replies.length === 0)) {\n      loadReplies();\n    }\n  }, [dispatch, isExpanded, parentId, replies]);\n  const handleReply = messageId => {\n    console.log('Reply to reply:', messageId);\n  };\n  const handleToggleReplies = () => {\n    // Replies of replies are not supported\n  };\n\n  // Sort replies by creation time\n  const sortedReplies = [...replies].sort((a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime());\n  return /*#__PURE__*/_jsxDEV(RepliesContainer, {\n    children: sortedReplies.map(reply => {\n      var _users$reply$userId;\n      return /*#__PURE__*/_jsxDEV(ReplyWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          id: reply.id,\n          content: reply.content,\n          sender: ((_users$reply$userId = users[reply.userId]) === null || _users$reply$userId === void 0 ? void 0 : _users$reply$userId.username) || reply.userId,\n          timestamp: reply.createdAt,\n          userId: reply.userId,\n          currentUserId: currentUserId,\n          onDelete: () => onDelete(reply.id),\n          replyCount: 0,\n          isExpanded: false,\n          onToggleReplies: handleToggleReplies,\n          onReply: () => handleReply(reply.id),\n          isReply: true,\n          reactions: reply.reactions || [],\n          onReactionAdd: () => {},\n          onReactionRemove: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, reply.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageReplies, \"tbZ6KJdmADm7ZyMUg0L8SjVwHkk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c3 = MessageReplies;\nexport default MessageReplies;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"RepliesContainer\");\n$RefreshReg$(_c2, \"ReplyWrapper\");\n$RefreshReg$(_c3, \"MessageReplies\");","map":{"version":3,"names":["React","useEffect","styled","useDispatch","useSelector","transformMessage","Message","updateMessage","getReplies","jsxDEV","_jsxDEV","RepliesContainer","div","props","theme","colors","border","_c","ReplyWrapper","_c2","MessageReplies","parentId","replies","currentUserId","isExpanded","onToggleReplies","onDelete","_s","dispatch","users","state","chat","loadReplies","_transformedReplies$","fetchedReplies","transformedReplies","map","channelId","messageId","message","repliesLoaded","error","console","length","handleReply","log","handleToggleReplies","sortedReplies","sort","a","b","Date","createdAt","getTime","children","reply","_users$reply$userId","id","content","sender","userId","username","timestamp","replyCount","onReply","isReply","reactions","onReactionAdd","onReactionRemove","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageReplies/index.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState, StoreMessage, User } from '../../../types';\nimport { transformMessage } from '../../../utils/messageTransform';\nimport Message from '../Message';\nimport { updateMessage } from '../../../store/messages/messagesSlice';\nimport { getReplies } from '../../../services/api/chat';\n\ninterface MessageRepliesProps {\n  parentId: string;\n  replies?: StoreMessage[];\n  currentUserId?: string;\n  isExpanded: boolean;\n  onToggleReplies: () => void;\n  onDelete: (messageId: string) => void;\n}\n\nconst RepliesContainer = styled.div`\n  margin-left: 24px;\n  border-left: 1px solid ${props => props.theme.colors.border};\n  padding-left: 8px;\n`;\n\nconst ReplyWrapper = styled.div`\n  margin-top: 4px;\n`;\n\nconst MessageReplies: React.FC<MessageRepliesProps> = ({\n  parentId,\n  replies = [],\n  currentUserId,\n  isExpanded,\n  onToggleReplies,\n  onDelete\n}) => {\n  const dispatch = useDispatch();\n  const { users } = useSelector((state: RootState) => ({\n    users: state.chat.users as { [key: string]: User }\n  }));\n\n  useEffect(() => {\n    const loadReplies = async () => {\n      try {\n        const fetchedReplies = await getReplies(parentId);\n        const transformedReplies = fetchedReplies.map(transformMessage);\n        \n        // Update the parent message with the new replies\n        dispatch(updateMessage({\n          channelId: transformedReplies[0]?.channelId,\n          messageId: parentId,\n          message: {\n            replies: transformedReplies,\n            repliesLoaded: true\n          }\n        }));\n      } catch (error) {\n        console.error('Failed to load replies:', error);\n      }\n    };\n\n    if (isExpanded && (!replies || replies.length === 0)) {\n      loadReplies();\n    }\n  }, [dispatch, isExpanded, parentId, replies]);\n\n  const handleReply = (messageId: string) => {\n    console.log('Reply to reply:', messageId);\n  };\n\n  const handleToggleReplies = () => {\n    // Replies of replies are not supported\n  };\n\n  // Sort replies by creation time\n  const sortedReplies = [...replies].sort(\n    (a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n  );\n\n  return (\n    <RepliesContainer>\n      {sortedReplies.map((reply) => (\n        <ReplyWrapper key={reply.id}>\n          <Message\n            id={reply.id}\n            content={reply.content}\n            sender={users[reply.userId]?.username || reply.userId}\n            timestamp={reply.createdAt}\n            userId={reply.userId}\n            currentUserId={currentUserId}\n            onDelete={() => onDelete(reply.id)}\n            replyCount={0}\n            isExpanded={false}\n            onToggleReplies={handleToggleReplies}\n            onReply={() => handleReply(reply.id)}\n            isReply={true}\n            reactions={reply.reactions || []}\n            onReactionAdd={() => {}}\n            onReactionRemove={() => {}}\n          />\n        </ReplyWrapper>\n      ))}\n    </RepliesContainer>\n  );\n};\n\nexport default MessageReplies; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}