{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\layout\\\\MainLayout\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../../store/auth/authSlice';\nimport { setActiveChannel, addMessage, setMessages, setUsers } from '../../../store/chat/chatSlice';\nimport Button from '../../common/Button';\nimport ChatMessage from '../../common/ChatMessage';\nimport UserListItem from '../../common/UserListItem';\nimport ChannelListItem from '../../common/ChannelListItem';\nimport CreateChannelModal from '../../chat/CreateChannelModal';\nimport MessageInput from '../../chat/MessageInput';\nimport wsService from '../../../services/websocket';\nimport { getChannelMessages, getChannelUsers } from '../../../services/api/chat';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'VT323', monospace;\n`;\n_c = MainContainer;\nconst Sidebar = styled.div`\n  width: 200px;\n  border-right: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = Sidebar;\nconst ChannelList = styled.div`\n  flex: 1;\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n_c3 = ChannelList;\nconst UserList = styled.div`\n  height: 200px;\n  padding: 16px;\n  border-top: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n_c4 = UserList;\nconst ChatArea = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n`;\n_c5 = ChatArea;\nconst ChatHeader = styled.div`\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h1 {\n    margin: 0;\n    text-transform: uppercase;\n  }\n`;\n_c6 = ChatHeader;\nconst ChatMessages = styled.div`\n  flex: 1;\n  padding: 16px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n`;\n_c7 = ChatMessages;\nconst ChatInput = styled.div`\n  border-top: 2px solid ${props => props.theme.colors.border};\n`;\n_c8 = ChatInput;\nconst LogoutButton = styled.button`\n  background: none;\n  border: 2px solid ${props => props.theme.colors.error};\n  color: ${props => props.theme.colors.error};\n  padding: 4px 8px;\n  font-family: 'VT323', monospace;\n  cursor: pointer;\n  text-transform: uppercase;\n\n  &:hover {\n    background: ${props => props.theme.colors.error};\n    color: ${props => props.theme.colors.background};\n  }\n`;\n_c9 = LogoutButton;\nconst ChannelHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n\n  h2 {\n    margin: 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n_c10 = ChannelHeader;\nconst CreateChannelButton = styled(Button)`\n  padding: 2px 8px;\n  font-size: 0.875rem;\n`;\n_c11 = CreateChannelButton;\nconst NoChannelMessage = styled.div`\n  text-align: center;\n  padding: 20px;\n  color: ${props => props.theme.colors.secondary};\n  font-family: 'Courier New', monospace;\n`;\n_c12 = NoChannelMessage;\nconst LoadingMessage = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.textSecondary};\n  font-family: 'Courier New', monospace;\n  font-style: italic;\n`;\n_c13 = LoadingMessage;\nconst transformMessage = (msg, users) => {\n  return {\n    id: msg.id,\n    content: msg.content,\n    sender: users[msg.sender_id.toString()] || {\n      id: msg.sender_id,\n      username: 'Unknown User',\n      email: '',\n      full_name: 'Unknown User',\n      status: 'offline',\n      last_seen: msg.created_at\n    },\n    channel_id: msg.channel_id,\n    created_at: msg.created_at,\n    updated_at: msg.created_at\n  };\n};\nconst validateMessage = msg => {\n  const isValid = typeof msg === 'object' && msg !== null && typeof msg.id === 'number' && typeof msg.content === 'string' && typeof msg.channel_id === 'number' && typeof msg.created_at === 'string' && msg.sender && typeof msg.sender === 'object';\n  if (!isValid) {\n    console.error('Invalid message format:', msg);\n  }\n  return isValid;\n};\nconst MainLayout = () => {\n  _s();\n  const dispatch = useDispatch();\n  const messagesEndRef = useRef(null);\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [hasMoreMessages, setHasMoreMessages] = useState(true);\n  const MESSAGES_PER_PAGE = 30;\n  const activeChannelId = useSelector(state => state.chat.activeChannelId);\n  const channels = useSelector(state => state.chat.channels);\n  const users = useSelector(state => state.chat.users);\n  const messages = useSelector(state => {\n    const channelMessages = state.chat.messages[(activeChannelId === null || activeChannelId === void 0 ? void 0 : activeChannelId.toString()) || ''] || [];\n\n    // Transform messages if they have sender_id instead of sender\n    const transformedMessages = channelMessages.map(msg => {\n      if ('sender_id' in msg) {\n        return transformMessage(msg, users);\n      }\n      return msg;\n    });\n\n    // Validate message format\n    return transformedMessages.filter(validateMessage);\n  });\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    const messageHandler = data => {\n      if (data.type === 'message' && data.id && data.content && data.sender_id && data.channel_id) {\n        const rawMessage = {\n          id: data.id,\n          content: data.content,\n          sender_id: data.sender_id,\n          channel_id: data.channel_id,\n          created_at: data.created_at || new Date().toISOString(),\n          is_system: data.is_system\n        };\n        const transformedMessage = transformMessage(rawMessage, users);\n        dispatch(addMessage({\n          channelId: rawMessage.channel_id.toString(),\n          message: transformedMessage\n        }));\n        if (rawMessage.channel_id === activeChannelId) {\n          scrollToBottom();\n        }\n      }\n    };\n    wsService.on('message', messageHandler);\n    return () => {\n      wsService.off('message', messageHandler);\n    };\n  }, [dispatch, users, activeChannelId]);\n  const handleChannelClick = async channelId => {\n    if (channelId === activeChannelId) return;\n    console.log('Switching to channel:', channelId);\n    dispatch(setActiveChannel(channelId));\n    setHasMoreMessages(true);\n    try {\n      const [messagesData, usersData] = await Promise.all([getChannelMessages(channelId, MESSAGES_PER_PAGE), getChannelUsers(channelId)]);\n      console.log('Channel messages:', messagesData);\n      console.log('Channel users:', usersData);\n      dispatch(setMessages({\n        channelId,\n        messages: messagesData.sort((a, b) => new Date(a.created_at).getTime() - new Date(b.created_at).getTime())\n      }));\n      dispatch(setUsers(usersData));\n      wsService.joinChannel(channelId);\n      setHasMoreMessages(messagesData.length === MESSAGES_PER_PAGE);\n      scrollToBottom();\n    } catch (error) {\n      console.error('Failed to fetch channel data:', error);\n    }\n  };\n\n  // Scroll to bottom on initial load and channel change\n  useEffect(() => {\n    scrollToBottom();\n  }, [activeChannelId]);\n  const handleLogout = () => {\n    wsService.disconnect();\n    dispatch(logout());\n  };\n  const activeChannel = channels.find(c => c.id === activeChannelId);\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(ChannelList, {\n        children: [/*#__PURE__*/_jsxDEV(ChannelHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Channels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CreateChannelButton, {\n            variant: \"secondary\",\n            size: \"small\",\n            onClick: () => setIsCreateModalOpen(true),\n            children: \"+New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), channels.map(channel => /*#__PURE__*/_jsxDEV(ChannelListItem, {\n          name: channel.name,\n          isActive: channel.id === activeChannelId,\n          hasUnread: false // TODO: Implement unread tracking\n          ,\n          isDirect: channel.is_direct_message,\n          onClick: () => handleChannelClick(channel.id)\n        }, channel.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserList, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Online Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), Object.values(users).map(user => /*#__PURE__*/_jsxDEV(UserListItem, {\n          username: user.username,\n          status: user.status\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatArea, {\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: activeChannel ? `${activeChannel.is_direct_message ? '@' : '#'}${activeChannel.name}` : 'Select a channel'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatMessages, {\n        children: !activeChannel ? /*#__PURE__*/_jsxDEV(NoChannelMessage, {\n          children: channels.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"Welcome to SERMO! Click the \\\"+New\\\" button above to create your first channel.\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"Select a channel from the sidebar to start chatting.\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [isLoadingMore && /*#__PURE__*/_jsxDEV(LoadingMessage, {\n            children: \"Loading older messages...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 17\n          }, this), console.log('Rendering messages:', messages), messages.map(msg => {\n            console.log('Rendering message:', msg);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              id: `message-${msg.id}`,\n              children: /*#__PURE__*/_jsxDEV(ChatMessage, {\n                content: msg.content,\n                sender: msg.sender.username,\n                timestamp: msg.created_at,\n                isSystem: msg.is_system\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 21\n              }, this)\n            }, msg.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 19\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef,\n            style: {\n              height: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        children: activeChannel && /*#__PURE__*/_jsxDEV(MessageInput, {\n          channelId: activeChannel.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateChannelModal, {\n      isOpen: isCreateModalOpen,\n      onClose: () => setIsCreateModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n};\n_s(MainLayout, \"0M4pKafa1IMVkBA/852tkCmvdXA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c14 = MainLayout;\nexport default MainLayout;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14;\n$RefreshReg$(_c, \"MainContainer\");\n$RefreshReg$(_c2, \"Sidebar\");\n$RefreshReg$(_c3, \"ChannelList\");\n$RefreshReg$(_c4, \"UserList\");\n$RefreshReg$(_c5, \"ChatArea\");\n$RefreshReg$(_c6, \"ChatHeader\");\n$RefreshReg$(_c7, \"ChatMessages\");\n$RefreshReg$(_c8, \"ChatInput\");\n$RefreshReg$(_c9, \"LogoutButton\");\n$RefreshReg$(_c10, \"ChannelHeader\");\n$RefreshReg$(_c11, \"CreateChannelButton\");\n$RefreshReg$(_c12, \"NoChannelMessage\");\n$RefreshReg$(_c13, \"LoadingMessage\");\n$RefreshReg$(_c14, \"MainLayout\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","useDispatch","useSelector","logout","setActiveChannel","addMessage","setMessages","setUsers","Button","ChatMessage","UserListItem","ChannelListItem","CreateChannelModal","MessageInput","wsService","getChannelMessages","getChannelUsers","jsxDEV","_jsxDEV","Fragment","_Fragment","MainContainer","div","props","theme","colors","background","text","_c","Sidebar","border","_c2","ChannelList","primary","_c3","UserList","_c4","ChatArea","_c5","ChatHeader","_c6","ChatMessages","_c7","ChatInput","_c8","LogoutButton","button","error","_c9","ChannelHeader","_c10","CreateChannelButton","_c11","NoChannelMessage","secondary","_c12","LoadingMessage","textSecondary","_c13","transformMessage","msg","users","id","content","sender","sender_id","toString","username","email","full_name","status","last_seen","created_at","channel_id","updated_at","validateMessage","isValid","console","MainLayout","_s","dispatch","messagesEndRef","isCreateModalOpen","setIsCreateModalOpen","isLoadingMore","setIsLoadingMore","hasMoreMessages","setHasMoreMessages","MESSAGES_PER_PAGE","activeChannelId","state","chat","channels","messages","channelMessages","transformedMessages","map","filter","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","messageHandler","data","type","rawMessage","Date","toISOString","is_system","transformedMessage","channelId","message","on","off","handleChannelClick","log","messagesData","usersData","Promise","all","sort","a","b","getTime","joinChannel","length","handleLogout","disconnect","activeChannel","find","c","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","onClick","channel","name","isActive","hasUnread","isDirect","is_direct_message","Object","values","user","timestamp","isSystem","ref","style","height","isOpen","onClose","_c14","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/layout/MainLayout/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../../store/auth/authSlice';\nimport {\n  setActiveChannel,\n  setChannels,\n  addMessage,\n  setMessages,\n  setUsers,\n  updateUserStatus\n} from '../../../store/chat/chatSlice';\nimport Button from '../../common/Button';\nimport ChatMessage from '../../common/ChatMessage';\nimport UserListItem from '../../common/UserListItem';\nimport ChannelListItem from '../../common/ChannelListItem';\nimport CreateChannelModal from '../../chat/CreateChannelModal';\nimport MessageInput from '../../chat/MessageInput';\nimport wsService from '../../../services/websocket';\nimport { getChannels, getChannelMessages, getChannelUsers } from '../../../services/api/chat';\nimport { Message, WebSocketMessage, User, RootState } from '../../../types';\n\nconst MainContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'VT323', monospace;\n`;\n\nconst Sidebar = styled.div`\n  width: 200px;\n  border-right: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ChannelList = styled.div`\n  flex: 1;\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst UserList = styled.div`\n  height: 200px;\n  padding: 16px;\n  border-top: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst ChatArea = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst ChatHeader = styled.div`\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h1 {\n    margin: 0;\n    text-transform: uppercase;\n  }\n`;\n\nconst ChatMessages = styled.div`\n  flex: 1;\n  padding: 16px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n`;\n\nconst ChatInput = styled.div`\n  border-top: 2px solid ${props => props.theme.colors.border};\n`;\n\nconst LogoutButton = styled.button`\n  background: none;\n  border: 2px solid ${props => props.theme.colors.error};\n  color: ${props => props.theme.colors.error};\n  padding: 4px 8px;\n  font-family: 'VT323', monospace;\n  cursor: pointer;\n  text-transform: uppercase;\n\n  &:hover {\n    background: ${props => props.theme.colors.error};\n    color: ${props => props.theme.colors.background};\n  }\n`;\n\nconst ChannelHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n\n  h2 {\n    margin: 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst CreateChannelButton = styled(Button)`\n  padding: 2px 8px;\n  font-size: 0.875rem;\n`;\n\nconst NoChannelMessage = styled.div`\n  text-align: center;\n  padding: 20px;\n  color: ${props => props.theme.colors.secondary};\n  font-family: 'Courier New', monospace;\n`;\n\nconst LoadingMessage = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.textSecondary};\n  font-family: 'Courier New', monospace;\n  font-style: italic;\n`;\n\ninterface RawMessage {\n  id: number;\n  content: string;\n  sender_id: number;\n  channel_id: number;\n  created_at: string;\n  is_system?: boolean;\n}\n\nconst transformMessage = (msg: RawMessage, users: { [key: string]: User }): Message => {\n  return {\n    id: msg.id,\n    content: msg.content,\n    sender: users[msg.sender_id.toString()] || {\n      id: msg.sender_id,\n      username: 'Unknown User',\n      email: '',\n      full_name: 'Unknown User',\n      status: 'offline',\n      last_seen: msg.created_at\n    },\n    channel_id: msg.channel_id,\n    created_at: msg.created_at,\n    updated_at: msg.created_at\n  };\n};\n\nconst validateMessage = (msg: any): msg is Message => {\n  const isValid = (\n    typeof msg === 'object' &&\n    msg !== null &&\n    typeof msg.id === 'number' &&\n    typeof msg.content === 'string' &&\n    typeof msg.channel_id === 'number' &&\n    typeof msg.created_at === 'string' &&\n    msg.sender && typeof msg.sender === 'object'\n  );\n\n  if (!isValid) {\n    console.error('Invalid message format:', msg);\n  }\n\n  return isValid;\n};\n\nconst MainLayout: React.FC = () => {\n  const dispatch = useDispatch();\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [hasMoreMessages, setHasMoreMessages] = useState(true);\n  const MESSAGES_PER_PAGE = 30;\n\n  const activeChannelId = useSelector((state: RootState) => state.chat.activeChannelId);\n  const channels = useSelector((state: RootState) => state.chat.channels);\n  const users = useSelector((state: RootState) => state.chat.users);\n  const messages = useSelector((state: RootState) => {\n    const channelMessages = state.chat.messages[activeChannelId?.toString() || ''] || [];\n    \n    // Transform messages if they have sender_id instead of sender\n    const transformedMessages = channelMessages.map((msg: any) => {\n      if ('sender_id' in msg) {\n        return transformMessage(msg as RawMessage, users);\n      }\n      return msg;\n    });\n    \n    // Validate message format\n    return transformedMessages.filter(validateMessage);\n  });\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    const messageHandler = (data: WebSocketMessage) => {\n      if (data.type === 'message' && data.id && data.content && data.sender_id && data.channel_id) {\n        const rawMessage: RawMessage = {\n          id: data.id,\n          content: data.content,\n          sender_id: data.sender_id,\n          channel_id: data.channel_id,\n          created_at: data.created_at || new Date().toISOString(),\n          is_system: data.is_system\n        };\n        \n        const transformedMessage = transformMessage(rawMessage, users);\n        dispatch(addMessage({ \n          channelId: rawMessage.channel_id.toString(), \n          message: transformedMessage \n        }));\n        \n        if (rawMessage.channel_id === activeChannelId) {\n          scrollToBottom();\n        }\n      }\n    };\n\n    wsService.on('message', messageHandler);\n    return () => {\n      wsService.off('message', messageHandler);\n    };\n  }, [dispatch, users, activeChannelId]);\n\n  const handleChannelClick = async (channelId: number) => {\n    if (channelId === activeChannelId) return;\n    \n    console.log('Switching to channel:', channelId);\n    dispatch(setActiveChannel(channelId));\n    setHasMoreMessages(true);\n    try {\n      const [messagesData, usersData] = await Promise.all([\n        getChannelMessages(channelId, MESSAGES_PER_PAGE),\n        getChannelUsers(channelId)\n      ]);\n      \n      console.log('Channel messages:', messagesData);\n      console.log('Channel users:', usersData);\n      \n      dispatch(setMessages({ \n        channelId, \n        messages: messagesData.sort((a, b) => \n          new Date(a.created_at).getTime() - new Date(b.created_at).getTime()\n        )\n      }));\n      dispatch(setUsers(usersData));\n      wsService.joinChannel(channelId);\n      setHasMoreMessages(messagesData.length === MESSAGES_PER_PAGE);\n      scrollToBottom();\n    } catch (error) {\n      console.error('Failed to fetch channel data:', error);\n    }\n  };\n\n  // Scroll to bottom on initial load and channel change\n  useEffect(() => {\n    scrollToBottom();\n  }, [activeChannelId]);\n\n  const handleLogout = () => {\n    wsService.disconnect();\n    dispatch(logout());\n  };\n\n  const activeChannel = channels.find((c: any) => c.id === activeChannelId);\n\n  return (\n    <MainContainer>\n      <Sidebar>\n        <ChannelList>\n          <ChannelHeader>\n            <h2>Channels</h2>\n            <CreateChannelButton\n              variant=\"secondary\"\n              size=\"small\"\n              onClick={() => setIsCreateModalOpen(true)}\n            >\n              +New\n            </CreateChannelButton>\n          </ChannelHeader>\n          {channels.map((channel: any) => (\n            <ChannelListItem\n              key={channel.id}\n              name={channel.name}\n              isActive={channel.id === activeChannelId}\n              hasUnread={false} // TODO: Implement unread tracking\n              isDirect={channel.is_direct_message}\n              onClick={() => handleChannelClick(channel.id)}\n            />\n          ))}\n        </ChannelList>\n        <UserList>\n          <h2>Online Users</h2>\n          {Object.values(users).map((user: any) => (\n            <UserListItem\n              key={user.id}\n              username={user.username}\n              status={user.status}\n            />\n          ))}\n        </UserList>\n      </Sidebar>\n      <ChatArea>\n        <ChatHeader>\n          <h1>{activeChannel ? `${activeChannel.is_direct_message ? '@' : '#'}${activeChannel.name}` : 'Select a channel'}</h1>\n          <LogoutButton onClick={handleLogout}>Logout</LogoutButton>\n        </ChatHeader>\n        <ChatMessages>\n          {!activeChannel ? (\n            <NoChannelMessage>\n              {channels.length === 0 ? (\n                <>\n                  Welcome to SERMO! Click the \"+New\" button above to create your first channel.\n                </>\n              ) : (\n                <>\n                  Select a channel from the sidebar to start chatting.\n                </>\n              )}\n            </NoChannelMessage>\n          ) : (\n            <>\n              {isLoadingMore && (\n                <LoadingMessage>Loading older messages...</LoadingMessage>\n              )}\n              {console.log('Rendering messages:', messages)}\n              {messages.map((msg: Message) => {\n                console.log('Rendering message:', msg);\n                return (\n                  <div key={msg.id} id={`message-${msg.id}`}>\n                    <ChatMessage\n                      content={msg.content}\n                      sender={msg.sender.username}\n                      timestamp={msg.created_at}\n                      isSystem={msg.is_system}\n                    />\n                  </div>\n                );\n              })}\n              <div ref={messagesEndRef} style={{ height: 1 }} />\n            </>\n          )}\n        </ChatMessages>\n        <ChatInput>\n          {activeChannel && (\n            <MessageInput\n              channelId={activeChannel.id}\n            />\n          )}\n        </ChatInput>\n      </ChatArea>\n      <CreateChannelModal\n        isOpen={isCreateModalOpen}\n        onClose={() => setIsCreateModalOpen(false)}\n      />\n    </MainContainer>\n  );\n};\n\nexport default MainLayout; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}