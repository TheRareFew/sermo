{"ast":null,"code":"export const transformMessage = message => {\n  console.log('Transforming message:', message);\n\n  // Ensure reactions is an array\n  const reactions = Array.isArray(message.reactions) ? message.reactions : [];\n  console.log('Transformed reactions:', reactions);\n\n  // Handle both Message and RawMessage types\n  const channelId = 'channel_id' in message ? message.channel_id : 'channelId' in message ? message.channelId : '';\n  const userId = 'sender_id' in message ? message.sender_id : 'userId' in message ? message.userId : '';\n  const createdAt = 'created_at' in message ? message.created_at : 'createdAt' in message ? message.createdAt : new Date().toISOString();\n  const updatedAt = 'updated_at' in message ? message.updated_at : 'updatedAt' in message ? message.updatedAt : createdAt;\n  const parentId = 'parent_id' in message ? message.parent_id : 'parentId' in message ? message.parentId : undefined;\n  const replyCount = 'reply_count' in message ? message.reply_count : 'replyCount' in message ? message.replyCount : 0;\n  return {\n    id: message.id.toString(),\n    content: message.content,\n    channelId: channelId.toString(),\n    userId: userId.toString(),\n    createdAt,\n    updatedAt: updatedAt || createdAt,\n    parentId: parentId ? parentId.toString() : undefined,\n    replyCount: replyCount || 0,\n    isExpanded: 'isExpanded' in message ? message.isExpanded : false,\n    repliesLoaded: 'repliesLoaded' in message ? message.repliesLoaded : false,\n    replies: 'replies' in message ? message.replies || [] : [],\n    reactions,\n    attachments: message.attachments || []\n  };\n};","map":{"version":3,"names":["transformMessage","message","console","log","reactions","Array","isArray","channelId","channel_id","userId","sender_id","createdAt","created_at","Date","toISOString","updatedAt","updated_at","parentId","parent_id","undefined","replyCount","reply_count","id","toString","content","isExpanded","repliesLoaded","replies","attachments"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/utils/messageTransform.ts"],"sourcesContent":["import { RawMessage, StoreMessage, Reaction, Message } from '../types';\n\nexport const transformMessage = (message: RawMessage | Message): StoreMessage => {\n  console.log('Transforming message:', message);\n  \n  // Ensure reactions is an array\n  const reactions = Array.isArray(message.reactions) ? message.reactions : [];\n  console.log('Transformed reactions:', reactions);\n  \n  // Handle both Message and RawMessage types\n  const channelId = 'channel_id' in message ? message.channel_id : \n    ('channelId' in message ? message.channelId : '');\n    \n  const userId = 'sender_id' in message ? message.sender_id : \n    ('userId' in message ? message.userId : '');\n    \n  const createdAt = 'created_at' in message ? message.created_at : \n    ('createdAt' in message ? message.createdAt : new Date().toISOString());\n    \n  const updatedAt = 'updated_at' in message ? message.updated_at : \n    ('updatedAt' in message ? message.updatedAt : createdAt);\n    \n  const parentId = 'parent_id' in message ? message.parent_id : \n    ('parentId' in message ? message.parentId : undefined);\n    \n  const replyCount = 'reply_count' in message ? message.reply_count : \n    ('replyCount' in message ? message.replyCount : 0);\n  \n  return {\n    id: message.id.toString(),\n    content: message.content,\n    channelId: channelId.toString(),\n    userId: userId.toString(),\n    createdAt,\n    updatedAt: updatedAt || createdAt,\n    parentId: parentId ? parentId.toString() : undefined,\n    replyCount: replyCount || 0,\n    isExpanded: 'isExpanded' in message ? message.isExpanded : false,\n    repliesLoaded: 'repliesLoaded' in message ? message.repliesLoaded : false,\n    replies: 'replies' in message ? message.replies || [] : [],\n    reactions,\n    attachments: message.attachments || []\n  };\n}; "],"mappings":"AAEA,OAAO,MAAMA,gBAAgB,GAAIC,OAA6B,IAAmB;EAC/EC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,OAAO,CAAC;;EAE7C;EACA,MAAMG,SAAS,GAAGC,KAAK,CAACC,OAAO,CAACL,OAAO,CAACG,SAAS,CAAC,GAAGH,OAAO,CAACG,SAAS,GAAG,EAAE;EAC3EF,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,SAAS,CAAC;;EAEhD;EACA,MAAMG,SAAS,GAAG,YAAY,IAAIN,OAAO,GAAGA,OAAO,CAACO,UAAU,GAC3D,WAAW,IAAIP,OAAO,GAAGA,OAAO,CAACM,SAAS,GAAG,EAAG;EAEnD,MAAME,MAAM,GAAG,WAAW,IAAIR,OAAO,GAAGA,OAAO,CAACS,SAAS,GACtD,QAAQ,IAAIT,OAAO,GAAGA,OAAO,CAACQ,MAAM,GAAG,EAAG;EAE7C,MAAME,SAAS,GAAG,YAAY,IAAIV,OAAO,GAAGA,OAAO,CAACW,UAAU,GAC3D,WAAW,IAAIX,OAAO,GAAGA,OAAO,CAACU,SAAS,GAAG,IAAIE,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAE;EAEzE,MAAMC,SAAS,GAAG,YAAY,IAAId,OAAO,GAAGA,OAAO,CAACe,UAAU,GAC3D,WAAW,IAAIf,OAAO,GAAGA,OAAO,CAACc,SAAS,GAAGJ,SAAU;EAE1D,MAAMM,QAAQ,GAAG,WAAW,IAAIhB,OAAO,GAAGA,OAAO,CAACiB,SAAS,GACxD,UAAU,IAAIjB,OAAO,GAAGA,OAAO,CAACgB,QAAQ,GAAGE,SAAU;EAExD,MAAMC,UAAU,GAAG,aAAa,IAAInB,OAAO,GAAGA,OAAO,CAACoB,WAAW,GAC9D,YAAY,IAAIpB,OAAO,GAAGA,OAAO,CAACmB,UAAU,GAAG,CAAE;EAEpD,OAAO;IACLE,EAAE,EAAErB,OAAO,CAACqB,EAAE,CAACC,QAAQ,CAAC,CAAC;IACzBC,OAAO,EAAEvB,OAAO,CAACuB,OAAO;IACxBjB,SAAS,EAAEA,SAAS,CAACgB,QAAQ,CAAC,CAAC;IAC/Bd,MAAM,EAAEA,MAAM,CAACc,QAAQ,CAAC,CAAC;IACzBZ,SAAS;IACTI,SAAS,EAAEA,SAAS,IAAIJ,SAAS;IACjCM,QAAQ,EAAEA,QAAQ,GAAGA,QAAQ,CAACM,QAAQ,CAAC,CAAC,GAAGJ,SAAS;IACpDC,UAAU,EAAEA,UAAU,IAAI,CAAC;IAC3BK,UAAU,EAAE,YAAY,IAAIxB,OAAO,GAAGA,OAAO,CAACwB,UAAU,GAAG,KAAK;IAChEC,aAAa,EAAE,eAAe,IAAIzB,OAAO,GAAGA,OAAO,CAACyB,aAAa,GAAG,KAAK;IACzEC,OAAO,EAAE,SAAS,IAAI1B,OAAO,GAAGA,OAAO,CAAC0B,OAAO,IAAI,EAAE,GAAG,EAAE;IAC1DvB,SAAS;IACTwB,WAAW,EAAE3B,OAAO,CAAC2B,WAAW,IAAI;EACtC,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}