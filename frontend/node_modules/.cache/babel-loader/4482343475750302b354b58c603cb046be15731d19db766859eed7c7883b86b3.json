{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  users: [],\n  onlineUsers: [],\n  loading: false,\n  error: null\n};\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    fetchUsersStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchUsersSuccess: (state, action) => {\n      state.users = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    fetchUsersFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    updateUserPresence: (state, action) => {\n      const user = state.users.find(u => u.id === action.payload.userId);\n      if (user) {\n        user.status = action.payload.status;\n        if (action.payload.status === 'online') {\n          if (!state.onlineUsers.includes(action.payload.userId)) {\n            state.onlineUsers.push(action.payload.userId);\n          }\n        } else {\n          state.onlineUsers = state.onlineUsers.filter(id => id !== action.payload.userId);\n        }\n      }\n    },\n    addUser: (state, action) => {\n      const exists = state.users.some(user => user.id === action.payload.id);\n      if (!exists) {\n        state.users.push(action.payload);\n        if (action.payload.status === 'online') {\n          state.onlineUsers.push(action.payload.id);\n        }\n      }\n    },\n    removeUser: (state, action) => {\n      state.users = state.users.filter(user => user.id !== action.payload);\n      state.onlineUsers = state.onlineUsers.filter(id => id !== action.payload);\n    }\n  }\n});\nexport const {\n  fetchUsersStart,\n  fetchUsersSuccess,\n  fetchUsersFailure,\n  updateUserPresence,\n  addUser,\n  removeUser\n} = usersSlice.actions;\nexport default usersSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","users","onlineUsers","loading","error","usersSlice","name","reducers","fetchUsersStart","state","fetchUsersSuccess","action","payload","fetchUsersFailure","updateUserPresence","user","find","u","id","userId","status","includes","push","filter","addUser","exists","some","removeUser","actions","reducer"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/store/users/usersSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { UsersState, User } from '../types';\r\n\r\nconst initialState: UsersState = {\r\n  users: [],\r\n  onlineUsers: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState,\r\n  reducers: {\r\n    fetchUsersStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    fetchUsersSuccess: (state, action: PayloadAction<User[]>) => {\r\n      state.users = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    fetchUsersFailure: (state, action: PayloadAction<string>) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n    updateUserPresence: (state, action: PayloadAction<{ userId: string; status: User['status'] }>) => {\r\n      const user = state.users.find(u => u.id === action.payload.userId);\r\n      if (user) {\r\n        user.status = action.payload.status;\r\n        if (action.payload.status === 'online') {\r\n          if (!state.onlineUsers.includes(action.payload.userId)) {\r\n            state.onlineUsers.push(action.payload.userId);\r\n          }\r\n        } else {\r\n          state.onlineUsers = state.onlineUsers.filter(id => id !== action.payload.userId);\r\n        }\r\n      }\r\n    },\r\n    addUser: (state, action: PayloadAction<User>) => {\r\n      const exists = state.users.some(user => user.id === action.payload.id);\r\n      if (!exists) {\r\n        state.users.push(action.payload);\r\n        if (action.payload.status === 'online') {\r\n          state.onlineUsers.push(action.payload.id);\r\n        }\r\n      }\r\n    },\r\n    removeUser: (state, action: PayloadAction<string>) => {\r\n      state.users = state.users.filter(user => user.id !== action.payload);\r\n      state.onlineUsers = state.onlineUsers.filter(id => id !== action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  fetchUsersStart,\r\n  fetchUsersSuccess,\r\n  fetchUsersFailure,\r\n  updateUserPresence,\r\n  addUser,\r\n  removeUser,\r\n} = usersSlice.actions;\r\n\r\nexport default usersSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}