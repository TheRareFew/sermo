{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  token: null,\n  loading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n      state.isAuthenticated = !!action.payload;\n    },\n    setToken: (state, action) => {\n      state.token = action.payload;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.error = null;\n    }\n  }\n});\nexport const {\n  setUser,\n  setToken,\n  setLoading,\n  setError,\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","user","isAuthenticated","token","loading","error","authSlice","name","reducers","setUser","state","action","payload","setToken","setLoading","setError","logout","actions","reducer"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/store/auth/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AuthState, User } from '../../types';\r\n\r\nconst initialState: AuthState = {\r\n  user: null,\r\n  isAuthenticated: false,\r\n  token: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    setUser: (state, action: PayloadAction<User | null>) => {\r\n      state.user = action.payload;\r\n      state.isAuthenticated = !!action.payload;\r\n    },\r\n    setToken: (state, action: PayloadAction<string | null>) => {\r\n      state.token = action.payload;\r\n    },\r\n    setLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setError: (state, action: PayloadAction<string | null>) => {\r\n      state.error = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.token = null;\r\n      state.isAuthenticated = false;\r\n      state.error = null;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setUser, setToken, setLoading, setError, logout } = authSlice.actions;\r\n\r\nexport default authSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAG7D,MAAMC,YAAuB,GAAG;EAC9BC,IAAI,EAAE,IAAI;EACVC,eAAe,EAAE,KAAK;EACtBC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAkC,KAAK;MACtDD,KAAK,CAACT,IAAI,GAAGU,MAAM,CAACC,OAAO;MAC3BF,KAAK,CAACR,eAAe,GAAG,CAAC,CAACS,MAAM,CAACC,OAAO;IAC1C,CAAC;IACDC,QAAQ,EAAEA,CAACH,KAAK,EAAEC,MAAoC,KAAK;MACzDD,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDE,UAAU,EAAEA,CAACJ,KAAK,EAAEC,MAA8B,KAAK;MACrDD,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO;IAChC,CAAC;IACDG,QAAQ,EAAEA,CAACL,KAAK,EAAEC,MAAoC,KAAK;MACzDD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDI,MAAM,EAAGN,KAAK,IAAK;MACjBA,KAAK,CAACT,IAAI,GAAG,IAAI;MACjBS,KAAK,CAACP,KAAK,GAAG,IAAI;MAClBO,KAAK,CAACR,eAAe,GAAG,KAAK;MAC7BQ,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,OAAO;EAAEI,QAAQ;EAAEC,UAAU;EAAEC,QAAQ;EAAEC;AAAO,CAAC,GAAGV,SAAS,CAACW,OAAO;AAEpF,eAAeX,SAAS,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}