{"ast":null,"code":"import { apiRequest } from './utils';\n// Transform API user to our User type\nconst transformUser = apiUser => ({\n  ...apiUser,\n  email: '',\n  // Set default values for required fields that the channel API doesn't provide\n  full_name: apiUser.username // Use username as full_name if not provided\n});\nexport const getChannels = async () => {\n  return apiRequest('/api/channels/');\n};\nexport const getChannelMessages = async (channelId, limit = 50) => {\n  return apiRequest(`/api/channels/${channelId}/messages?limit=${limit}`);\n};\nexport const getChannelUsers = async channelId => {\n  const apiUsers = await apiRequest(`/api/channels/${channelId}/users`);\n  return apiUsers.map(transformUser);\n};\nexport const createChannel = async (name, description) => {\n  return apiRequest('/api/channels/', {\n    method: 'POST',\n    body: JSON.stringify({\n      name,\n      description\n    })\n  });\n};\nexport const joinChannel = async channelId => {\n  await apiRequest(`/api/channels/${channelId}/join`, {\n    method: 'POST'\n  });\n};\nexport const leaveChannel = async channelId => {\n  await apiRequest(`/api/channels/${channelId}/leave`, {\n    method: 'POST'\n  });\n};","map":{"version":3,"names":["apiRequest","transformUser","apiUser","email","full_name","username","getChannels","getChannelMessages","channelId","limit","getChannelUsers","apiUsers","map","createChannel","name","description","method","body","JSON","stringify","joinChannel","leaveChannel"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/services/api/chat.ts"],"sourcesContent":["import { Channel, Message, User } from '../../types';\r\nimport { apiRequest } from './utils';\r\n\r\ninterface ApiUser {\r\n  id: number;\r\n  username: string;\r\n  status: 'online' | 'offline' | 'away' | 'busy';\r\n  last_seen: string;\r\n}\r\n\r\n// Transform API user to our User type\r\nconst transformUser = (apiUser: ApiUser): User => ({\r\n  ...apiUser,\r\n  email: '', // Set default values for required fields that the channel API doesn't provide\r\n  full_name: apiUser.username, // Use username as full_name if not provided\r\n});\r\n\r\nexport const getChannels = async (): Promise<Channel[]> => {\r\n  return apiRequest<Channel[]>('/api/channels/');\r\n};\r\n\r\nexport const getChannelMessages = async (channelId: number, limit: number = 50): Promise<Message[]> => {\r\n  return apiRequest<Message[]>(`/api/channels/${channelId}/messages?limit=${limit}`);\r\n};\r\n\r\nexport const getChannelUsers = async (channelId: number): Promise<User[]> => {\r\n  const apiUsers = await apiRequest<ApiUser[]>(`/api/channels/${channelId}/users`);\r\n  return apiUsers.map(transformUser);\r\n};\r\n\r\nexport const createChannel = async (name: string, description?: string): Promise<Channel> => {\r\n  return apiRequest<Channel>('/api/channels/', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ name, description }),\r\n  });\r\n};\r\n\r\nexport const joinChannel = async (channelId: number): Promise<void> => {\r\n  await apiRequest(`/api/channels/${channelId}/join`, {\r\n    method: 'POST',\r\n  });\r\n};\r\n\r\nexport const leaveChannel = async (channelId: number): Promise<void> => {\r\n  await apiRequest(`/api/channels/${channelId}/leave`, {\r\n    method: 'POST',\r\n  });\r\n}; "],"mappings":"AACA,SAASA,UAAU,QAAQ,SAAS;AASpC;AACA,MAAMC,aAAa,GAAIC,OAAgB,KAAY;EACjD,GAAGA,OAAO;EACVC,KAAK,EAAE,EAAE;EAAE;EACXC,SAAS,EAAEF,OAAO,CAACG,QAAQ,CAAE;AAC/B,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAgC;EACzD,OAAON,UAAU,CAAY,gBAAgB,CAAC;AAChD,CAAC;AAED,OAAO,MAAMO,kBAAkB,GAAG,MAAAA,CAAOC,SAAiB,EAAEC,KAAa,GAAG,EAAE,KAAyB;EACrG,OAAOT,UAAU,CAAY,iBAAiBQ,SAAS,mBAAmBC,KAAK,EAAE,CAAC;AACpF,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,MAAOF,SAAiB,IAAsB;EAC3E,MAAMG,QAAQ,GAAG,MAAMX,UAAU,CAAY,iBAAiBQ,SAAS,QAAQ,CAAC;EAChF,OAAOG,QAAQ,CAACC,GAAG,CAACX,aAAa,CAAC;AACpC,CAAC;AAED,OAAO,MAAMY,aAAa,GAAG,MAAAA,CAAOC,IAAY,EAAEC,WAAoB,KAAuB;EAC3F,OAAOf,UAAU,CAAU,gBAAgB,EAAE;IAC3CgB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEL,IAAI;MAAEC;IAAY,CAAC;EAC5C,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMK,WAAW,GAAG,MAAOZ,SAAiB,IAAoB;EACrE,MAAMR,UAAU,CAAC,iBAAiBQ,SAAS,OAAO,EAAE;IAClDQ,MAAM,EAAE;EACV,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMK,YAAY,GAAG,MAAOb,SAAiB,IAAoB;EACtE,MAAMR,UAAU,CAAC,iBAAiBQ,SAAS,QAAQ,EAAE;IACnDQ,MAAM,EAAE;EACV,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}