{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, forwardRef, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Message from '../Message';\nimport MessageReplies from '../MessageReplies';\nimport { deleteMessage, toggleExpanded, prependMessages } from '../../../store/messages/messagesSlice';\nimport { deleteMessage as deleteMessageApi, getChannelMessages } from '../../../services/api/chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n_c = MessageListContainer;\nconst MessagesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: auto;\n`;\n_c2 = MessagesWrapper;\nconst LoadingIndicator = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.textLight};\n  font-family: 'Courier New', monospace;\n`;\n_c3 = LoadingIndicator;\nconst MessageWrapper = styled.div`\n  transition: background-color 0.3s ease;\n  padding: 4px;\n  border-radius: 4px;\n  background-color: ${props => props.$isSelected ? '#3a3a3a' : 'transparent'};\n`;\n_c4 = MessageWrapper;\nconst MessageList = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c5 = _s(({\n  messages,\n  selectedMessageId\n}, ref) => {\n  _s();\n  const dispatch = useDispatch();\n  const selectedMessageRef = useRef(null);\n  const containerRef = useRef(null);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [page, setPage] = useState(0);\n  const PAGE_SIZE = 50;\n  const {\n    currentUser,\n    users,\n    activeChannelId\n  } = useSelector(state => ({\n    currentUser: state.auth.user,\n    users: state.chat.users,\n    activeChannelId: state.chat.activeChannelId\n  }));\n\n  // Reset pagination when channel changes\n  useEffect(() => {\n    setPage(0);\n    setHasMore(true);\n  }, [activeChannelId]);\n  const loadMoreMessages = useCallback(async () => {\n    if (!activeChannelId || isLoadingMore || !hasMore) return;\n    try {\n      setIsLoadingMore(true);\n      console.log('[DEBUG] Loading more messages, page:', page + 1);\n\n      // Get current scroll position and height\n      const container = containerRef.current;\n      const oldScrollHeight = (container === null || container === void 0 ? void 0 : container.scrollHeight) || 0;\n      const oldScrollTop = (container === null || container === void 0 ? void 0 : container.scrollTop) || 0;\n\n      // Load more messages\n      const olderMessages = await getChannelMessages(activeChannelId, PAGE_SIZE, (page + 1) * PAGE_SIZE);\n      if (olderMessages.length < PAGE_SIZE) {\n        setHasMore(false);\n      }\n      if (olderMessages.length > 0) {\n        // Transform and prepend messages\n        dispatch(prependMessages({\n          channelId: activeChannelId,\n          messages: olderMessages.map(msg => ({\n            id: msg.id.toString(),\n            content: msg.content,\n            channelId: msg.channel_id.toString(),\n            userId: msg.sender_id.toString(),\n            reactions: [],\n            attachments: [],\n            createdAt: msg.created_at,\n            updatedAt: msg.created_at,\n            replyCount: msg.reply_count || 0,\n            isExpanded: false,\n            ...(msg.parent_id ? {\n              parentId: msg.parent_id.toString()\n            } : {})\n          }))\n        }));\n        setPage(p => p + 1);\n\n        // Maintain scroll position after new messages are loaded\n        setTimeout(() => {\n          if (container) {\n            const newScrollHeight = container.scrollHeight;\n            container.scrollTop = oldScrollTop + (newScrollHeight - oldScrollHeight);\n          }\n        }, 0);\n      }\n    } catch (error) {\n      console.error('Error loading more messages:', error);\n    } finally {\n      setIsLoadingMore(false);\n    }\n  }, [activeChannelId, isLoadingMore, hasMore, page, dispatch]);\n\n  // Handle scroll for infinite loading\n  const handleScroll = useCallback(event => {\n    const container = event.currentTarget;\n    if (container.scrollTop <= 100) {\n      // Load more when near top\n      loadMoreMessages();\n    }\n  }, [loadMoreMessages]);\n  useEffect(() => {\n    // Scroll to bottom on initial load or when new messages arrive\n    if (containerRef.current && page === 0) {\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\n    }\n  }, [messages, page]);\n  useEffect(() => {\n    // Scroll to selected message\n    if (selectedMessageId && selectedMessageRef.current) {\n      selectedMessageRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center'\n      });\n    }\n  }, [selectedMessageId]);\n  const handleDeleteMessage = async messageId => {\n    try {\n      await deleteMessageApi(messageId);\n      if (activeChannelId) {\n        dispatch(deleteMessage({\n          channelId: activeChannelId,\n          messageId\n        }));\n      }\n    } catch (error) {\n      console.error('Error deleting message:', error);\n    }\n  };\n  const handleToggleReplies = messageId => {\n    if (activeChannelId) {\n      dispatch(toggleExpanded({\n        channelId: activeChannelId,\n        messageId\n      }));\n    }\n  };\n  const handleReply = messageId => {\n    // TODO: Implement reply functionality\n    console.log('Reply to message:', messageId);\n  };\n  return /*#__PURE__*/_jsxDEV(MessageListContainer, {\n    ref: containerRef,\n    onScroll: handleScroll,\n    children: [isLoadingMore && /*#__PURE__*/_jsxDEV(LoadingIndicator, {\n      children: \"Loading older messages...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MessagesWrapper, {\n      children: messages.map(message => {\n        var _users$message$userId;\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(MessageWrapper, {\n            $isSelected: message.id === selectedMessageId,\n            ref: message.id === selectedMessageId ? selectedMessageRef : undefined,\n            children: /*#__PURE__*/_jsxDEV(Message, {\n              content: message.content,\n              sender: ((_users$message$userId = users[message.userId]) === null || _users$message$userId === void 0 ? void 0 : _users$message$userId.username) || message.userId,\n              timestamp: message.createdAt,\n              userId: message.userId,\n              currentUserId: currentUser === null || currentUser === void 0 ? void 0 : currentUser.id,\n              onDelete: () => handleDeleteMessage(message.id),\n              replyCount: message.replyCount,\n              isExpanded: message.isExpanded || false,\n              onToggleReplies: () => handleToggleReplies(message.id),\n              onReply: () => handleReply(message.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), message.isExpanded && message.replyCount > 0 && /*#__PURE__*/_jsxDEV(MessageReplies, {\n            parentId: message.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}, \"7WLOGuVRa4t88r+4pbgBTRARe9A=\", false, function () {\n  return [useDispatch, useSelector];\n})), \"7WLOGuVRa4t88r+4pbgBTRARe9A=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c6 = MessageList;\nMessageList.displayName = 'MessageList';\nexport default MessageList;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"MessageListContainer\");\n$RefreshReg$(_c2, \"MessagesWrapper\");\n$RefreshReg$(_c3, \"LoadingIndicator\");\n$RefreshReg$(_c4, \"MessageWrapper\");\n$RefreshReg$(_c5, \"MessageList$forwardRef\");\n$RefreshReg$(_c6, \"MessageList\");","map":{"version":3,"names":["React","useEffect","useRef","forwardRef","useState","useCallback","styled","useSelector","useDispatch","Message","MessageReplies","deleteMessage","toggleExpanded","prependMessages","deleteMessageApi","getChannelMessages","jsxDEV","_jsxDEV","MessageListContainer","div","_c","MessagesWrapper","_c2","LoadingIndicator","props","theme","colors","textLight","_c3","MessageWrapper","$isSelected","_c4","MessageList","_s","_c5","messages","selectedMessageId","ref","dispatch","selectedMessageRef","containerRef","isLoadingMore","setIsLoadingMore","hasMore","setHasMore","page","setPage","PAGE_SIZE","currentUser","users","activeChannelId","state","auth","user","chat","loadMoreMessages","console","log","container","current","oldScrollHeight","scrollHeight","oldScrollTop","scrollTop","olderMessages","length","channelId","map","msg","id","toString","content","channel_id","userId","sender_id","reactions","attachments","createdAt","created_at","updatedAt","replyCount","reply_count","isExpanded","parent_id","parentId","p","setTimeout","newScrollHeight","error","handleScroll","event","currentTarget","scrollIntoView","behavior","block","handleDeleteMessage","messageId","handleToggleReplies","handleReply","onScroll","children","fileName","_jsxFileName","lineNumber","columnNumber","message","_users$message$userId","Fragment","undefined","sender","username","timestamp","currentUserId","onDelete","onToggleReplies","onReply","_c6","displayName","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageList/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, forwardRef, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState, StoreMessage, User } from '../../../types';\nimport Message from '../Message';\nimport MessageReplies from '../MessageReplies';\nimport { deleteMessage, toggleExpanded, prependMessages } from '../../../store/messages/messagesSlice';\nimport { deleteMessage as deleteMessageApi, getChannelMessages } from '../../../services/api/chat';\n\ninterface MessageListProps {\n  messages: StoreMessage[];\n  selectedMessageId?: string | null;\n}\n\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nconst MessagesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: auto;\n`;\n\nconst LoadingIndicator = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.textLight};\n  font-family: 'Courier New', monospace;\n`;\n\nconst MessageWrapper = styled.div<{ $isSelected?: boolean }>`\n  transition: background-color 0.3s ease;\n  padding: 4px;\n  border-radius: 4px;\n  background-color: ${props => props.$isSelected ? '#3a3a3a' : 'transparent'};\n`;\n\nconst MessageList = forwardRef<HTMLDivElement, MessageListProps>(({ messages, selectedMessageId }, ref) => {\n  const dispatch = useDispatch();\n  const selectedMessageRef = useRef<HTMLDivElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [page, setPage] = useState(0);\n  const PAGE_SIZE = 50;\n\n  const { currentUser, users, activeChannelId } = useSelector((state: RootState) => ({\n    currentUser: state.auth.user,\n    users: state.chat.users as { [key: string]: User },\n    activeChannelId: state.chat.activeChannelId\n  }));\n\n  // Reset pagination when channel changes\n  useEffect(() => {\n    setPage(0);\n    setHasMore(true);\n  }, [activeChannelId]);\n\n  const loadMoreMessages = useCallback(async () => {\n    if (!activeChannelId || isLoadingMore || !hasMore) return;\n\n    try {\n      setIsLoadingMore(true);\n      console.log('[DEBUG] Loading more messages, page:', page + 1);\n\n      // Get current scroll position and height\n      const container = containerRef.current;\n      const oldScrollHeight = container?.scrollHeight || 0;\n      const oldScrollTop = container?.scrollTop || 0;\n\n      // Load more messages\n      const olderMessages = await getChannelMessages(activeChannelId, PAGE_SIZE, (page + 1) * PAGE_SIZE);\n      \n      if (olderMessages.length < PAGE_SIZE) {\n        setHasMore(false);\n      }\n\n      if (olderMessages.length > 0) {\n        // Transform and prepend messages\n        dispatch(prependMessages({ \n          channelId: activeChannelId, \n          messages: olderMessages.map(msg => ({\n            id: msg.id.toString(),\n            content: msg.content,\n            channelId: msg.channel_id.toString(),\n            userId: msg.sender_id.toString(),\n            reactions: [],\n            attachments: [],\n            createdAt: msg.created_at,\n            updatedAt: msg.created_at,\n            replyCount: msg.reply_count || 0,\n            isExpanded: false,\n            ...(msg.parent_id ? { parentId: msg.parent_id.toString() } : {})\n          }))\n        }));\n        setPage(p => p + 1);\n\n        // Maintain scroll position after new messages are loaded\n        setTimeout(() => {\n          if (container) {\n            const newScrollHeight = container.scrollHeight;\n            container.scrollTop = oldScrollTop + (newScrollHeight - oldScrollHeight);\n          }\n        }, 0);\n      }\n    } catch (error) {\n      console.error('Error loading more messages:', error);\n    } finally {\n      setIsLoadingMore(false);\n    }\n  }, [activeChannelId, isLoadingMore, hasMore, page, dispatch]);\n\n  // Handle scroll for infinite loading\n  const handleScroll = useCallback((event: React.UIEvent<HTMLDivElement>) => {\n    const container = event.currentTarget;\n    if (container.scrollTop <= 100) { // Load more when near top\n      loadMoreMessages();\n    }\n  }, [loadMoreMessages]);\n\n  useEffect(() => {\n    // Scroll to bottom on initial load or when new messages arrive\n    if (containerRef.current && page === 0) {\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\n    }\n  }, [messages, page]);\n\n  useEffect(() => {\n    // Scroll to selected message\n    if (selectedMessageId && selectedMessageRef.current) {\n      selectedMessageRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center'\n      });\n    }\n  }, [selectedMessageId]);\n\n  const handleDeleteMessage = async (messageId: string) => {\n    try {\n      await deleteMessageApi(messageId);\n      if (activeChannelId) {\n        dispatch(deleteMessage({ channelId: activeChannelId, messageId }));\n      }\n    } catch (error) {\n      console.error('Error deleting message:', error);\n    }\n  };\n\n  const handleToggleReplies = (messageId: string) => {\n    if (activeChannelId) {\n      dispatch(toggleExpanded({ channelId: activeChannelId, messageId }));\n    }\n  };\n\n  const handleReply = (messageId: string) => {\n    // TODO: Implement reply functionality\n    console.log('Reply to message:', messageId);\n  };\n\n  return (\n    <MessageListContainer ref={containerRef} onScroll={handleScroll}>\n      {isLoadingMore && (\n        <LoadingIndicator>Loading older messages...</LoadingIndicator>\n      )}\n      <MessagesWrapper>\n        {messages.map(message => (\n          <React.Fragment key={message.id}>\n            <MessageWrapper\n              $isSelected={message.id === selectedMessageId}\n              ref={message.id === selectedMessageId ? selectedMessageRef : undefined}\n            >\n              <Message\n                content={message.content}\n                sender={users[message.userId]?.username || message.userId}\n                timestamp={message.createdAt}\n                userId={message.userId}\n                currentUserId={currentUser?.id}\n                onDelete={() => handleDeleteMessage(message.id)}\n                replyCount={message.replyCount}\n                isExpanded={message.isExpanded || false}\n                onToggleReplies={() => handleToggleReplies(message.id)}\n                onReply={() => handleReply(message.id)}\n              />\n            </MessageWrapper>\n            {message.isExpanded && message.replyCount > 0 && (\n              <MessageReplies parentId={message.id} />\n            )}\n          </React.Fragment>\n        ))}\n      </MessagesWrapper>\n    </MessageListContainer>\n  );\n});\n\nMessageList.displayName = 'MessageList';\n\nexport default MessageList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}