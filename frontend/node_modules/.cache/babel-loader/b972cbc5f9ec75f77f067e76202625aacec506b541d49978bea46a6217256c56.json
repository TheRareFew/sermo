{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Message from '../Message';\nimport MessageReplies from '../MessageReplies';\nimport { deleteMessage, toggleExpanded } from '../../../store/messages/messagesSlice';\nimport { deleteMessage as deleteMessageApi } from '../../../services/api/chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n_c = MessageListContainer;\nconst MessageWrapper = styled.div`\n  transition: background-color 0.3s ease;\n  padding: 4px;\n  border-radius: 4px;\n  background-color: ${props => props.$isSelected ? '#3a3a3a' : 'transparent'};\n`;\n_c2 = MessageWrapper;\nconst MessageList = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c3 = _s(({\n  messages,\n  selectedMessageId\n}, ref) => {\n  _s();\n  const dispatch = useDispatch();\n  const selectedMessageRef = useRef(null);\n  console.log('[DEBUG] MessageList - Received messages:', messages);\n  const {\n    currentUser,\n    users,\n    activeChannelId\n  } = useSelector(state => ({\n    currentUser: state.auth.user,\n    users: state.chat.users,\n    activeChannelId: state.chat.activeChannelId\n  }));\n  console.log('[DEBUG] MessageList - Current state:', {\n    currentUser,\n    users,\n    activeChannelId\n  });\n  useEffect(() => {\n    // Scroll to bottom on initial load\n    if (ref && 'current' in ref && ref.current) {\n      ref.current.scrollTop = ref.current.scrollHeight;\n    }\n  }, [ref]);\n  useEffect(() => {\n    // Scroll to selected message\n    if (selectedMessageId && selectedMessageRef.current) {\n      selectedMessageRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center'\n      });\n    }\n  }, [selectedMessageId]);\n  const handleDeleteMessage = async messageId => {\n    try {\n      await deleteMessageApi(messageId);\n      if (activeChannelId) {\n        dispatch(deleteMessage({\n          channelId: activeChannelId,\n          messageId\n        }));\n      }\n    } catch (error) {\n      console.error('Error deleting message:', error);\n    }\n  };\n  const handleToggleReplies = messageId => {\n    if (activeChannelId) {\n      dispatch(toggleExpanded({\n        channelId: activeChannelId,\n        messageId\n      }));\n    }\n  };\n  const handleReply = messageId => {\n    // TODO: Implement reply functionality\n    console.log('Reply to message:', messageId);\n  };\n  console.log('[DEBUG] MessageList - About to render messages:', messages);\n  return /*#__PURE__*/_jsxDEV(MessageListContainer, {\n    ref: ref,\n    children: messages.map(message => {\n      var _users$message$userId;\n      console.log('[DEBUG] MessageList - Rendering message:', message);\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(MessageWrapper, {\n          $isSelected: message.id === selectedMessageId,\n          ref: message.id === selectedMessageId ? selectedMessageRef : undefined,\n          children: /*#__PURE__*/_jsxDEV(Message, {\n            content: message.content,\n            sender: ((_users$message$userId = users[message.userId]) === null || _users$message$userId === void 0 ? void 0 : _users$message$userId.username) || message.userId,\n            timestamp: message.createdAt,\n            userId: message.userId,\n            currentUserId: currentUser === null || currentUser === void 0 ? void 0 : currentUser.id,\n            onDelete: () => handleDeleteMessage(message.id),\n            replyCount: message.replyCount,\n            isExpanded: message.isExpanded || false,\n            onToggleReplies: () => handleToggleReplies(message.id),\n            onReply: () => handleReply(message.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), message.isExpanded && message.replyCount > 0 && /*#__PURE__*/_jsxDEV(MessageReplies, {\n          parentId: message.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}, \"TxXhw9+h8eDE9q7RfYsJexDSqN0=\", false, function () {\n  return [useDispatch, useSelector];\n})), \"TxXhw9+h8eDE9q7RfYsJexDSqN0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c4 = MessageList;\nMessageList.displayName = 'MessageList';\nexport default MessageList;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"MessageListContainer\");\n$RefreshReg$(_c2, \"MessageWrapper\");\n$RefreshReg$(_c3, \"MessageList$forwardRef\");\n$RefreshReg$(_c4, \"MessageList\");","map":{"version":3,"names":["React","useEffect","useRef","forwardRef","styled","useSelector","useDispatch","Message","MessageReplies","deleteMessage","toggleExpanded","deleteMessageApi","jsxDEV","_jsxDEV","MessageListContainer","div","_c","MessageWrapper","props","$isSelected","_c2","MessageList","_s","_c3","messages","selectedMessageId","ref","dispatch","selectedMessageRef","console","log","currentUser","users","activeChannelId","state","auth","user","chat","current","scrollTop","scrollHeight","scrollIntoView","behavior","block","handleDeleteMessage","messageId","channelId","error","handleToggleReplies","handleReply","children","map","message","_users$message$userId","Fragment","id","undefined","content","sender","userId","username","timestamp","createdAt","currentUserId","onDelete","replyCount","isExpanded","onToggleReplies","onReply","fileName","_jsxFileName","lineNumber","columnNumber","parentId","_c4","displayName","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageList/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState, StoreMessage, User } from '../../../types';\nimport Message from '../Message';\nimport MessageReplies from '../MessageReplies';\nimport { deleteMessage, toggleExpanded } from '../../../store/messages/messagesSlice';\nimport { deleteMessage as deleteMessageApi } from '../../../services/api/chat';\n\ninterface MessageListProps {\n  messages: StoreMessage[];\n  selectedMessageId?: string | null;\n}\n\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst MessageWrapper = styled.div<{ $isSelected?: boolean }>`\n  transition: background-color 0.3s ease;\n  padding: 4px;\n  border-radius: 4px;\n  background-color: ${props => props.$isSelected ? '#3a3a3a' : 'transparent'};\n`;\n\nconst MessageList = forwardRef<HTMLDivElement, MessageListProps>(({ messages, selectedMessageId }, ref) => {\n  const dispatch = useDispatch();\n  const selectedMessageRef = useRef<HTMLDivElement>(null);\n\n  console.log('[DEBUG] MessageList - Received messages:', messages);\n\n  const { currentUser, users, activeChannelId } = useSelector((state: RootState) => ({\n    currentUser: state.auth.user,\n    users: state.chat.users as { [key: string]: User },\n    activeChannelId: state.chat.activeChannelId\n  }));\n\n  console.log('[DEBUG] MessageList - Current state:', {\n    currentUser,\n    users,\n    activeChannelId\n  });\n\n  useEffect(() => {\n    // Scroll to bottom on initial load\n    if (ref && 'current' in ref && ref.current) {\n      ref.current.scrollTop = ref.current.scrollHeight;\n    }\n  }, [ref]);\n\n  useEffect(() => {\n    // Scroll to selected message\n    if (selectedMessageId && selectedMessageRef.current) {\n      selectedMessageRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center'\n      });\n    }\n  }, [selectedMessageId]);\n\n  const handleDeleteMessage = async (messageId: string) => {\n    try {\n      await deleteMessageApi(messageId);\n      if (activeChannelId) {\n        dispatch(deleteMessage({ channelId: activeChannelId, messageId }));\n      }\n    } catch (error) {\n      console.error('Error deleting message:', error);\n    }\n  };\n\n  const handleToggleReplies = (messageId: string) => {\n    if (activeChannelId) {\n      dispatch(toggleExpanded({ channelId: activeChannelId, messageId }));\n    }\n  };\n\n  const handleReply = (messageId: string) => {\n    // TODO: Implement reply functionality\n    console.log('Reply to message:', messageId);\n  };\n\n  console.log('[DEBUG] MessageList - About to render messages:', messages);\n\n  return (\n    <MessageListContainer ref={ref}>\n      {messages.map(message => {\n        console.log('[DEBUG] MessageList - Rendering message:', message);\n        return (\n          <React.Fragment key={message.id}>\n            <MessageWrapper\n              $isSelected={message.id === selectedMessageId}\n              ref={message.id === selectedMessageId ? selectedMessageRef : undefined}\n            >\n              <Message\n                content={message.content}\n                sender={users[message.userId]?.username || message.userId}\n                timestamp={message.createdAt}\n                userId={message.userId}\n                currentUserId={currentUser?.id}\n                onDelete={() => handleDeleteMessage(message.id)}\n                replyCount={message.replyCount}\n                isExpanded={message.isExpanded || false}\n                onToggleReplies={() => handleToggleReplies(message.id)}\n                onReply={() => handleReply(message.id)}\n              />\n            </MessageWrapper>\n            {message.isExpanded && message.replyCount > 0 && (\n              <MessageReplies parentId={message.id} />\n            )}\n          </React.Fragment>\n        );\n      })}\n    </MessageListContainer>\n  );\n});\n\nMessageList.displayName = 'MessageList';\n\nexport default MessageList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}