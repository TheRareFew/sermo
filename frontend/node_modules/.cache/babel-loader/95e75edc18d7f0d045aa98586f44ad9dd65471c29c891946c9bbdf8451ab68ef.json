{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport ChatMessage from '../../common/ChatMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n_c = MessageListContainer;\nconst MessageWrapper = styled.div`\n  &.highlight {\n    background-color: ${props => props.theme.colors.border}40;\n    border-radius: 4px;\n    transition: background-color 0.3s ease;\n  }\n`;\n_c2 = MessageWrapper;\nconst MessageList = /*#__PURE__*/_s(/*#__PURE__*/React.forwardRef(_c3 = _s(({\n  selectedMessageId\n}, ref) => {\n  _s();\n  const {\n    messages,\n    activeChannelId,\n    currentUser,\n    users\n  } = useSelector(state => {\n    var _state$messages$messa;\n    return {\n      messages: ((_state$messages$messa = state.messages.messagesByChannel) === null || _state$messages$messa === void 0 ? void 0 : _state$messages$messa[state.chat.activeChannelId || '']) || [],\n      activeChannelId: state.chat.activeChannelId,\n      currentUser: state.auth.user,\n      users: state.chat.users\n    };\n  });\n  const scrollRef = useRef(null);\n  const actualRef = ref || scrollRef;\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    if (actualRef.current) {\n      actualRef.current.scrollTop = actualRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const handleDeleteMessage = messageId => {\n    // TODO: Implement delete functionality\n    console.log('Delete message:', messageId);\n  };\n  const handleToggleReplies = messageId => {\n    // TODO: Implement toggle replies functionality\n    console.log('Toggle replies:', messageId);\n  };\n  const handleReply = messageId => {\n    // TODO: Implement reply functionality\n    console.log('Reply to message:', messageId);\n  };\n  return /*#__PURE__*/_jsxDEV(MessageListContainer, {\n    ref: actualRef,\n    children: messages.map(message => {\n      var _users$message$userId;\n      return /*#__PURE__*/_jsxDEV(MessageWrapper, {\n        id: `message-${message.id}`,\n        isSelected: message.id === selectedMessageId,\n        children: /*#__PURE__*/_jsxDEV(ChatMessage, {\n          content: message.content,\n          sender: ((_users$message$userId = users[message.userId]) === null || _users$message$userId === void 0 ? void 0 : _users$message$userId.username) || message.userId,\n          timestamp: message.createdAt,\n          userId: message.userId,\n          currentUserId: currentUser === null || currentUser === void 0 ? void 0 : currentUser.id,\n          onDelete: () => handleDeleteMessage(message.id),\n          replyCount: message.replyCount,\n          isExpanded: message.isExpanded || false,\n          onToggleReplies: () => handleToggleReplies(message.id),\n          onReply: () => handleReply(message.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n}, \"JS239lT5qOPL94rMjbx4+zoxlJk=\", false, function () {\n  return [useSelector];\n})), \"JS239lT5qOPL94rMjbx4+zoxlJk=\", false, function () {\n  return [useSelector];\n});\n_c4 = MessageList;\nMessageList.displayName = 'MessageList';\nexport default MessageList;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"MessageListContainer\");\n$RefreshReg$(_c2, \"MessageWrapper\");\n$RefreshReg$(_c3, \"MessageList$React.forwardRef\");\n$RefreshReg$(_c4, \"MessageList\");","map":{"version":3,"names":["React","useEffect","useRef","styled","useSelector","ChatMessage","jsxDEV","_jsxDEV","MessageListContainer","div","_c","MessageWrapper","props","theme","colors","border","_c2","MessageList","_s","forwardRef","_c3","selectedMessageId","ref","messages","activeChannelId","currentUser","users","state","_state$messages$messa","messagesByChannel","chat","auth","user","scrollRef","actualRef","current","scrollTop","scrollHeight","handleDeleteMessage","messageId","console","log","handleToggleReplies","handleReply","children","map","message","_users$message$userId","id","isSelected","content","sender","userId","username","timestamp","createdAt","currentUserId","onDelete","replyCount","isExpanded","onToggleReplies","onReply","fileName","_jsxFileName","lineNumber","columnNumber","_c4","displayName","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageList/index.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { RootState, StoreMessage } from '../../../types';\nimport ChatMessage from '../../common/ChatMessage';\n\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst MessageWrapper = styled.div<{ isSelected?: boolean }>`\n  &.highlight {\n    background-color: ${props => props.theme.colors.border}40;\n    border-radius: 4px;\n    transition: background-color 0.3s ease;\n  }\n`;\n\ninterface MessageListProps {\n  selectedMessageId?: string | null;\n}\n\nconst MessageList: React.FC<MessageListProps> = React.forwardRef<HTMLDivElement, MessageListProps>(\n  ({ selectedMessageId }, ref) => {\n    const { messages, activeChannelId, currentUser, users } = useSelector((state: RootState) => ({\n      messages: state.messages.messagesByChannel?.[state.chat.activeChannelId || ''] || [],\n      activeChannelId: state.chat.activeChannelId,\n      currentUser: state.auth.user,\n      users: state.chat.users,\n    }));\n\n    const scrollRef = useRef<HTMLDivElement>(null);\n    const actualRef = (ref as React.RefObject<HTMLDivElement>) || scrollRef;\n\n    // Auto-scroll to bottom when new messages arrive\n    useEffect(() => {\n      if (actualRef.current) {\n        actualRef.current.scrollTop = actualRef.current.scrollHeight;\n      }\n    }, [messages]);\n\n    const handleDeleteMessage = (messageId: string) => {\n      // TODO: Implement delete functionality\n      console.log('Delete message:', messageId);\n    };\n\n    const handleToggleReplies = (messageId: string) => {\n      // TODO: Implement toggle replies functionality\n      console.log('Toggle replies:', messageId);\n    };\n\n    const handleReply = (messageId: string) => {\n      // TODO: Implement reply functionality\n      console.log('Reply to message:', messageId);\n    };\n\n    return (\n      <MessageListContainer ref={actualRef}>\n        {messages.map((message: StoreMessage) => (\n          <MessageWrapper\n            key={message.id}\n            id={`message-${message.id}`}\n            isSelected={message.id === selectedMessageId}\n          >\n            <ChatMessage \n              content={message.content}\n              sender={users[message.userId]?.username || message.userId}\n              timestamp={message.createdAt}\n              userId={message.userId}\n              currentUserId={currentUser?.id}\n              onDelete={() => handleDeleteMessage(message.id)}\n              replyCount={message.replyCount}\n              isExpanded={message.isExpanded || false}\n              onToggleReplies={() => handleToggleReplies(message.id)}\n              onReply={() => handleReply(message.id)}\n            />\n          </MessageWrapper>\n        ))}\n      </MessageListContainer>\n    );\n  }\n);\n\nMessageList.displayName = 'MessageList';\n\nexport default MessageList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}