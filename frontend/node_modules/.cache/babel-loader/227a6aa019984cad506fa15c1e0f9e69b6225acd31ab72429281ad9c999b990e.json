{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageInput\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useLayoutEffect, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { addMessage } from '../../../store/messages/messagesSlice';\nimport { sendMessage } from '../../../services/api/chat';\nimport { uploadFile } from '../../../services/api/files';\nimport { transformMessage } from '../../../utils/messageTransform';\nimport data from '@emoji-mart/data';\nimport Picker from '@emoji-mart/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputContainer = styled.div`\n  padding: 8px;\n  background-color: ${props => props.theme.colors.background};\n  border-top: 1px solid ${props => props.theme.colors.border};\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n_c = InputContainer;\nconst InputWrapper = styled.div`\n  position: relative;\n  flex: 1;\n`;\n_c2 = InputWrapper;\nconst Input = styled.input`\n  width: 100%;\n  padding: 8px;\n  background-color: ${props => props.theme.colors.inputBackground};\n  color: ${props => props.theme.colors.text};\n  border: 1px solid ${props => props.theme.colors.border};\n  border-radius: 4px;\n  font-family: 'Courier New', monospace;\n\n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.colors.primary};\n  }\n`;\n_c3 = Input;\nconst EmojiButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 20px;\n  padding: 4px;\n  color: ${props => props.theme.colors.text};\n  opacity: 0.7;\n  transition: opacity 0.2s;\n\n  &:hover {\n    opacity: 1;\n  }\n\n  &:disabled {\n    opacity: 0.3;\n    cursor: not-allowed;\n  }\n`;\n_c4 = EmojiButton;\nconst EmojiPickerWrapper = styled.div`\n  position: absolute;\n  bottom: 100%;\n  left: 0;\n  margin-bottom: 8px;\n  z-index: 100;\n`;\n_c5 = EmojiPickerWrapper;\nconst ErrorText = styled.div`\n  color: ${props => props.theme.colors.error};\n  font-size: 12px;\n  margin-top: 4px;\n`;\n_c6 = ErrorText;\nconst AttachButton = styled(EmojiButton)`\n  font-family: monospace;\n  font-size: 16px;\n`;\n_c7 = AttachButton;\nconst FilePreviewContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 4px 8px;\n  background-color: ${props => props.theme.colors.inputBackground};\n  border: 1px solid ${props => props.theme.colors.border};\n  border-radius: 4px;\n  margin-bottom: 4px;\n`;\n_c8 = FilePreviewContainer;\nconst FilePreviewText = styled.span`\n  font-family: 'Courier New', monospace;\n  font-size: 12px;\n  color: ${props => props.theme.colors.text};\n`;\n_c9 = FilePreviewText;\nconst RemoveFileButton = styled.button`\n  background: none;\n  border: none;\n  color: ${props => props.theme.colors.error};\n  cursor: pointer;\n  font-family: monospace;\n  padding: 0 4px;\n  \n  &:hover {\n    opacity: 0.8;\n  }\n`;\n_c10 = RemoveFileButton;\nconst HiddenFileInput = styled.input`\n  display: none;\n`;\n_c11 = HiddenFileInput;\nconst MessageInput = ({\n  channelId\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [messageSent, setMessageSent] = useState(false);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [attachedFile, setAttachedFile] = useState(null);\n  const inputRef = useRef(null);\n  const fileInputRef = useRef(null);\n  useLayoutEffect(() => {\n    if (channelId && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [channelId]);\n  useEffect(() => {\n    if (messageSent) {\n      setTimeout(() => {\n        if (inputRef.current) {\n          inputRef.current.focus();\n        }\n        setMessageSent(false);\n      }, 100);\n    }\n  }, [messageSent]);\n  const handleKeyPress = async e => {\n    if (e.key === 'Enter' && (message.trim() || attachedFile) && channelId) {\n      setError(null);\n      setIsLoading(true);\n      try {\n        let fileId;\n\n        // Upload file first if attached\n        if (attachedFile) {\n          try {\n            const uploadedFile = await uploadFile(attachedFile);\n            fileId = uploadedFile.id;\n          } catch (error) {\n            console.error('Failed to upload file:', error);\n            setError('Failed to upload file. Please try again.');\n            setIsLoading(false);\n            return;\n          }\n        }\n        console.log('Sending message:', {\n          channelId,\n          content: message.trim(),\n          fileId\n        });\n        const sentMessage = await sendMessage({\n          channelId,\n          content: message.trim(),\n          fileId\n        });\n        console.log('Message sent successfully:', sentMessage);\n        const transformedMessage = transformMessage(sentMessage);\n        console.log('Transformed message:', transformedMessage);\n        dispatch(addMessage({\n          channelId,\n          message: transformedMessage\n        }));\n        setMessage('');\n        setAttachedFile(null);\n        setMessageSent(true);\n      } catch (error) {\n        console.error('Failed to send message:', error);\n        setError('Failed to send message. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  const handleChange = e => {\n    setMessage(e.target.value);\n    if (error) {\n      setError(null);\n    }\n  };\n  const handleEmojiSelect = emoji => {\n    setMessage(prev => prev + emoji.native);\n    setShowEmojiPicker(false);\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  const toggleEmojiPicker = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n  const handleFileSelect = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file) {\n      // Check file size (50MB limit)\n      if (file.size > 50 * 1024 * 1024) {\n        setError('File size exceeds 50MB limit');\n        return;\n      }\n\n      // Check file type\n      const allowedTypes = ['image/jpeg', 'image/png', 'image/gif', 'application/pdf', 'text/plain'];\n      if (!allowedTypes.includes(file.type)) {\n        setError('File type not supported. Allowed types: jpg, png, gif, pdf, txt');\n        return;\n      }\n      setAttachedFile(file);\n      setError(null);\n    }\n  };\n  const handleAttachClick = () => {\n    var _fileInputRef$current;\n    (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n  };\n  const handleRemoveFile = () => {\n    setAttachedFile(null);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(InputContainer, {\n    children: [/*#__PURE__*/_jsxDEV(EmojiButton, {\n      onClick: toggleEmojiPicker,\n      disabled: isLoading || !channelId,\n      title: \"Add emoji\",\n      children: \":-)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AttachButton, {\n      onClick: handleAttachClick,\n      disabled: isLoading || !channelId,\n      title: \"Attach file\",\n      children: \"\\uD83D\\uDCCE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputWrapper, {\n      children: [attachedFile && /*#__PURE__*/_jsxDEV(FilePreviewContainer, {\n        children: [/*#__PURE__*/_jsxDEV(FilePreviewText, {\n          children: attachedFile.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RemoveFileButton, {\n          onClick: handleRemoveFile,\n          title: \"Remove file\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: inputRef,\n        type: \"text\",\n        value: message,\n        onChange: handleChange,\n        onKeyPress: handleKeyPress,\n        placeholder: channelId ? \"Type a message...\" : \"Select a channel to start chatting...\",\n        disabled: isLoading || !channelId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(EmojiPickerWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Picker, {\n          data: data,\n          onEmojiSelect: handleEmojiSelect,\n          theme: \"dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HiddenFileInput, {\n        ref: fileInputRef,\n        type: \"file\",\n        onChange: handleFileSelect,\n        accept: \".jpg,.jpeg,.png,.gif,.pdf,.txt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorText, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageInput, \"PJhkuaKvhZI/fsU6oW2bkYmdzrs=\", false, function () {\n  return [useDispatch];\n});\n_c12 = MessageInput;\nexport default MessageInput;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"InputContainer\");\n$RefreshReg$(_c2, \"InputWrapper\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"EmojiButton\");\n$RefreshReg$(_c5, \"EmojiPickerWrapper\");\n$RefreshReg$(_c6, \"ErrorText\");\n$RefreshReg$(_c7, \"AttachButton\");\n$RefreshReg$(_c8, \"FilePreviewContainer\");\n$RefreshReg$(_c9, \"FilePreviewText\");\n$RefreshReg$(_c10, \"RemoveFileButton\");\n$RefreshReg$(_c11, \"HiddenFileInput\");\n$RefreshReg$(_c12, \"MessageInput\");","map":{"version":3,"names":["React","useState","useRef","useLayoutEffect","useEffect","styled","useDispatch","addMessage","sendMessage","uploadFile","transformMessage","data","Picker","jsxDEV","_jsxDEV","InputContainer","div","props","theme","colors","background","border","_c","InputWrapper","_c2","Input","input","inputBackground","text","primary","_c3","EmojiButton","button","_c4","EmojiPickerWrapper","_c5","ErrorText","error","_c6","AttachButton","_c7","FilePreviewContainer","_c8","FilePreviewText","span","_c9","RemoveFileButton","_c10","HiddenFileInput","_c11","MessageInput","channelId","_s","dispatch","message","setMessage","setError","isLoading","setIsLoading","messageSent","setMessageSent","showEmojiPicker","setShowEmojiPicker","attachedFile","setAttachedFile","inputRef","fileInputRef","current","focus","setTimeout","handleKeyPress","e","key","trim","fileId","uploadedFile","id","console","log","content","sentMessage","transformedMessage","handleChange","target","value","handleEmojiSelect","emoji","prev","native","toggleEmojiPicker","handleFileSelect","_e$target$files","file","files","size","allowedTypes","includes","type","handleAttachClick","_fileInputRef$current","click","handleRemoveFile","children","onClick","disabled","title","fileName","_jsxFileName","lineNumber","columnNumber","name","ref","onChange","onKeyPress","placeholder","onEmojiSelect","accept","_c12","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageInput/index.tsx"],"sourcesContent":["import React, { useState, KeyboardEvent, useRef, useLayoutEffect, useEffect, ChangeEvent } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { addMessage } from '../../../store/messages/messagesSlice';\nimport { sendMessage } from '../../../services/api/chat';\nimport { uploadFile } from '../../../services/api/files';\nimport { transformMessage } from '../../../utils/messageTransform';\nimport { AppDispatch } from '../../../store';\nimport data from '@emoji-mart/data';\nimport Picker from '@emoji-mart/react';\n\ninterface MessageInputProps {\n  channelId: string | null;\n}\n\nconst InputContainer = styled.div`\n  padding: 8px;\n  background-color: ${props => props.theme.colors.background};\n  border-top: 1px solid ${props => props.theme.colors.border};\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst InputWrapper = styled.div`\n  position: relative;\n  flex: 1;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 8px;\n  background-color: ${props => props.theme.colors.inputBackground};\n  color: ${props => props.theme.colors.text};\n  border: 1px solid ${props => props.theme.colors.border};\n  border-radius: 4px;\n  font-family: 'Courier New', monospace;\n\n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst EmojiButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 20px;\n  padding: 4px;\n  color: ${props => props.theme.colors.text};\n  opacity: 0.7;\n  transition: opacity 0.2s;\n\n  &:hover {\n    opacity: 1;\n  }\n\n  &:disabled {\n    opacity: 0.3;\n    cursor: not-allowed;\n  }\n`;\n\nconst EmojiPickerWrapper = styled.div`\n  position: absolute;\n  bottom: 100%;\n  left: 0;\n  margin-bottom: 8px;\n  z-index: 100;\n`;\n\nconst ErrorText = styled.div`\n  color: ${props => props.theme.colors.error};\n  font-size: 12px;\n  margin-top: 4px;\n`;\n\nconst AttachButton = styled(EmojiButton)`\n  font-family: monospace;\n  font-size: 16px;\n`;\n\nconst FilePreviewContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 4px 8px;\n  background-color: ${props => props.theme.colors.inputBackground};\n  border: 1px solid ${props => props.theme.colors.border};\n  border-radius: 4px;\n  margin-bottom: 4px;\n`;\n\nconst FilePreviewText = styled.span`\n  font-family: 'Courier New', monospace;\n  font-size: 12px;\n  color: ${props => props.theme.colors.text};\n`;\n\nconst RemoveFileButton = styled.button`\n  background: none;\n  border: none;\n  color: ${props => props.theme.colors.error};\n  cursor: pointer;\n  font-family: monospace;\n  padding: 0 4px;\n  \n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst HiddenFileInput = styled.input`\n  display: none;\n`;\n\nconst MessageInput: React.FC<MessageInputProps> = ({ channelId }): JSX.Element => {\n  const dispatch = useDispatch<AppDispatch>();\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [messageSent, setMessageSent] = useState(false);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [attachedFile, setAttachedFile] = useState<File | null>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  useLayoutEffect(() => {\n    if (channelId && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [channelId]);\n\n  useEffect(() => {\n    if (messageSent) {\n      setTimeout(() => {\n        if (inputRef.current) {\n          inputRef.current.focus();\n        }\n        setMessageSent(false);\n      }, 100);\n    }\n  }, [messageSent]);\n\n  const handleKeyPress = async (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter' && (message.trim() || attachedFile) && channelId) {\n      setError(null);\n      setIsLoading(true);\n\n      try {\n        let fileId: string | undefined;\n\n        // Upload file first if attached\n        if (attachedFile) {\n          try {\n            const uploadedFile = await uploadFile(attachedFile);\n            fileId = uploadedFile.id;\n          } catch (error) {\n            console.error('Failed to upload file:', error);\n            setError('Failed to upload file. Please try again.');\n            setIsLoading(false);\n            return;\n          }\n        }\n\n        console.log('Sending message:', {\n          channelId,\n          content: message.trim(),\n          fileId\n        });\n\n        const sentMessage = await sendMessage({\n          channelId,\n          content: message.trim(),\n          fileId\n        });\n\n        console.log('Message sent successfully:', sentMessage);\n\n        const transformedMessage = transformMessage(sentMessage);\n        console.log('Transformed message:', transformedMessage);\n\n        dispatch(addMessage({\n          channelId,\n          message: transformedMessage\n        }));\n        \n        setMessage('');\n        setAttachedFile(null);\n        setMessageSent(true);\n      } catch (error) {\n        console.error('Failed to send message:', error);\n        setError('Failed to send message. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setMessage(e.target.value);\n    if (error) {\n      setError(null);\n    }\n  };\n\n  const handleEmojiSelect = (emoji: any) => {\n    setMessage(prev => prev + emoji.native);\n    setShowEmojiPicker(false);\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  const toggleEmojiPicker = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n\n  const handleFileSelect = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      // Check file size (50MB limit)\n      if (file.size > 50 * 1024 * 1024) {\n        setError('File size exceeds 50MB limit');\n        return;\n      }\n\n      // Check file type\n      const allowedTypes = ['image/jpeg', 'image/png', 'image/gif', 'application/pdf', 'text/plain'];\n      if (!allowedTypes.includes(file.type)) {\n        setError('File type not supported. Allowed types: jpg, png, gif, pdf, txt');\n        return;\n      }\n\n      setAttachedFile(file);\n      setError(null);\n    }\n  };\n\n  const handleAttachClick = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleRemoveFile = () => {\n    setAttachedFile(null);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  return (\n    <InputContainer>\n      <EmojiButton \n        onClick={toggleEmojiPicker}\n        disabled={isLoading || !channelId}\n        title=\"Add emoji\"\n      >\n        :-)\n      </EmojiButton>\n      <AttachButton\n        onClick={handleAttachClick}\n        disabled={isLoading || !channelId}\n        title=\"Attach file\"\n      >\n        📎\n      </AttachButton>\n      <InputWrapper>\n        {attachedFile && (\n          <FilePreviewContainer>\n            <FilePreviewText>{attachedFile.name}</FilePreviewText>\n            <RemoveFileButton onClick={handleRemoveFile} title=\"Remove file\">×</RemoveFileButton>\n          </FilePreviewContainer>\n        )}\n        <Input\n          ref={inputRef}\n          type=\"text\"\n          value={message}\n          onChange={handleChange}\n          onKeyPress={handleKeyPress}\n          placeholder={channelId ? \"Type a message...\" : \"Select a channel to start chatting...\"}\n          disabled={isLoading || !channelId}\n        />\n        {showEmojiPicker && (\n          <EmojiPickerWrapper>\n            <Picker \n              data={data} \n              onEmojiSelect={handleEmojiSelect}\n              theme=\"dark\"\n            />\n          </EmojiPickerWrapper>\n        )}\n        <HiddenFileInput\n          ref={fileInputRef}\n          type=\"file\"\n          onChange={handleFileSelect}\n          accept=\".jpg,.jpeg,.png,.gif,.pdf,.txt\"\n        />\n      </InputWrapper>\n      {error && <ErrorText>{error}</ErrorText>}\n    </InputContainer>\n  );\n};\n\nexport default MessageInput; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAiBC,MAAM,EAAEC,eAAe,EAAEC,SAAS,QAAqB,OAAO;AACvG,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,uCAAuC;AAClE,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,UAAU,QAAQ,6BAA6B;AACxD,SAASC,gBAAgB,QAAQ,iCAAiC;AAElE,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMvC,MAAMC,cAAc,GAAGV,MAAM,CAACW,GAAG;AACjC;AACA,sBAAsBC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,UAAU;AAC5D,0BAA0BH,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACE,MAAM;AAC5D;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAPIP,cAAc;AASpB,MAAMQ,YAAY,GAAGlB,MAAM,CAACW,GAAG;AAC/B;AACA;AACA,CAAC;AAACQ,GAAA,GAHID,YAAY;AAKlB,MAAME,KAAK,GAAGpB,MAAM,CAACqB,KAAK;AAC1B;AACA;AACA,sBAAsBT,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACQ,eAAe;AACjE,WAAWV,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACS,IAAI;AAC3C,sBAAsBX,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACE,MAAM;AACxD;AACA;AACA;AACA;AACA;AACA,oBAAoBJ,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACU,OAAO;AACvD;AACA,CAAC;AAACC,GAAA,GAbIL,KAAK;AAeX,MAAMM,WAAW,GAAG1B,MAAM,CAAC2B,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA,WAAWf,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACS,IAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GAlBIF,WAAW;AAoBjB,MAAMG,kBAAkB,GAAG7B,MAAM,CAACW,GAAG;AACrC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACmB,GAAA,GANID,kBAAkB;AAQxB,MAAME,SAAS,GAAG/B,MAAM,CAACW,GAAG;AAC5B,WAAWC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACkB,KAAK;AAC5C;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,SAAS;AAMf,MAAMG,YAAY,GAAGlC,MAAM,CAAC0B,WAAW,CAAC;AACxC;AACA;AACA,CAAC;AAACS,GAAA,GAHID,YAAY;AAKlB,MAAME,oBAAoB,GAAGpC,MAAM,CAACW,GAAG;AACvC;AACA;AACA;AACA;AACA,sBAAsBC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACQ,eAAe;AACjE,sBAAsBV,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACE,MAAM;AACxD;AACA;AACA,CAAC;AAACqB,GAAA,GATID,oBAAoB;AAW1B,MAAME,eAAe,GAAGtC,MAAM,CAACuC,IAAI;AACnC;AACA;AACA,WAAW3B,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACS,IAAI;AAC3C,CAAC;AAACiB,GAAA,GAJIF,eAAe;AAMrB,MAAMG,gBAAgB,GAAGzC,MAAM,CAAC2B,MAAM;AACtC;AACA;AACA,WAAWf,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACkB,KAAK;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACU,IAAA,GAXID,gBAAgB;AAatB,MAAME,eAAe,GAAG3C,MAAM,CAACqB,KAAK;AACpC;AACA,CAAC;AAACuB,IAAA,GAFID,eAAe;AAIrB,MAAME,YAAyC,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAkB;EAAAC,EAAA;EAChF,MAAMC,QAAQ,GAAG/C,WAAW,CAAc,CAAC;EAC3C,MAAM,CAACgD,OAAO,EAAEC,UAAU,CAAC,GAAGtD,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoC,KAAK,EAAEmB,QAAQ,CAAC,GAAGvD,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACwD,SAAS,EAAEC,YAAY,CAAC,GAAGzD,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC0D,WAAW,EAAEC,cAAc,CAAC,GAAG3D,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC4D,eAAe,EAAEC,kBAAkB,CAAC,GAAG7D,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC8D,YAAY,EAAEC,eAAe,CAAC,GAAG/D,QAAQ,CAAc,IAAI,CAAC;EACnE,MAAMgE,QAAQ,GAAG/D,MAAM,CAAmB,IAAI,CAAC;EAC/C,MAAMgE,YAAY,GAAGhE,MAAM,CAAmB,IAAI,CAAC;EAEnDC,eAAe,CAAC,MAAM;IACpB,IAAIgD,SAAS,IAAIc,QAAQ,CAACE,OAAO,EAAE;MACjCF,QAAQ,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,CAACjB,SAAS,CAAC,CAAC;EAEf/C,SAAS,CAAC,MAAM;IACd,IAAIuD,WAAW,EAAE;MACfU,UAAU,CAAC,MAAM;QACf,IAAIJ,QAAQ,CAACE,OAAO,EAAE;UACpBF,QAAQ,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC;QAC1B;QACAR,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC,EAAE,GAAG,CAAC;IACT;EACF,CAAC,EAAE,CAACD,WAAW,CAAC,CAAC;EAEjB,MAAMW,cAAc,GAAG,MAAOC,CAAkC,IAAK;IACnE,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,KAAKlB,OAAO,CAACmB,IAAI,CAAC,CAAC,IAAIV,YAAY,CAAC,IAAIZ,SAAS,EAAE;MACtEK,QAAQ,CAAC,IAAI,CAAC;MACdE,YAAY,CAAC,IAAI,CAAC;MAElB,IAAI;QACF,IAAIgB,MAA0B;;QAE9B;QACA,IAAIX,YAAY,EAAE;UAChB,IAAI;YACF,MAAMY,YAAY,GAAG,MAAMlE,UAAU,CAACsD,YAAY,CAAC;YACnDW,MAAM,GAAGC,YAAY,CAACC,EAAE;UAC1B,CAAC,CAAC,OAAOvC,KAAK,EAAE;YACdwC,OAAO,CAACxC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;YAC9CmB,QAAQ,CAAC,0CAA0C,CAAC;YACpDE,YAAY,CAAC,KAAK,CAAC;YACnB;UACF;QACF;QAEAmB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE;UAC9B3B,SAAS;UACT4B,OAAO,EAAEzB,OAAO,CAACmB,IAAI,CAAC,CAAC;UACvBC;QACF,CAAC,CAAC;QAEF,MAAMM,WAAW,GAAG,MAAMxE,WAAW,CAAC;UACpC2C,SAAS;UACT4B,OAAO,EAAEzB,OAAO,CAACmB,IAAI,CAAC,CAAC;UACvBC;QACF,CAAC,CAAC;QAEFG,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEE,WAAW,CAAC;QAEtD,MAAMC,kBAAkB,GAAGvE,gBAAgB,CAACsE,WAAW,CAAC;QACxDH,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEG,kBAAkB,CAAC;QAEvD5B,QAAQ,CAAC9C,UAAU,CAAC;UAClB4C,SAAS;UACTG,OAAO,EAAE2B;QACX,CAAC,CAAC,CAAC;QAEH1B,UAAU,CAAC,EAAE,CAAC;QACdS,eAAe,CAAC,IAAI,CAAC;QACrBJ,cAAc,CAAC,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOvB,KAAK,EAAE;QACdwC,OAAO,CAACxC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CmB,QAAQ,CAAC,2CAA2C,CAAC;MACvD,CAAC,SAAS;QACRE,YAAY,CAAC,KAAK,CAAC;MACrB;IACF;EACF,CAAC;EAED,MAAMwB,YAAY,GAAIX,CAAsC,IAAK;IAC/DhB,UAAU,CAACgB,CAAC,CAACY,MAAM,CAACC,KAAK,CAAC;IAC1B,IAAI/C,KAAK,EAAE;MACTmB,QAAQ,CAAC,IAAI,CAAC;IAChB;EACF,CAAC;EAED,MAAM6B,iBAAiB,GAAIC,KAAU,IAAK;IACxC/B,UAAU,CAACgC,IAAI,IAAIA,IAAI,GAAGD,KAAK,CAACE,MAAM,CAAC;IACvC1B,kBAAkB,CAAC,KAAK,CAAC;IACzB,IAAIG,QAAQ,CAACE,OAAO,EAAE;MACpBF,QAAQ,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,MAAMqB,iBAAiB,GAAGA,CAAA,KAAM;IAC9B3B,kBAAkB,CAAC,CAACD,eAAe,CAAC;EACtC,CAAC;EAED,MAAM6B,gBAAgB,GAAInB,CAAgC,IAAK;IAAA,IAAAoB,eAAA;IAC7D,MAAMC,IAAI,IAAAD,eAAA,GAAGpB,CAAC,CAACY,MAAM,CAACU,KAAK,cAAAF,eAAA,uBAAdA,eAAA,CAAiB,CAAC,CAAC;IAChC,IAAIC,IAAI,EAAE;MACR;MACA,IAAIA,IAAI,CAACE,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,EAAE;QAChCtC,QAAQ,CAAC,8BAA8B,CAAC;QACxC;MACF;;MAEA;MACA,MAAMuC,YAAY,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,iBAAiB,EAAE,YAAY,CAAC;MAC9F,IAAI,CAACA,YAAY,CAACC,QAAQ,CAACJ,IAAI,CAACK,IAAI,CAAC,EAAE;QACrCzC,QAAQ,CAAC,iEAAiE,CAAC;QAC3E;MACF;MAEAQ,eAAe,CAAC4B,IAAI,CAAC;MACrBpC,QAAQ,CAAC,IAAI,CAAC;IAChB;EACF,CAAC;EAED,MAAM0C,iBAAiB,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC9B,CAAAA,qBAAA,GAAAjC,YAAY,CAACC,OAAO,cAAAgC,qBAAA,uBAApBA,qBAAA,CAAsBC,KAAK,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BrC,eAAe,CAAC,IAAI,CAAC;IACrB,IAAIE,YAAY,CAACC,OAAO,EAAE;MACxBD,YAAY,CAACC,OAAO,CAACiB,KAAK,GAAG,EAAE;IACjC;EACF,CAAC;EAED,oBACEtE,OAAA,CAACC,cAAc;IAAAuF,QAAA,gBACbxF,OAAA,CAACiB,WAAW;MACVwE,OAAO,EAAEd,iBAAkB;MAC3Be,QAAQ,EAAE/C,SAAS,IAAI,CAACN,SAAU;MAClCsD,KAAK,EAAC,WAAW;MAAAH,QAAA,EAClB;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eACd/F,OAAA,CAACyB,YAAY;MACXgE,OAAO,EAAEL,iBAAkB;MAC3BM,QAAQ,EAAE/C,SAAS,IAAI,CAACN,SAAU;MAClCsD,KAAK,EAAC,aAAa;MAAAH,QAAA,EACpB;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eACf/F,OAAA,CAACS,YAAY;MAAA+E,QAAA,GACVvC,YAAY,iBACXjD,OAAA,CAAC2B,oBAAoB;QAAA6D,QAAA,gBACnBxF,OAAA,CAAC6B,eAAe;UAAA2D,QAAA,EAAEvC,YAAY,CAAC+C;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkB,CAAC,eACtD/F,OAAA,CAACgC,gBAAgB;UAACyD,OAAO,EAAEF,gBAAiB;UAACI,KAAK,EAAC,aAAa;UAAAH,QAAA,EAAC;QAAC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CACvB,eACD/F,OAAA,CAACW,KAAK;QACJsF,GAAG,EAAE9C,QAAS;QACdgC,IAAI,EAAC,MAAM;QACXb,KAAK,EAAE9B,OAAQ;QACf0D,QAAQ,EAAE9B,YAAa;QACvB+B,UAAU,EAAE3C,cAAe;QAC3B4C,WAAW,EAAE/D,SAAS,GAAG,mBAAmB,GAAG,uCAAwC;QACvFqD,QAAQ,EAAE/C,SAAS,IAAI,CAACN;MAAU;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,EACDhD,eAAe,iBACd/C,OAAA,CAACoB,kBAAkB;QAAAoE,QAAA,eACjBxF,OAAA,CAACF,MAAM;UACLD,IAAI,EAAEA,IAAK;UACXwG,aAAa,EAAE9B,iBAAkB;UACjCnE,KAAK,EAAC;QAAM;UAAAwF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACgB,CACrB,eACD/F,OAAA,CAACkC,eAAe;QACd+D,GAAG,EAAE7C,YAAa;QAClB+B,IAAI,EAAC,MAAM;QACXe,QAAQ,EAAEtB,gBAAiB;QAC3B0B,MAAM,EAAC;MAAgC;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC,EACdxE,KAAK,iBAAIvB,OAAA,CAACsB,SAAS;MAAAkE,QAAA,EAAEjE;IAAK;MAAAqE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAErB,CAAC;AAACzD,EAAA,CAzLIF,YAAyC;EAAA,QAC5B5C,WAAW;AAAA;AAAA+G,IAAA,GADxBnE,YAAyC;AA2L/C,eAAeA,YAAY;AAAC,IAAA5B,EAAA,EAAAE,GAAA,EAAAM,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAoE,IAAA;AAAAC,YAAA,CAAAhG,EAAA;AAAAgG,YAAA,CAAA9F,GAAA;AAAA8F,YAAA,CAAAxF,GAAA;AAAAwF,YAAA,CAAArF,GAAA;AAAAqF,YAAA,CAAAnF,GAAA;AAAAmF,YAAA,CAAAhF,GAAA;AAAAgF,YAAA,CAAA9E,GAAA;AAAA8E,YAAA,CAAA5E,GAAA;AAAA4E,YAAA,CAAAzE,GAAA;AAAAyE,YAAA,CAAAvE,IAAA;AAAAuE,YAAA,CAAArE,IAAA;AAAAqE,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}