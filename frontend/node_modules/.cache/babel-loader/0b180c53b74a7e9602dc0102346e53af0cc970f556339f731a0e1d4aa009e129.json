{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\layout\\\\MainLayout\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../../store/auth/authSlice';\nimport { setActiveChannel, setChannels, addMessage, setMessages, setUsers, updateUserStatus } from '../../../store/chat/chatSlice';\nimport Button from '../../common/Button';\nimport ChatMessage from '../../common/ChatMessage';\nimport UserListItem from '../../common/UserListItem';\nimport ChannelListItem from '../../common/ChannelListItem';\nimport CreateChannelModal from '../../chat/CreateChannelModal';\nimport MessageInput from '../../chat/MessageInput';\nimport wsService from '../../../services/websocket';\nimport { getChannels, getChannelMessages, getChannelUsers } from '../../../services/api/chat';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'VT323', monospace;\n`;\n_c = MainContainer;\nconst Sidebar = styled.div`\n  width: 200px;\n  border-right: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = Sidebar;\nconst ChannelList = styled.div`\n  flex: 1;\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n_c3 = ChannelList;\nconst UserList = styled.div`\n  height: 200px;\n  padding: 16px;\n  border-top: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n_c4 = UserList;\nconst ChatArea = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n`;\n_c5 = ChatArea;\nconst ChatHeader = styled.div`\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h1 {\n    margin: 0;\n    text-transform: uppercase;\n  }\n`;\n_c6 = ChatHeader;\nconst ChatMessages = styled.div`\n  flex: 1;\n  padding: 16px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n`;\n_c7 = ChatMessages;\nconst ChatInput = styled.div`\n  border-top: 2px solid ${props => props.theme.colors.border};\n`;\n_c8 = ChatInput;\nconst LogoutButton = styled.button`\n  background: none;\n  border: 2px solid ${props => props.theme.colors.error};\n  color: ${props => props.theme.colors.error};\n  padding: 4px 8px;\n  font-family: 'VT323', monospace;\n  cursor: pointer;\n  text-transform: uppercase;\n\n  &:hover {\n    background: ${props => props.theme.colors.error};\n    color: ${props => props.theme.colors.background};\n  }\n`;\n_c9 = LogoutButton;\nconst ChannelHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n\n  h2 {\n    margin: 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n_c10 = ChannelHeader;\nconst CreateChannelButton = styled(Button)`\n  padding: 2px 8px;\n  font-size: 0.875rem;\n`;\n_c11 = CreateChannelButton;\nconst NoChannelMessage = styled.div`\n  text-align: center;\n  padding: 20px;\n  color: ${props => props.theme.colors.secondary};\n  font-family: 'Courier New', monospace;\n`;\n_c12 = NoChannelMessage;\nconst LoadingMessage = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.textSecondary};\n  font-family: 'Courier New', monospace;\n  font-style: italic;\n`;\n_c13 = LoadingMessage;\nconst MainLayout = () => {\n  _s();\n  const dispatch = useDispatch();\n  const messagesEndRef = useRef(null);\n  const messagesContainerRef = useRef(null);\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [hasMoreMessages, setHasMoreMessages] = useState(true);\n  const activeChannelId = useSelector(state => state.chat.activeChannelId);\n  const channels = useSelector(state => state.chat.channels);\n  const messages = useSelector(state => {\n    const channelMessages = state.chat.messages[activeChannelId] || [];\n    console.log('Current messages from state:', channelMessages);\n    return channelMessages;\n  });\n  const users = useSelector(state => state.chat.users);\n  const MESSAGES_PER_PAGE = 30;\n\n  // Function to scroll to bottom of messages\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  // Handle scroll to load more messages\n  const handleScroll = async e => {\n    const div = e.currentTarget;\n    if (div.scrollTop === 0 && !isLoadingMore && hasMoreMessages && activeChannelId) {\n      setIsLoadingMore(true);\n      try {\n        var _messages$;\n        const oldestMessageId = (_messages$ = messages[0]) === null || _messages$ === void 0 ? void 0 : _messages$.id;\n        const olderMessages = await getChannelMessages(activeChannelId, MESSAGES_PER_PAGE);\n        if (olderMessages.length < MESSAGES_PER_PAGE) {\n          setHasMoreMessages(false);\n        }\n        if (olderMessages.length > 0) {\n          // Filter out messages we already have\n          const newMessages = olderMessages.filter(msg => !messages.some(existing => existing.id === msg.id));\n          if (newMessages.length > 0) {\n            dispatch(setMessages({\n              channelId: activeChannelId,\n              messages: [...newMessages, ...messages].sort((a, b) => new Date(a.created_at).getTime() - new Date(b.created_at).getTime())\n            }));\n\n            // Maintain scroll position\n            const currentMessage = document.getElementById(`message-${oldestMessageId}`);\n            if (currentMessage) {\n              currentMessage.scrollIntoView();\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Failed to fetch older messages:', error);\n      } finally {\n        setIsLoadingMore(false);\n      }\n    }\n  };\n  useEffect(() => {\n    // Initial data fetch\n    const fetchInitialData = async () => {\n      try {\n        console.log('Fetching initial data...');\n        const channelsData = await getChannels();\n        console.log('Channels data:', channelsData);\n        dispatch(setChannels(channelsData));\n        if (channelsData.length > 0) {\n          const firstChannelId = channelsData[0].id;\n          console.log('Setting active channel:', firstChannelId);\n          dispatch(setActiveChannel(firstChannelId));\n          const [messagesData, usersData] = await Promise.all([getChannelMessages(firstChannelId, MESSAGES_PER_PAGE), getChannelUsers(firstChannelId)]);\n          console.log('Initial messages data:', messagesData);\n          console.log('Users data:', usersData);\n          dispatch(setMessages({\n            channelId: firstChannelId,\n            messages: messagesData.sort((a, b) => new Date(a.created_at).getTime() - new Date(b.created_at).getTime())\n          }));\n          dispatch(setUsers(usersData));\n          wsService.joinChannel(firstChannelId);\n          setHasMoreMessages(messagesData.length === MESSAGES_PER_PAGE);\n        }\n      } catch (error) {\n        console.error('Failed to fetch initial data:', error);\n      }\n    };\n    wsService.connect();\n    fetchInitialData();\n\n    // WebSocket event handlers\n    const messageHandler = data => {\n      console.log('Received WebSocket message:', data);\n      if (data.type === 'message' && data.id && data.content && data.sender_id && data.channel_id && data.created_at) {\n        const message = {\n          id: data.id,\n          content: data.content,\n          sender_id: data.sender_id,\n          channel_id: data.channel_id,\n          created_at: data.created_at,\n          is_system: data.is_system\n        };\n        console.log('Adding new message:', message);\n        dispatch(addMessage(message));\n        scrollToBottom();\n      }\n    };\n    const presenceHandler = data => {\n      if (data.type === 'presence_update' && data.user_id && data.status) {\n        dispatch(updateUserStatus({\n          userId: data.user_id,\n          status: data.status\n        }));\n      }\n    };\n    wsService.onMessage(messageHandler);\n    wsService.onPresence(presenceHandler);\n    return () => {\n      wsService.disconnect();\n    };\n  }, [dispatch]);\n  const handleChannelClick = async channelId => {\n    if (channelId === activeChannelId) return;\n    console.log('Switching to channel:', channelId);\n    dispatch(setActiveChannel(channelId));\n    setHasMoreMessages(true);\n    try {\n      const [messagesData, usersData] = await Promise.all([getChannelMessages(channelId, MESSAGES_PER_PAGE), getChannelUsers(channelId)]);\n      console.log('Channel messages:', messagesData);\n      console.log('Channel users:', usersData);\n      dispatch(setMessages({\n        channelId,\n        messages: messagesData.sort((a, b) => new Date(a.created_at).getTime() - new Date(b.created_at).getTime())\n      }));\n      dispatch(setUsers(usersData));\n      wsService.joinChannel(channelId);\n      setHasMoreMessages(messagesData.length === MESSAGES_PER_PAGE);\n      scrollToBottom();\n    } catch (error) {\n      console.error('Failed to fetch channel data:', error);\n    }\n  };\n\n  // Scroll to bottom on initial load and channel change\n  useEffect(() => {\n    scrollToBottom();\n  }, [activeChannelId]);\n  const handleLogout = () => {\n    wsService.disconnect();\n    dispatch(logout());\n  };\n  const activeChannel = channels.find(c => c.id === activeChannelId);\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(ChannelList, {\n        children: [/*#__PURE__*/_jsxDEV(ChannelHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Channels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CreateChannelButton, {\n            variant: \"secondary\",\n            size: \"small\",\n            onClick: () => setIsCreateModalOpen(true),\n            children: \"+New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), channels.map(channel => /*#__PURE__*/_jsxDEV(ChannelListItem, {\n          name: channel.name,\n          isActive: channel.id === activeChannelId,\n          hasUnread: false // TODO: Implement unread tracking\n          ,\n          isDirect: channel.is_direct_message,\n          onClick: () => handleChannelClick(channel.id)\n        }, channel.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserList, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Online Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), Object.values(users).map(user => /*#__PURE__*/_jsxDEV(UserListItem, {\n          username: user.username,\n          status: user.status\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatArea, {\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: activeChannel ? `${activeChannel.is_direct_message ? '@' : '#'}${activeChannel.name}` : 'Select a channel'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatMessages, {\n        ref: messagesContainerRef,\n        onScroll: handleScroll,\n        children: !activeChannel ? /*#__PURE__*/_jsxDEV(NoChannelMessage, {\n          children: channels.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"Welcome to SERMO! Click the \\\"+New\\\" button above to create your first channel.\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"Select a channel from the sidebar to start chatting.\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [isLoadingMore && /*#__PURE__*/_jsxDEV(LoadingMessage, {\n            children: \"Loading older messages...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 17\n          }, this), console.log('Rendering messages:', messages), messages.map(msg => {\n            var _users$msg$sender_id;\n            console.log('Rendering message:', msg);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              id: `message-${msg.id}`,\n              children: /*#__PURE__*/_jsxDEV(ChatMessage, {\n                content: msg.content,\n                sender: ((_users$msg$sender_id = users[msg.sender_id]) === null || _users$msg$sender_id === void 0 ? void 0 : _users$msg$sender_id.username) || 'Unknown',\n                timestamp: msg.created_at,\n                isSystem: msg.is_system\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 21\n              }, this)\n            }, msg.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 19\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef,\n            style: {\n              height: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        children: activeChannel && /*#__PURE__*/_jsxDEV(MessageInput, {\n          channelId: activeChannel.id,\n          wsService: wsService\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateChannelModal, {\n      isOpen: isCreateModalOpen,\n      onClose: () => setIsCreateModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 5\n  }, this);\n};\n_s(MainLayout, \"5KLg5hYxltn5WOQoMkgaVSYoPpA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c14 = MainLayout;\nexport default MainLayout;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14;\n$RefreshReg$(_c, \"MainContainer\");\n$RefreshReg$(_c2, \"Sidebar\");\n$RefreshReg$(_c3, \"ChannelList\");\n$RefreshReg$(_c4, \"UserList\");\n$RefreshReg$(_c5, \"ChatArea\");\n$RefreshReg$(_c6, \"ChatHeader\");\n$RefreshReg$(_c7, \"ChatMessages\");\n$RefreshReg$(_c8, \"ChatInput\");\n$RefreshReg$(_c9, \"LogoutButton\");\n$RefreshReg$(_c10, \"ChannelHeader\");\n$RefreshReg$(_c11, \"CreateChannelButton\");\n$RefreshReg$(_c12, \"NoChannelMessage\");\n$RefreshReg$(_c13, \"LoadingMessage\");\n$RefreshReg$(_c14, \"MainLayout\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","useDispatch","useSelector","logout","setActiveChannel","setChannels","addMessage","setMessages","setUsers","updateUserStatus","Button","ChatMessage","UserListItem","ChannelListItem","CreateChannelModal","MessageInput","wsService","getChannels","getChannelMessages","getChannelUsers","jsxDEV","_jsxDEV","Fragment","_Fragment","MainContainer","div","props","theme","colors","background","text","_c","Sidebar","border","_c2","ChannelList","primary","_c3","UserList","_c4","ChatArea","_c5","ChatHeader","_c6","ChatMessages","_c7","ChatInput","_c8","LogoutButton","button","error","_c9","ChannelHeader","_c10","CreateChannelButton","_c11","NoChannelMessage","secondary","_c12","LoadingMessage","textSecondary","_c13","MainLayout","_s","dispatch","messagesEndRef","messagesContainerRef","isCreateModalOpen","setIsCreateModalOpen","isLoadingMore","setIsLoadingMore","hasMoreMessages","setHasMoreMessages","activeChannelId","state","chat","channels","messages","channelMessages","console","log","users","MESSAGES_PER_PAGE","scrollToBottom","current","scrollIntoView","behavior","handleScroll","e","currentTarget","scrollTop","_messages$","oldestMessageId","id","olderMessages","length","newMessages","filter","msg","some","existing","channelId","sort","a","b","Date","created_at","getTime","currentMessage","document","getElementById","fetchInitialData","channelsData","firstChannelId","messagesData","usersData","Promise","all","joinChannel","connect","messageHandler","data","type","content","sender_id","channel_id","message","is_system","presenceHandler","user_id","status","userId","onMessage","onPresence","disconnect","handleChannelClick","handleLogout","activeChannel","find","c","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","onClick","map","channel","name","isActive","hasUnread","isDirect","is_direct_message","Object","values","user","username","ref","onScroll","_users$msg$sender_id","sender","timestamp","isSystem","style","height","isOpen","onClose","_c14","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/layout/MainLayout/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../../store/auth/authSlice';\nimport {\n  setActiveChannel,\n  setChannels,\n  addMessage,\n  setMessages,\n  setUsers,\n  updateUserStatus\n} from '../../../store/chat/chatSlice';\nimport Button from '../../common/Button';\nimport ChatMessage from '../../common/ChatMessage';\nimport UserListItem from '../../common/UserListItem';\nimport ChannelListItem from '../../common/ChannelListItem';\nimport CreateChannelModal from '../../chat/CreateChannelModal';\nimport MessageInput from '../../chat/MessageInput';\nimport wsService from '../../../services/websocket';\nimport { getChannels, getChannelMessages, getChannelUsers } from '../../../services/api/chat';\nimport { Message, WebSocketMessage } from '../../../types';\n\nconst MainContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'VT323', monospace;\n`;\n\nconst Sidebar = styled.div`\n  width: 200px;\n  border-right: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ChannelList = styled.div`\n  flex: 1;\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst UserList = styled.div`\n  height: 200px;\n  padding: 16px;\n  border-top: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst ChatArea = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst ChatHeader = styled.div`\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h1 {\n    margin: 0;\n    text-transform: uppercase;\n  }\n`;\n\nconst ChatMessages = styled.div`\n  flex: 1;\n  padding: 16px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n`;\n\nconst ChatInput = styled.div`\n  border-top: 2px solid ${props => props.theme.colors.border};\n`;\n\nconst LogoutButton = styled.button`\n  background: none;\n  border: 2px solid ${props => props.theme.colors.error};\n  color: ${props => props.theme.colors.error};\n  padding: 4px 8px;\n  font-family: 'VT323', monospace;\n  cursor: pointer;\n  text-transform: uppercase;\n\n  &:hover {\n    background: ${props => props.theme.colors.error};\n    color: ${props => props.theme.colors.background};\n  }\n`;\n\nconst ChannelHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n\n  h2 {\n    margin: 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst CreateChannelButton = styled(Button)`\n  padding: 2px 8px;\n  font-size: 0.875rem;\n`;\n\nconst NoChannelMessage = styled.div`\n  text-align: center;\n  padding: 20px;\n  color: ${props => props.theme.colors.secondary};\n  font-family: 'Courier New', monospace;\n`;\n\nconst LoadingMessage = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.textSecondary};\n  font-family: 'Courier New', monospace;\n  font-style: italic;\n`;\n\nconst MainLayout: React.FC = () => {\n  const dispatch = useDispatch();\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const messagesContainerRef = useRef<HTMLDivElement>(null);\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [hasMoreMessages, setHasMoreMessages] = useState(true);\n  \n  const activeChannelId = useSelector((state: any) => state.chat.activeChannelId);\n  const channels = useSelector((state: any) => state.chat.channels);\n  const messages = useSelector((state: any) => {\n    const channelMessages = state.chat.messages[activeChannelId] || [];\n    console.log('Current messages from state:', channelMessages);\n    return channelMessages;\n  });\n  const users = useSelector((state: any) => state.chat.users);\n\n  const MESSAGES_PER_PAGE = 30;\n\n  // Function to scroll to bottom of messages\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  // Handle scroll to load more messages\n  const handleScroll = async (e: React.UIEvent<HTMLDivElement>) => {\n    const div = e.currentTarget;\n    if (div.scrollTop === 0 && !isLoadingMore && hasMoreMessages && activeChannelId) {\n      setIsLoadingMore(true);\n      try {\n        const oldestMessageId = messages[0]?.id;\n        const olderMessages = await getChannelMessages(activeChannelId, MESSAGES_PER_PAGE);\n        \n        if (olderMessages.length < MESSAGES_PER_PAGE) {\n          setHasMoreMessages(false);\n        }\n\n        if (olderMessages.length > 0) {\n          // Filter out messages we already have\n          const newMessages = olderMessages.filter(msg => \n            !messages.some((existing: Message) => existing.id === msg.id)\n          );\n          if (newMessages.length > 0) {\n            dispatch(setMessages({ \n              channelId: activeChannelId, \n              messages: [...newMessages, ...messages].sort((a, b) => \n                new Date(a.created_at).getTime() - new Date(b.created_at).getTime()\n              )\n            }));\n            \n            // Maintain scroll position\n            const currentMessage = document.getElementById(`message-${oldestMessageId}`);\n            if (currentMessage) {\n              currentMessage.scrollIntoView();\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Failed to fetch older messages:', error);\n      } finally {\n        setIsLoadingMore(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    // Initial data fetch\n    const fetchInitialData = async () => {\n      try {\n        console.log('Fetching initial data...');\n        const channelsData = await getChannels();\n        console.log('Channels data:', channelsData);\n        dispatch(setChannels(channelsData));\n        \n        if (channelsData.length > 0) {\n          const firstChannelId = channelsData[0].id;\n          console.log('Setting active channel:', firstChannelId);\n          dispatch(setActiveChannel(firstChannelId));\n          \n          const [messagesData, usersData] = await Promise.all([\n            getChannelMessages(firstChannelId, MESSAGES_PER_PAGE),\n            getChannelUsers(firstChannelId)\n          ]);\n          \n          console.log('Initial messages data:', messagesData);\n          console.log('Users data:', usersData);\n          \n          dispatch(setMessages({ \n            channelId: firstChannelId, \n            messages: messagesData.sort((a, b) => \n              new Date(a.created_at).getTime() - new Date(b.created_at).getTime()\n            )\n          }));\n          dispatch(setUsers(usersData));\n          wsService.joinChannel(firstChannelId);\n          setHasMoreMessages(messagesData.length === MESSAGES_PER_PAGE);\n        }\n      } catch (error) {\n        console.error('Failed to fetch initial data:', error);\n      }\n    };\n\n    wsService.connect();\n    fetchInitialData();\n\n    // WebSocket event handlers\n    const messageHandler = (data: WebSocketMessage) => {\n      console.log('Received WebSocket message:', data);\n      if (data.type === 'message' && data.id && data.content && data.sender_id && \n          data.channel_id && data.created_at) {\n        const message: Message = {\n          id: data.id,\n          content: data.content,\n          sender_id: data.sender_id,\n          channel_id: data.channel_id,\n          created_at: data.created_at,\n          is_system: data.is_system\n        };\n        console.log('Adding new message:', message);\n        dispatch(addMessage(message));\n        scrollToBottom();\n      }\n    };\n\n    const presenceHandler = (data: WebSocketMessage) => {\n      if (data.type === 'presence_update' && data.user_id && data.status) {\n        dispatch(updateUserStatus({\n          userId: data.user_id,\n          status: data.status\n        }));\n      }\n    };\n\n    wsService.onMessage(messageHandler);\n    wsService.onPresence(presenceHandler);\n\n    return () => {\n      wsService.disconnect();\n    };\n  }, [dispatch]);\n\n  const handleChannelClick = async (channelId: number) => {\n    if (channelId === activeChannelId) return;\n    \n    console.log('Switching to channel:', channelId);\n    dispatch(setActiveChannel(channelId));\n    setHasMoreMessages(true);\n    try {\n      const [messagesData, usersData] = await Promise.all([\n        getChannelMessages(channelId, MESSAGES_PER_PAGE),\n        getChannelUsers(channelId)\n      ]);\n      \n      console.log('Channel messages:', messagesData);\n      console.log('Channel users:', usersData);\n      \n      dispatch(setMessages({ \n        channelId, \n        messages: messagesData.sort((a, b) => \n          new Date(a.created_at).getTime() - new Date(b.created_at).getTime()\n        )\n      }));\n      dispatch(setUsers(usersData));\n      wsService.joinChannel(channelId);\n      setHasMoreMessages(messagesData.length === MESSAGES_PER_PAGE);\n      scrollToBottom();\n    } catch (error) {\n      console.error('Failed to fetch channel data:', error);\n    }\n  };\n\n  // Scroll to bottom on initial load and channel change\n  useEffect(() => {\n    scrollToBottom();\n  }, [activeChannelId]);\n\n  const handleLogout = () => {\n    wsService.disconnect();\n    dispatch(logout());\n  };\n\n  const activeChannel = channels.find((c: any) => c.id === activeChannelId);\n\n  return (\n    <MainContainer>\n      <Sidebar>\n        <ChannelList>\n          <ChannelHeader>\n            <h2>Channels</h2>\n            <CreateChannelButton\n              variant=\"secondary\"\n              size=\"small\"\n              onClick={() => setIsCreateModalOpen(true)}\n            >\n              +New\n            </CreateChannelButton>\n          </ChannelHeader>\n          {channels.map((channel: any) => (\n            <ChannelListItem\n              key={channel.id}\n              name={channel.name}\n              isActive={channel.id === activeChannelId}\n              hasUnread={false} // TODO: Implement unread tracking\n              isDirect={channel.is_direct_message}\n              onClick={() => handleChannelClick(channel.id)}\n            />\n          ))}\n        </ChannelList>\n        <UserList>\n          <h2>Online Users</h2>\n          {Object.values(users).map((user: any) => (\n            <UserListItem\n              key={user.id}\n              username={user.username}\n              status={user.status}\n            />\n          ))}\n        </UserList>\n      </Sidebar>\n      <ChatArea>\n        <ChatHeader>\n          <h1>{activeChannel ? `${activeChannel.is_direct_message ? '@' : '#'}${activeChannel.name}` : 'Select a channel'}</h1>\n          <LogoutButton onClick={handleLogout}>Logout</LogoutButton>\n        </ChatHeader>\n        <ChatMessages \n          ref={messagesContainerRef} \n          onScroll={handleScroll}\n        >\n          {!activeChannel ? (\n            <NoChannelMessage>\n              {channels.length === 0 ? (\n                <>\n                  Welcome to SERMO! Click the \"+New\" button above to create your first channel.\n                </>\n              ) : (\n                <>\n                  Select a channel from the sidebar to start chatting.\n                </>\n              )}\n            </NoChannelMessage>\n          ) : (\n            <>\n              {isLoadingMore && (\n                <LoadingMessage>Loading older messages...</LoadingMessage>\n              )}\n              {console.log('Rendering messages:', messages)}\n              {messages.map((msg: Message) => {\n                console.log('Rendering message:', msg);\n                return (\n                  <div key={msg.id} id={`message-${msg.id}`}>\n                    <ChatMessage\n                      content={msg.content}\n                      sender={users[msg.sender_id]?.username || 'Unknown'}\n                      timestamp={msg.created_at}\n                      isSystem={msg.is_system}\n                    />\n                  </div>\n                );\n              })}\n              <div ref={messagesEndRef} style={{ height: 1 }} />\n            </>\n          )}\n        </ChatMessages>\n        <ChatInput>\n          {activeChannel && (\n            <MessageInput\n              channelId={activeChannel.id}\n              wsService={wsService}\n            />\n          )}\n        </ChatInput>\n      </ChatArea>\n      <CreateChannelModal\n        isOpen={isCreateModalOpen}\n        onClose={() => setIsCreateModalOpen(false)}\n      />\n    </MainContainer>\n  );\n};\n\nexport default MainLayout; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}