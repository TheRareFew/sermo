{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\layout\\\\MainLayout\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../../store/auth/authSlice';\nimport { setActiveChannel, setChannels, setUsers, updateUserStatus } from '../../../store/chat/chatSlice';\nimport { addMessage } from '../../../store/messages/messagesSlice';\nimport Button from '../../common/Button';\nimport UserListItem from '../../common/UserListItem';\nimport ChannelListItem from '../../common/ChannelListItem';\nimport CreateChannelModal from '../../chat/CreateChannelModal';\nimport MessageInput from '../../chat/MessageInput';\nimport MessageList from '../../chat/MessageList';\nimport wsService from '../../../services/websocket';\nimport { getChannels, getChannelUsers, joinChannel } from '../../../services/api/chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'VT323', monospace;\n`;\n_c = MainContainer;\nconst Sidebar = styled.div`\n  width: 200px;\n  border-right: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = Sidebar;\nconst ChannelList = styled.div`\n  flex: 1;\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n_c3 = ChannelList;\nconst UserList = styled.div`\n  height: 200px;\n  padding: 16px;\n  border-top: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n_c4 = UserList;\nconst ChatArea = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n`;\n_c5 = ChatArea;\nconst ChatHeader = styled.div`\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h1 {\n    margin: 0;\n    text-transform: uppercase;\n  }\n`;\n_c6 = ChatHeader;\nconst ChatInput = styled.div`\n  border-top: 2px solid ${props => props.theme.colors.border};\n`;\n_c7 = ChatInput;\nconst LogoutButton = styled.button`\n  background: none;\n  border: 2px solid ${props => props.theme.colors.error};\n  color: ${props => props.theme.colors.error};\n  padding: 4px 8px;\n  font-family: 'VT323', monospace;\n  cursor: pointer;\n  text-transform: uppercase;\n\n  &:hover {\n    background: ${props => props.theme.colors.error};\n    color: ${props => props.theme.colors.background};\n  }\n`;\n_c8 = LogoutButton;\nconst ChannelHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n\n  h2 {\n    margin: 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n_c9 = ChannelHeader;\nconst CreateChannelButton = styled(Button)`\n  padding: 2px 8px;\n  font-size: 0.875rem;\n`;\n_c10 = CreateChannelButton;\nconst MainLayout = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const activeChannelId = useSelector(state => state.chat.activeChannelId);\n  const channels = useSelector(state => state.chat.channels);\n  const users = useSelector(state => state.chat.users);\n  const activeChannel = channels.find(channel => channel.id === activeChannelId);\n  const currentUser = useSelector(state => state.auth.user);\n  const [channelMembers, setChannelMembers] = useState({});\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const fetchedChannels = await getChannels();\n        dispatch(setChannels(fetchedChannels));\n        if (fetchedChannels.length > 0) {\n          const channelUsers = await getChannelUsers(fetchedChannels[0].id);\n          dispatch(setUsers(channelUsers));\n          dispatch(setActiveChannel(fetchedChannels[0].id));\n        }\n      } catch (error) {\n        console.error('Failed to fetch initial data:', error);\n      }\n    };\n    fetchInitialData();\n\n    // Connect to WebSocket\n    console.log('Connecting to WebSocket...');\n    wsService.connect();\n\n    // Check WebSocket connection status\n    const checkConnection = setInterval(() => {\n      const wsState = wsService.getChatSocketState();\n      console.log('WebSocket state:', wsState);\n      if (wsState !== WebSocket.OPEN) {\n        console.log('Reconnecting WebSocket...');\n        wsService.connect();\n      }\n    }, 5000);\n    return () => {\n      clearInterval(checkConnection);\n      wsService.disconnect();\n    };\n  }, [dispatch]);\n\n  // Handle WebSocket messages in a separate useEffect\n  useEffect(() => {\n    const handleMessage = message => {\n      console.log('Received WebSocket message:', message);\n\n      // Handle both new message and message_sent events\n      if ((message.type === 'message' || message.type === 'message_sent') && message.message) {\n        try {\n          const {\n            id,\n            content,\n            channel_id,\n            sender_id,\n            created_at\n          } = message.message;\n          console.log('Processing message:', {\n            id,\n            content,\n            channel_id,\n            sender_id,\n            created_at\n          });\n          if (!id || !content || !channel_id || !sender_id) {\n            console.error('Invalid message format:', message);\n            return;\n          }\n          const transformedMessage = {\n            id: String(id),\n            content: content,\n            channelId: String(channel_id),\n            userId: String(sender_id),\n            reactions: [],\n            attachments: [],\n            createdAt: created_at || new Date().toISOString(),\n            updatedAt: created_at || new Date().toISOString()\n          };\n          console.log('Dispatching transformed message:', transformedMessage);\n          dispatch(addMessage(transformedMessage));\n        } catch (error) {\n          console.error('Error handling WebSocket message:', error);\n        }\n      } else if (message.type === 'presence_update' && message.user_id && message.status) {\n        dispatch(updateUserStatus({\n          userId: message.user_id,\n          status: message.status\n        }));\n      }\n    };\n\n    // onMessage returns a cleanup function\n    const cleanup = wsService.onMessage(handleMessage);\n    return cleanup;\n  }, [dispatch]);\n  useEffect(() => {\n    const fetchChannelMembers = async () => {\n      for (const channel of channels) {\n        try {\n          const members = await getChannelUsers(channel.id);\n          setChannelMembers(prev => ({\n            ...prev,\n            [channel.id]: members\n          }));\n        } catch (error) {\n          console.error(`Failed to fetch members for channel ${channel.id}:`, error);\n        }\n      }\n    };\n    fetchChannelMembers();\n  }, [channels]);\n  const handleChannelClick = channelId => {\n    dispatch(setActiveChannel(channelId));\n  };\n  const handleJoinChannel = async channelId => {\n    try {\n      await joinChannel(channelId);\n      const members = await getChannelUsers(channelId);\n      setChannelMembers(prev => ({\n        ...prev,\n        [channelId]: members\n      }));\n      handleChannelClick(channelId);\n    } catch (error) {\n      console.error('Failed to join channel:', error);\n    }\n  };\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(ChannelList, {\n        children: [/*#__PURE__*/_jsxDEV(ChannelHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Channels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CreateChannelButton, {\n            variant: \"secondary\",\n            size: \"small\",\n            onClick: () => setIsCreateModalOpen(true),\n            children: \"+New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), channels.map(channel => {\n          var _channelMembers$chann, _channelMembers$chann2;\n          const isJoined = (_channelMembers$chann = (_channelMembers$chann2 = channelMembers[channel.id]) === null || _channelMembers$chann2 === void 0 ? void 0 : _channelMembers$chann2.some(member => member.id === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id))) !== null && _channelMembers$chann !== void 0 ? _channelMembers$chann : false;\n          return /*#__PURE__*/_jsxDEV(ChannelListItem, {\n            name: channel.name,\n            isActive: channel.id === (activeChannelId !== null && activeChannelId !== void 0 ? activeChannelId : -1),\n            hasUnread: channel.unread_count ? channel.unread_count > 0 : false,\n            isDirect: channel.is_direct_message,\n            isJoined: isJoined,\n            onClick: () => handleChannelClick(channel.id),\n            onJoin: () => handleJoinChannel(channel.id)\n          }, channel.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserList, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Online Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), Object.values(users).map(user => /*#__PURE__*/_jsxDEV(UserListItem, {\n          username: user.username,\n          status: user.status\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatArea, {\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: activeChannel ? `${activeChannel.is_direct_message ? '@' : '#'}${activeChannel.name}` : 'Select a channel'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n        channelId: activeChannelId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        children: /*#__PURE__*/_jsxDEV(MessageInput, {\n          channelId: activeChannelId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), isCreateModalOpen && /*#__PURE__*/_jsxDEV(CreateChannelModal, {\n      isOpen: isCreateModalOpen,\n      onClose: () => setIsCreateModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(MainLayout, \"jaf4d3h82n2cpvaDLEa4CRxr/yI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c11 = MainLayout;\nexport default MainLayout;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"MainContainer\");\n$RefreshReg$(_c2, \"Sidebar\");\n$RefreshReg$(_c3, \"ChannelList\");\n$RefreshReg$(_c4, \"UserList\");\n$RefreshReg$(_c5, \"ChatArea\");\n$RefreshReg$(_c6, \"ChatHeader\");\n$RefreshReg$(_c7, \"ChatInput\");\n$RefreshReg$(_c8, \"LogoutButton\");\n$RefreshReg$(_c9, \"ChannelHeader\");\n$RefreshReg$(_c10, \"CreateChannelButton\");\n$RefreshReg$(_c11, \"MainLayout\");","map":{"version":3,"names":["React","useEffect","useState","styled","useDispatch","useSelector","logout","setActiveChannel","setChannels","setUsers","updateUserStatus","addMessage","Button","UserListItem","ChannelListItem","CreateChannelModal","MessageInput","MessageList","wsService","getChannels","getChannelUsers","joinChannel","jsxDEV","_jsxDEV","MainContainer","div","props","theme","colors","background","text","_c","Sidebar","border","_c2","ChannelList","primary","_c3","UserList","_c4","ChatArea","_c5","ChatHeader","_c6","ChatInput","_c7","LogoutButton","button","error","_c8","ChannelHeader","_c9","CreateChannelButton","_c10","MainLayout","_s","dispatch","isCreateModalOpen","setIsCreateModalOpen","activeChannelId","state","chat","channels","users","activeChannel","find","channel","id","currentUser","auth","user","channelMembers","setChannelMembers","fetchInitialData","fetchedChannels","length","channelUsers","console","log","connect","checkConnection","setInterval","wsState","getChatSocketState","WebSocket","OPEN","clearInterval","disconnect","handleMessage","message","type","content","channel_id","sender_id","created_at","transformedMessage","String","channelId","userId","reactions","attachments","createdAt","Date","toISOString","updatedAt","user_id","status","cleanup","onMessage","fetchChannelMembers","members","prev","handleChannelClick","handleJoinChannel","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","onClick","map","_channelMembers$chann","_channelMembers$chann2","isJoined","some","member","name","isActive","hasUnread","unread_count","isDirect","is_direct_message","onJoin","Object","values","username","isOpen","onClose","_c11","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/layout/MainLayout/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../../store/auth/authSlice';\nimport {\n  setActiveChannel,\n  setChannels,\n  setUsers,\n  updateUserStatus\n} from '../../../store/chat/chatSlice';\nimport { addMessage } from '../../../store/messages/messagesSlice';\nimport Button from '../../common/Button';\nimport UserListItem from '../../common/UserListItem';\nimport ChannelListItem from '../../common/ChannelListItem';\nimport CreateChannelModal from '../../chat/CreateChannelModal';\nimport MessageInput from '../../chat/MessageInput';\nimport MessageList from '../../chat/MessageList';\nimport wsService, { WebSocketMessage } from '../../../services/websocket';\nimport { getChannels, getChannelUsers, joinChannel } from '../../../services/api/chat';\nimport { StoreMessage } from '../../../store/types';\nimport { RootState } from '../../../store/rootReducer';\nimport { Channel, User } from '../../../types';\n\nconst MainContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'VT323', monospace;\n`;\n\nconst Sidebar = styled.div`\n  width: 200px;\n  border-right: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ChannelList = styled.div`\n  flex: 1;\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst UserList = styled.div`\n  height: 200px;\n  padding: 16px;\n  border-top: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst ChatArea = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst ChatHeader = styled.div`\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h1 {\n    margin: 0;\n    text-transform: uppercase;\n  }\n`;\n\nconst ChatInput = styled.div`\n  border-top: 2px solid ${props => props.theme.colors.border};\n`;\n\nconst LogoutButton = styled.button`\n  background: none;\n  border: 2px solid ${props => props.theme.colors.error};\n  color: ${props => props.theme.colors.error};\n  padding: 4px 8px;\n  font-family: 'VT323', monospace;\n  cursor: pointer;\n  text-transform: uppercase;\n\n  &:hover {\n    background: ${props => props.theme.colors.error};\n    color: ${props => props.theme.colors.background};\n  }\n`;\n\nconst ChannelHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n\n  h2 {\n    margin: 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst CreateChannelButton = styled(Button)`\n  padding: 2px 8px;\n  font-size: 0.875rem;\n`;\n\nconst MainLayout: React.FC = () => {\n  const dispatch = useDispatch();\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  \n  const activeChannelId = useSelector((state: RootState) => state.chat.activeChannelId);\n  const channels = useSelector((state: RootState) => state.chat.channels);\n  const users = useSelector((state: RootState) => state.chat.users);\n  const activeChannel = channels.find((channel: any) => channel.id === activeChannelId);\n  const currentUser = useSelector((state: RootState) => state.auth.user);\n  const [channelMembers, setChannelMembers] = useState<{ [channelId: number]: User[] }>({});\n\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const fetchedChannels = await getChannels();\n        dispatch(setChannels(fetchedChannels));\n\n        if (fetchedChannels.length > 0) {\n          const channelUsers = await getChannelUsers(fetchedChannels[0].id);\n          dispatch(setUsers(channelUsers));\n          dispatch(setActiveChannel(fetchedChannels[0].id));\n        }\n      } catch (error) {\n        console.error('Failed to fetch initial data:', error);\n      }\n    };\n\n    fetchInitialData();\n    \n    // Connect to WebSocket\n    console.log('Connecting to WebSocket...');\n    wsService.connect();\n\n    // Check WebSocket connection status\n    const checkConnection = setInterval(() => {\n      const wsState = wsService.getChatSocketState();\n      console.log('WebSocket state:', wsState);\n      if (wsState !== WebSocket.OPEN) {\n        console.log('Reconnecting WebSocket...');\n        wsService.connect();\n      }\n    }, 5000);\n\n    return () => {\n      clearInterval(checkConnection);\n      wsService.disconnect();\n    };\n  }, [dispatch]);\n\n  // Handle WebSocket messages in a separate useEffect\n  useEffect(() => {\n    const handleMessage = (message: WebSocketMessage) => {\n      console.log('Received WebSocket message:', message);\n      \n      // Handle both new message and message_sent events\n      if ((message.type === 'message' || message.type === 'message_sent') && message.message) {\n        try {\n          const { id, content, channel_id, sender_id, created_at } = message.message;\n          console.log('Processing message:', { id, content, channel_id, sender_id, created_at });\n          \n          if (!id || !content || !channel_id || !sender_id) {\n            console.error('Invalid message format:', message);\n            return;\n          }\n\n          const transformedMessage: StoreMessage = {\n            id: String(id),\n            content: content,\n            channelId: String(channel_id),\n            userId: String(sender_id),\n            reactions: [],\n            attachments: [],\n            createdAt: created_at || new Date().toISOString(),\n            updatedAt: created_at || new Date().toISOString()\n          };\n\n          console.log('Dispatching transformed message:', transformedMessage);\n          dispatch(addMessage(transformedMessage));\n        } catch (error) {\n          console.error('Error handling WebSocket message:', error);\n        }\n      } else if (message.type === 'presence_update' && message.user_id && message.status) {\n        dispatch(updateUserStatus({\n          userId: message.user_id,\n          status: message.status\n        }));\n      }\n    };\n\n    // onMessage returns a cleanup function\n    const cleanup = wsService.onMessage(handleMessage);\n    return cleanup;\n  }, [dispatch]);\n\n  useEffect(() => {\n    const fetchChannelMembers = async () => {\n      for (const channel of channels) {\n        try {\n          const members = await getChannelUsers(channel.id);\n          setChannelMembers(prev => ({\n            ...prev,\n            [channel.id]: members\n          }));\n        } catch (error) {\n          console.error(`Failed to fetch members for channel ${channel.id}:`, error);\n        }\n      }\n    };\n\n    fetchChannelMembers();\n  }, [channels]);\n\n  const handleChannelClick = (channelId: number) => {\n    dispatch(setActiveChannel(channelId));\n  };\n\n  const handleJoinChannel = async (channelId: number) => {\n    try {\n      await joinChannel(channelId);\n      const members = await getChannelUsers(channelId);\n      setChannelMembers(prev => ({\n        ...prev,\n        [channelId]: members\n      }));\n      handleChannelClick(channelId);\n    } catch (error) {\n      console.error('Failed to join channel:', error);\n    }\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <MainContainer>\n      <Sidebar>\n        <ChannelList>\n          <ChannelHeader>\n            <h2>Channels</h2>\n            <CreateChannelButton\n              variant=\"secondary\"\n              size=\"small\"\n              onClick={() => setIsCreateModalOpen(true)}\n            >\n              +New\n            </CreateChannelButton>\n          </ChannelHeader>\n          {channels.map((channel: Channel) => {\n            const isJoined = channelMembers[channel.id]?.some(member => member.id === currentUser?.id) ?? false;\n            return (\n              <ChannelListItem\n                key={channel.id}\n                name={channel.name}\n                isActive={channel.id === (activeChannelId ?? -1)}\n                hasUnread={channel.unread_count ? channel.unread_count > 0 : false}\n                isDirect={channel.is_direct_message}\n                isJoined={isJoined}\n                onClick={() => handleChannelClick(channel.id)}\n                onJoin={() => handleJoinChannel(channel.id)}\n              />\n            );\n          })}\n        </ChannelList>\n        <UserList>\n          <h2>Online Users</h2>\n          {Object.values(users).map((user: User) => (\n            <UserListItem\n              key={user.id}\n              username={user.username}\n              status={user.status}\n            />\n          ))}\n        </UserList>\n      </Sidebar>\n      <ChatArea>\n        <ChatHeader>\n          <h1>{activeChannel ? `${activeChannel.is_direct_message ? '@' : '#'}${activeChannel.name}` : 'Select a channel'}</h1>\n          <LogoutButton onClick={handleLogout}>Logout</LogoutButton>\n        </ChatHeader>\n        <MessageList channelId={activeChannelId} />\n        <ChatInput>\n          <MessageInput channelId={activeChannelId} />\n        </ChatInput>\n      </ChatArea>\n      {isCreateModalOpen && (\n        <CreateChannelModal\n          isOpen={isCreateModalOpen}\n          onClose={() => setIsCreateModalOpen(false)}\n        />\n      )}\n    </MainContainer>\n  );\n};\n\nexport default MainLayout; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,MAAM,QAAQ,+BAA+B;AACtD,SACEC,gBAAgB,EAChBC,WAAW,EACXC,QAAQ,EACRC,gBAAgB,QACX,+BAA+B;AACtC,SAASC,UAAU,QAAQ,uCAAuC;AAClE,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,kBAAkB,MAAM,+BAA+B;AAC9D,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,SAAS,MAA4B,6BAA6B;AACzE,SAASC,WAAW,EAAEC,eAAe,EAAEC,WAAW,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKvF,MAAMC,aAAa,GAAGrB,MAAM,CAACsB,GAAG;AAChC;AACA;AACA,sBAAsBC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,UAAU;AAC5D,WAAWH,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACE,IAAI;AAC3C;AACA,CAAC;AAACC,EAAA,GANIP,aAAa;AAQnB,MAAMQ,OAAO,GAAG7B,MAAM,CAACsB,GAAG;AAC1B;AACA,4BAA4BC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACK,MAAM;AAC9D;AACA;AACA,CAAC;AAACC,GAAA,GALIF,OAAO;AAOb,MAAMG,WAAW,GAAGhC,MAAM,CAACsB,GAAG;AAC9B;AACA;AACA,6BAA6BC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACK,MAAM;AAC/D;AACA;AACA;AACA;AACA;AACA,aAAaP,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACQ,OAAO;AAChD;AACA,CAAC;AAACC,GAAA,GAXIF,WAAW;AAajB,MAAMG,QAAQ,GAAGnC,MAAM,CAACsB,GAAG;AAC3B;AACA;AACA,0BAA0BC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACK,MAAM;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAaP,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACQ,OAAO;AAChD;AACA,CAAC;AAACG,GAAA,GAXID,QAAQ;AAad,MAAME,QAAQ,GAAGrC,MAAM,CAACsB,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACgB,GAAA,GANID,QAAQ;AAQd,MAAME,UAAU,GAAGvC,MAAM,CAACsB,GAAG;AAC7B;AACA,6BAA6BC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACK,MAAM;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACU,GAAA,GAXID,UAAU;AAahB,MAAME,SAAS,GAAGzC,MAAM,CAACsB,GAAG;AAC5B,0BAA0BC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACK,MAAM;AAC5D,CAAC;AAACY,GAAA,GAFID,SAAS;AAIf,MAAME,YAAY,GAAG3C,MAAM,CAAC4C,MAAM;AAClC;AACA,sBAAsBrB,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACoB,KAAK;AACvD,WAAWtB,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACoB,KAAK;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBtB,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACoB,KAAK;AACnD,aAAatB,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,UAAU;AACnD;AACA,CAAC;AAACoB,GAAA,GAbIH,YAAY;AAelB,MAAMI,aAAa,GAAG/C,MAAM,CAACsB,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAaC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACQ,OAAO;AAChD;AACA,CAAC;AAACe,GAAA,GAXID,aAAa;AAanB,MAAME,mBAAmB,GAAGjD,MAAM,CAACS,MAAM,CAAC;AAC1C;AACA;AACA,CAAC;AAACyC,IAAA,GAHID,mBAAmB;AAKzB,MAAME,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGpD,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACqD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGxD,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMyD,eAAe,GAAGtD,WAAW,CAAEuD,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACF,eAAe,CAAC;EACrF,MAAMG,QAAQ,GAAGzD,WAAW,CAAEuD,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACC,QAAQ,CAAC;EACvE,MAAMC,KAAK,GAAG1D,WAAW,CAAEuD,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACE,KAAK,CAAC;EACjE,MAAMC,aAAa,GAAGF,QAAQ,CAACG,IAAI,CAAEC,OAAY,IAAKA,OAAO,CAACC,EAAE,KAAKR,eAAe,CAAC;EACrF,MAAMS,WAAW,GAAG/D,WAAW,CAAEuD,KAAgB,IAAKA,KAAK,CAACS,IAAI,CAACC,IAAI,CAAC;EACtE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGtE,QAAQ,CAAkC,CAAC,CAAC,CAAC;EAEzFD,SAAS,CAAC,MAAM;IACd,MAAMwE,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,eAAe,GAAG,MAAMvD,WAAW,CAAC,CAAC;QAC3CqC,QAAQ,CAAChD,WAAW,CAACkE,eAAe,CAAC,CAAC;QAEtC,IAAIA,eAAe,CAACC,MAAM,GAAG,CAAC,EAAE;UAC9B,MAAMC,YAAY,GAAG,MAAMxD,eAAe,CAACsD,eAAe,CAAC,CAAC,CAAC,CAACP,EAAE,CAAC;UACjEX,QAAQ,CAAC/C,QAAQ,CAACmE,YAAY,CAAC,CAAC;UAChCpB,QAAQ,CAACjD,gBAAgB,CAACmE,eAAe,CAAC,CAAC,CAAC,CAACP,EAAE,CAAC,CAAC;QACnD;MACF,CAAC,CAAC,OAAOnB,KAAK,EAAE;QACd6B,OAAO,CAAC7B,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDyB,gBAAgB,CAAC,CAAC;;IAElB;IACAI,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzC5D,SAAS,CAAC6D,OAAO,CAAC,CAAC;;IAEnB;IACA,MAAMC,eAAe,GAAGC,WAAW,CAAC,MAAM;MACxC,MAAMC,OAAO,GAAGhE,SAAS,CAACiE,kBAAkB,CAAC,CAAC;MAC9CN,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEI,OAAO,CAAC;MACxC,IAAIA,OAAO,KAAKE,SAAS,CAACC,IAAI,EAAE;QAC9BR,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QACxC5D,SAAS,CAAC6D,OAAO,CAAC,CAAC;MACrB;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACXO,aAAa,CAACN,eAAe,CAAC;MAC9B9D,SAAS,CAACqE,UAAU,CAAC,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,CAAC/B,QAAQ,CAAC,CAAC;;EAEd;EACAvD,SAAS,CAAC,MAAM;IACd,MAAMuF,aAAa,GAAIC,OAAyB,IAAK;MACnDZ,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEW,OAAO,CAAC;;MAEnD;MACA,IAAI,CAACA,OAAO,CAACC,IAAI,KAAK,SAAS,IAAID,OAAO,CAACC,IAAI,KAAK,cAAc,KAAKD,OAAO,CAACA,OAAO,EAAE;QACtF,IAAI;UACF,MAAM;YAAEtB,EAAE;YAAEwB,OAAO;YAAEC,UAAU;YAAEC,SAAS;YAAEC;UAAW,CAAC,GAAGL,OAAO,CAACA,OAAO;UAC1EZ,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE;YAAEX,EAAE;YAAEwB,OAAO;YAAEC,UAAU;YAAEC,SAAS;YAAEC;UAAW,CAAC,CAAC;UAEtF,IAAI,CAAC3B,EAAE,IAAI,CAACwB,OAAO,IAAI,CAACC,UAAU,IAAI,CAACC,SAAS,EAAE;YAChDhB,OAAO,CAAC7B,KAAK,CAAC,yBAAyB,EAAEyC,OAAO,CAAC;YACjD;UACF;UAEA,MAAMM,kBAAgC,GAAG;YACvC5B,EAAE,EAAE6B,MAAM,CAAC7B,EAAE,CAAC;YACdwB,OAAO,EAAEA,OAAO;YAChBM,SAAS,EAAED,MAAM,CAACJ,UAAU,CAAC;YAC7BM,MAAM,EAAEF,MAAM,CAACH,SAAS,CAAC;YACzBM,SAAS,EAAE,EAAE;YACbC,WAAW,EAAE,EAAE;YACfC,SAAS,EAAEP,UAAU,IAAI,IAAIQ,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;YACjDC,SAAS,EAAEV,UAAU,IAAI,IAAIQ,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;UAClD,CAAC;UAED1B,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEiB,kBAAkB,CAAC;UACnEvC,QAAQ,CAAC7C,UAAU,CAACoF,kBAAkB,CAAC,CAAC;QAC1C,CAAC,CAAC,OAAO/C,KAAK,EAAE;UACd6B,OAAO,CAAC7B,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QAC3D;MACF,CAAC,MAAM,IAAIyC,OAAO,CAACC,IAAI,KAAK,iBAAiB,IAAID,OAAO,CAACgB,OAAO,IAAIhB,OAAO,CAACiB,MAAM,EAAE;QAClFlD,QAAQ,CAAC9C,gBAAgB,CAAC;UACxBwF,MAAM,EAAET,OAAO,CAACgB,OAAO;UACvBC,MAAM,EAAEjB,OAAO,CAACiB;QAClB,CAAC,CAAC,CAAC;MACL;IACF,CAAC;;IAED;IACA,MAAMC,OAAO,GAAGzF,SAAS,CAAC0F,SAAS,CAACpB,aAAa,CAAC;IAClD,OAAOmB,OAAO;EAChB,CAAC,EAAE,CAACnD,QAAQ,CAAC,CAAC;EAEdvD,SAAS,CAAC,MAAM;IACd,MAAM4G,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,KAAK,MAAM3C,OAAO,IAAIJ,QAAQ,EAAE;QAC9B,IAAI;UACF,MAAMgD,OAAO,GAAG,MAAM1F,eAAe,CAAC8C,OAAO,CAACC,EAAE,CAAC;UACjDK,iBAAiB,CAACuC,IAAI,KAAK;YACzB,GAAGA,IAAI;YACP,CAAC7C,OAAO,CAACC,EAAE,GAAG2C;UAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,OAAO9D,KAAK,EAAE;UACd6B,OAAO,CAAC7B,KAAK,CAAC,uCAAuCkB,OAAO,CAACC,EAAE,GAAG,EAAEnB,KAAK,CAAC;QAC5E;MACF;IACF,CAAC;IAED6D,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAAC/C,QAAQ,CAAC,CAAC;EAEd,MAAMkD,kBAAkB,GAAIf,SAAiB,IAAK;IAChDzC,QAAQ,CAACjD,gBAAgB,CAAC0F,SAAS,CAAC,CAAC;EACvC,CAAC;EAED,MAAMgB,iBAAiB,GAAG,MAAOhB,SAAiB,IAAK;IACrD,IAAI;MACF,MAAM5E,WAAW,CAAC4E,SAAS,CAAC;MAC5B,MAAMa,OAAO,GAAG,MAAM1F,eAAe,CAAC6E,SAAS,CAAC;MAChDzB,iBAAiB,CAACuC,IAAI,KAAK;QACzB,GAAGA,IAAI;QACP,CAACd,SAAS,GAAGa;MACf,CAAC,CAAC,CAAC;MACHE,kBAAkB,CAACf,SAAS,CAAC;IAC/B,CAAC,CAAC,OAAOjD,KAAK,EAAE;MACd6B,OAAO,CAAC7B,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,MAAMkE,YAAY,GAAGA,CAAA,KAAM;IACzB1D,QAAQ,CAAClD,MAAM,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,oBACEiB,OAAA,CAACC,aAAa;IAAA2F,QAAA,gBACZ5F,OAAA,CAACS,OAAO;MAAAmF,QAAA,gBACN5F,OAAA,CAACY,WAAW;QAAAgF,QAAA,gBACV5F,OAAA,CAAC2B,aAAa;UAAAiE,QAAA,gBACZ5F,OAAA;YAAA4F,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBhG,OAAA,CAAC6B,mBAAmB;YAClBoE,OAAO,EAAC,WAAW;YACnBC,IAAI,EAAC,OAAO;YACZC,OAAO,EAAEA,CAAA,KAAMhE,oBAAoB,CAAC,IAAI,CAAE;YAAAyD,QAAA,EAC3C;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAqB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,EACfzD,QAAQ,CAAC6D,GAAG,CAAEzD,OAAgB,IAAK;UAAA,IAAA0D,qBAAA,EAAAC,sBAAA;UAClC,MAAMC,QAAQ,IAAAF,qBAAA,IAAAC,sBAAA,GAAGtD,cAAc,CAACL,OAAO,CAACC,EAAE,CAAC,cAAA0D,sBAAA,uBAA1BA,sBAAA,CAA4BE,IAAI,CAACC,MAAM,IAAIA,MAAM,CAAC7D,EAAE,MAAKC,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAED,EAAE,EAAC,cAAAyD,qBAAA,cAAAA,qBAAA,GAAI,KAAK;UACnG,oBACErG,OAAA,CAACT,eAAe;YAEdmH,IAAI,EAAE/D,OAAO,CAAC+D,IAAK;YACnBC,QAAQ,EAAEhE,OAAO,CAACC,EAAE,MAAMR,eAAe,aAAfA,eAAe,cAAfA,eAAe,GAAI,CAAC,CAAC,CAAE;YACjDwE,SAAS,EAAEjE,OAAO,CAACkE,YAAY,GAAGlE,OAAO,CAACkE,YAAY,GAAG,CAAC,GAAG,KAAM;YACnEC,QAAQ,EAAEnE,OAAO,CAACoE,iBAAkB;YACpCR,QAAQ,EAAEA,QAAS;YACnBJ,OAAO,EAAEA,CAAA,KAAMV,kBAAkB,CAAC9C,OAAO,CAACC,EAAE,CAAE;YAC9CoE,MAAM,EAAEA,CAAA,KAAMtB,iBAAiB,CAAC/C,OAAO,CAACC,EAAE;UAAE,GAPvCD,OAAO,CAACC,EAAE;YAAAiD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQhB,CAAC;QAEN,CAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC,eACdhG,OAAA,CAACe,QAAQ;QAAA6E,QAAA,gBACP5F,OAAA;UAAA4F,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACpBiB,MAAM,CAACC,MAAM,CAAC1E,KAAK,CAAC,CAAC4D,GAAG,CAAErD,IAAU,iBACnC/C,OAAA,CAACV,YAAY;UAEX6H,QAAQ,EAAEpE,IAAI,CAACoE,QAAS;UACxBhC,MAAM,EAAEpC,IAAI,CAACoC;QAAO,GAFfpC,IAAI,CAACH,EAAE;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGb,CACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACVhG,OAAA,CAACiB,QAAQ;MAAA2E,QAAA,gBACP5F,OAAA,CAACmB,UAAU;QAAAyE,QAAA,gBACT5F,OAAA;UAAA4F,QAAA,EAAKnD,aAAa,GAAG,GAAGA,aAAa,CAACsE,iBAAiB,GAAG,GAAG,GAAG,GAAG,GAAGtE,aAAa,CAACiE,IAAI,EAAE,GAAG;QAAkB;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrHhG,OAAA,CAACuB,YAAY;UAAC4E,OAAO,EAAER,YAAa;UAAAC,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACbhG,OAAA,CAACN,WAAW;QAACgF,SAAS,EAAEtC;MAAgB;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3ChG,OAAA,CAACqB,SAAS;QAAAuE,QAAA,eACR5F,OAAA,CAACP,YAAY;UAACiF,SAAS,EAAEtC;QAAgB;UAAAyD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EACV9D,iBAAiB,iBAChBlC,OAAA,CAACR,kBAAkB;MACjB4H,MAAM,EAAElF,iBAAkB;MAC1BmF,OAAO,EAAEA,CAAA,KAAMlF,oBAAoB,CAAC,KAAK;IAAE;MAAA0D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAEpB,CAAC;AAAChE,EAAA,CAjMID,UAAoB;EAAA,QACPlD,WAAW,EAGJC,WAAW,EAClBA,WAAW,EACdA,WAAW,EAELA,WAAW;AAAA;AAAAwI,IAAA,GAR3BvF,UAAoB;AAmM1B,eAAeA,UAAU;AAAC,IAAAvB,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAI,GAAA,EAAAE,GAAA,EAAAE,IAAA,EAAAwF,IAAA;AAAAC,YAAA,CAAA/G,EAAA;AAAA+G,YAAA,CAAA5G,GAAA;AAAA4G,YAAA,CAAAzG,GAAA;AAAAyG,YAAA,CAAAvG,GAAA;AAAAuG,YAAA,CAAArG,GAAA;AAAAqG,YAAA,CAAAnG,GAAA;AAAAmG,YAAA,CAAAjG,GAAA;AAAAiG,YAAA,CAAA7F,GAAA;AAAA6F,YAAA,CAAA3F,GAAA;AAAA2F,YAAA,CAAAzF,IAAA;AAAAyF,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}