{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isAuthenticated: !!localStorage.getItem('auth_token'),\n  user: null,\n  token: localStorage.getItem('auth_token'),\n  loading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.loading = false;\n      state.error = null;\n      localStorage.setItem('auth_token', action.payload.token);\n      console.log('Auth state updated - token:', action.payload.token);\n    },\n    loginFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.isAuthenticated = false;\n      state.token = null;\n      state.user = null;\n      localStorage.removeItem('auth_token');\n      console.log('Auth state cleared due to login failure');\n    },\n    signupStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    signupSuccess: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.loading = false;\n      state.error = null;\n      localStorage.setItem('auth_token', action.payload.token);\n      console.log('Auth state updated after signup - token:', action.payload.token);\n    },\n    signupFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.isAuthenticated = false;\n      state.token = null;\n      state.user = null;\n      localStorage.removeItem('auth_token');\n      console.log('Auth state cleared due to signup failure');\n    },\n    logout: state => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n      state.loading = false;\n      state.error = null;\n      localStorage.removeItem('auth_token');\n      console.log('Auth state cleared after logout');\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  signupStart,\n  signupSuccess,\n  signupFailure,\n  logout,\n  clearError\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isAuthenticated","localStorage","getItem","user","token","loading","error","authSlice","name","reducers","loginStart","state","loginSuccess","action","payload","setItem","console","log","loginFailure","removeItem","signupStart","signupSuccess","signupFailure","logout","clearError","actions","reducer"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/store/auth/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AuthState, User, AuthResponse } from '../../types';\r\n\r\nconst initialState: AuthState = {\r\n  isAuthenticated: !!localStorage.getItem('auth_token'),\r\n  user: null,\r\n  token: localStorage.getItem('auth_token'),\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    loginStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    loginSuccess: (state, action: PayloadAction<AuthResponse>) => {\r\n      state.isAuthenticated = true;\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.loading = false;\r\n      state.error = null;\r\n      localStorage.setItem('auth_token', action.payload.token);\r\n      console.log('Auth state updated - token:', action.payload.token);\r\n    },\r\n    loginFailure: (state, action: PayloadAction<string>) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n      state.isAuthenticated = false;\r\n      state.token = null;\r\n      state.user = null;\r\n      localStorage.removeItem('auth_token');\r\n      console.log('Auth state cleared due to login failure');\r\n    },\r\n    signupStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    signupSuccess: (state, action: PayloadAction<AuthResponse>) => {\r\n      state.isAuthenticated = true;\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.loading = false;\r\n      state.error = null;\r\n      localStorage.setItem('auth_token', action.payload.token);\r\n      console.log('Auth state updated after signup - token:', action.payload.token);\r\n    },\r\n    signupFailure: (state, action: PayloadAction<string>) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n      state.isAuthenticated = false;\r\n      state.token = null;\r\n      state.user = null;\r\n      localStorage.removeItem('auth_token');\r\n      console.log('Auth state cleared due to signup failure');\r\n    },\r\n    logout: (state) => {\r\n      state.isAuthenticated = false;\r\n      state.user = null;\r\n      state.token = null;\r\n      state.loading = false;\r\n      state.error = null;\r\n      localStorage.removeItem('auth_token');\r\n      console.log('Auth state cleared after logout');\r\n    },\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  loginStart,\r\n  loginSuccess,\r\n  loginFailure,\r\n  signupStart,\r\n  signupSuccess,\r\n  signupFailure,\r\n  logout,\r\n  clearError,\r\n} = authSlice.actions;\r\n\r\nexport default authSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}