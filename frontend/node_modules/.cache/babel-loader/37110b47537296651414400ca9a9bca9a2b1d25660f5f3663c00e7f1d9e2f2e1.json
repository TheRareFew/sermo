{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MessageComponent from '../Message';\nimport MessageReplies from '../MessageReplies';\nimport ReplyModal from '../ReplyModal';\nimport { deleteMessage, toggleExpanded, setReplies } from '../../../store/messages/messagesSlice';\nimport { getReplies } from '../../../services/api/chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\nconst MessagesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: auto;\n`;\nconst LoadingIndicator = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.textLight};\n  font-family: 'Courier New', monospace;\n`;\nconst MessageWrapper = styled.div`\n  transition: background-color 0.3s ease;\n  padding: 4px;\n  border-radius: 4px;\n  background-color: ${props => props.$isSelected ? '#3a3a3a' : 'transparent'};\n`;\n_c = MessageWrapper;\nconst MessageList = ({\n  messages,\n  selectedMessageId\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.users.users);\n  const currentUser = useSelector(state => state.auth.user);\n  const activeChannelId = useSelector(state => state.channels.activeChannelId);\n  const selectedMessageRef = useRef(null);\n  const containerRef = useRef(null);\n  const loadedRepliesRef = useRef(new Set());\n  const [replyModalOpen, setReplyModalOpen] = useState(false);\n  const [selectedMessage, setSelectedMessage] = useState(null);\n\n  // ... rest of component ...\n\n  const handleReply = message => {\n    setSelectedMessage(message);\n    setReplyModalOpen(true);\n  };\n  const handleDelete = async messageId => {\n    try {\n      await deleteMessage(Number(activeChannelId), messageId);\n    } catch (error) {\n      console.error('Error deleting message:', error);\n    }\n  };\n  const handleLoadReplies = async messageId => {\n    if (!loadedRepliesRef.current.has(messageId)) {\n      try {\n        const replies = await getReplies(Number(activeChannelId), messageId);\n        dispatch(setReplies({\n          channelId: Number(activeChannelId),\n          parentMessageId: messageId,\n          replies\n        }));\n        loadedRepliesRef.current.add(messageId);\n      } catch (error) {\n        console.error('Error loading replies:', error);\n      }\n    }\n  };\n  const handleToggleReplies = messageId => {\n    dispatch(toggleExpanded({\n      channelId: Number(activeChannelId),\n      messageId\n    }));\n  };\n\n  // ... rest of component ...\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    ref: containerRef,\n    children: [messages.map(message => {\n      var _users$message$userId;\n      return /*#__PURE__*/_jsxDEV(MessageWrapper, {\n        ref: message.id === Number(selectedMessageId) ? selectedMessageRef : undefined,\n        children: [/*#__PURE__*/_jsxDEV(MessageComponent, {\n          content: message.content,\n          sender: ((_users$message$userId = users[message.userId]) === null || _users$message$userId === void 0 ? void 0 : _users$message$userId.username) || message.userId.toString(),\n          timestamp: message.createdAt,\n          currentUserId: currentUser !== null && currentUser !== void 0 && currentUser.id ? Number(currentUser.id) : undefined,\n          userId: message.userId,\n          onReply: () => handleReply(message),\n          onDelete: () => handleDelete(message.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), message.replyCount > 0 && /*#__PURE__*/_jsxDEV(MessageReplies, {\n          parentId: message.id,\n          replies: message.replies || [],\n          isExpanded: message.isExpanded,\n          onToggleReplies: () => handleToggleReplies(message.id),\n          onDelete: handleDelete,\n          currentUserId: currentUser !== null && currentUser !== void 0 && currentUser.id ? Number(currentUser.id) : undefined\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(ReplyModal, {\n      isOpen: replyModalOpen,\n      onClose: () => setReplyModalOpen(false),\n      parentMessage: selectedMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageList, \"2BHi6DBjeuy3xl8QWw5oE2CjVd8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c2 = MessageList;\nexport default MessageList;\nvar _c, _c2;\n$RefreshReg$(_c, \"MessageWrapper\");\n$RefreshReg$(_c2, \"MessageList\");","map":{"version":3,"names":["React","useRef","useState","styled","useSelector","useDispatch","MessageComponent","MessageReplies","ReplyModal","deleteMessage","toggleExpanded","setReplies","getReplies","jsxDEV","_jsxDEV","MessageListContainer","div","MessagesWrapper","LoadingIndicator","props","theme","colors","textLight","MessageWrapper","$isSelected","_c","MessageList","messages","selectedMessageId","_s","dispatch","users","state","currentUser","auth","user","activeChannelId","channels","selectedMessageRef","containerRef","loadedRepliesRef","Set","replyModalOpen","setReplyModalOpen","selectedMessage","setSelectedMessage","handleReply","message","handleDelete","messageId","Number","error","console","handleLoadReplies","current","has","replies","channelId","parentMessageId","add","handleToggleReplies","Container","ref","children","map","_users$message$userId","id","undefined","content","sender","userId","username","toString","timestamp","createdAt","currentUserId","onReply","onDelete","fileName","_jsxFileName","lineNumber","columnNumber","replyCount","parentId","isExpanded","onToggleReplies","isOpen","onClose","parentMessage","_c2","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageList/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, forwardRef, useState, useCallback, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState, StoreMessage, User, WebSocketMessage, RawMessage, isMessageData } from '../../../types';\nimport type { Message } from '../../../types';\nimport { transformMessage } from '../../../utils/messageTransform';\nimport MessageComponent from '../Message';\nimport MessageReplies from '../MessageReplies';\nimport ReplyModal from '../ReplyModal';\nimport { deleteMessage, toggleExpanded, addMessage, setMessages, setReplies, updateMessage, setExpanded, addReply } from '../../../store/messages/messagesSlice';\nimport { deleteMessage as deleteMessageApi, getChannelMessages, createReply, getReplies } from '../../../services/api/chat';\nimport { setError } from '../../../store/chat/chatSlice';\nimport { toast } from 'react-toastify';\nimport wsService from '../../../services/websocket';\n\ninterface MessageListProps {\n  messages: StoreMessage[];\n  selectedMessageId?: number | null;\n  channelId?: number;\n}\n\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nconst MessagesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: auto;\n`;\n\nconst LoadingIndicator = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.textLight};\n  font-family: 'Courier New', monospace;\n`;\n\nconst MessageWrapper = styled.div<{ $isSelected?: boolean }>`\n  transition: background-color 0.3s ease;\n  padding: 4px;\n  border-radius: 4px;\n  background-color: ${props => props.$isSelected ? '#3a3a3a' : 'transparent'};\n`;\n\nconst MessageList: React.FC<MessageListProps> = ({ messages, selectedMessageId }) => {\n  const dispatch = useDispatch();\n  const users = useSelector((state: RootState) => state.users.users);\n  const currentUser = useSelector((state: RootState) => state.auth.user);\n  const activeChannelId = useSelector((state: RootState) => state.channels.activeChannelId);\n  const selectedMessageRef = useRef<HTMLDivElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const loadedRepliesRef = useRef<Set<number>>(new Set());\n  const [replyModalOpen, setReplyModalOpen] = useState(false);\n  const [selectedMessage, setSelectedMessage] = useState<StoreMessage | null>(null);\n\n  // ... rest of component ...\n\n  const handleReply = (message: StoreMessage) => {\n    setSelectedMessage(message);\n    setReplyModalOpen(true);\n  };\n\n  const handleDelete = async (messageId: number) => {\n    try {\n      await deleteMessage(Number(activeChannelId), messageId);\n    } catch (error) {\n      console.error('Error deleting message:', error);\n    }\n  };\n\n  const handleLoadReplies = async (messageId: number) => {\n    if (!loadedRepliesRef.current.has(messageId)) {\n      try {\n        const replies = await getReplies(Number(activeChannelId), messageId);\n        dispatch(setReplies({ channelId: Number(activeChannelId), parentMessageId: messageId, replies }));\n        loadedRepliesRef.current.add(messageId);\n      } catch (error) {\n        console.error('Error loading replies:', error);\n      }\n    }\n  };\n\n  const handleToggleReplies = (messageId: number) => {\n    dispatch(toggleExpanded({ channelId: Number(activeChannelId), messageId }));\n  };\n\n  // ... rest of component ...\n\n  return (\n    <Container ref={containerRef}>\n      {messages.map((message) => (\n        <MessageWrapper\n          key={message.id}\n          ref={message.id === Number(selectedMessageId) ? selectedMessageRef : undefined}\n        >\n          <MessageComponent\n            content={message.content}\n            sender={users[message.userId]?.username || message.userId.toString()}\n            timestamp={message.createdAt}\n            currentUserId={currentUser?.id ? Number(currentUser.id) : undefined}\n            userId={message.userId}\n            onReply={() => handleReply(message)}\n            onDelete={() => handleDelete(message.id)}\n          />\n          {message.replyCount > 0 && (\n            <MessageReplies\n              parentId={message.id}\n              replies={message.replies || []}\n              isExpanded={message.isExpanded}\n              onToggleReplies={() => handleToggleReplies(message.id)}\n              onDelete={handleDelete}\n              currentUserId={currentUser?.id ? Number(currentUser.id) : undefined}\n            />\n          )}\n        </MessageWrapper>\n      ))}\n      <ReplyModal\n        isOpen={replyModalOpen}\n        onClose={() => setReplyModalOpen(false)}\n        parentMessage={selectedMessage}\n      />\n    </Container>\n  );\n};\n\nexport default MessageList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}