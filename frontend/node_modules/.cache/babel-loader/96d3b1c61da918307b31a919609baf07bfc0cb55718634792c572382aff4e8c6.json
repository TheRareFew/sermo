{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  loading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    // Login actions\n    loginStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.loading = false;\n      state.error = null;\n    },\n    loginFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    // Signup actions\n    signupStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    signupSuccess: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.loading = false;\n      state.error = null;\n    },\n    signupFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    // Logout action\n    logout: state => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.loading = false;\n      state.error = null;\n    },\n    // Clear error action\n    clearError: state => {\n      state.error = null;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  signupStart,\n  signupSuccess,\n  signupFailure,\n  logout,\n  clearError\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isAuthenticated","user","loading","error","authSlice","name","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","signupStart","signupSuccess","signupFailure","logout","clearError","actions","reducer"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/store/auth/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AuthState, User } from '../types';\r\n\r\nconst initialState: AuthState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    // Login actions\r\n    loginStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    loginSuccess: (state, action: PayloadAction<{ user: User }>) => {\r\n      state.isAuthenticated = true;\r\n      state.user = action.payload.user;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    loginFailure: (state, action: PayloadAction<string>) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // Signup actions\r\n    signupStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    signupSuccess: (state, action: PayloadAction<{ user: User }>) => {\r\n      state.isAuthenticated = true;\r\n      state.user = action.payload.user;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    signupFailure: (state, action: PayloadAction<string>) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // Logout action\r\n    logout: (state) => {\r\n      state.isAuthenticated = false;\r\n      state.user = null;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n\r\n    // Clear error action\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  loginStart,\r\n  loginSuccess,\r\n  loginFailure,\r\n  signupStart,\r\n  signupSuccess,\r\n  signupFailure,\r\n  logout,\r\n  clearError,\r\n} = authSlice.actions;\r\n\r\nexport default authSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAG7D,MAAMC,YAAuB,GAAG;EAC9BC,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC5BO,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE;IACR;IACAC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDM,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAAqC,KAAK;MAC9DF,KAAK,CAACR,eAAe,GAAG,IAAI;MAC5BQ,KAAK,CAACP,IAAI,GAAGS,MAAM,CAACC,OAAO,CAACV,IAAI;MAChCO,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDS,YAAY,EAAEA,CAACJ,KAAK,EAAEE,MAA6B,KAAK;MACtDF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC;IAED;IACAE,WAAW,EAAGL,KAAK,IAAK;MACtBA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDW,aAAa,EAAEA,CAACN,KAAK,EAAEE,MAAqC,KAAK;MAC/DF,KAAK,CAACR,eAAe,GAAG,IAAI;MAC5BQ,KAAK,CAACP,IAAI,GAAGS,MAAM,CAACC,OAAO,CAACV,IAAI;MAChCO,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDY,aAAa,EAAEA,CAACP,KAAK,EAAEE,MAA6B,KAAK;MACvDF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC;IAED;IACAK,MAAM,EAAGR,KAAK,IAAK;MACjBA,KAAK,CAACR,eAAe,GAAG,KAAK;MAC7BQ,KAAK,CAACP,IAAI,GAAG,IAAI;MACjBO,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IAED;IACAc,UAAU,EAAGT,KAAK,IAAK;MACrBA,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXI,UAAU;EACVE,YAAY;EACZG,YAAY;EACZC,WAAW;EACXC,aAAa;EACbC,aAAa;EACbC,MAAM;EACNC;AACF,CAAC,GAAGb,SAAS,CAACc,OAAO;AAErB,eAAed,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}