{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageInput\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport wsService from '../../../services/websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputContainer = styled.div`\n  padding: 16px 32px;\n  background: ${props => props.theme.colors.background};\n  display: flex;\n  justify-content: center;\n`;\n_c = InputContainer;\nconst StyledInput = styled.input`\n  width: 100%;\n  max-width: 800px;\n  padding: 12px 16px;\n  background: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  border: 2px solid ${props => props.theme.colors.border};\n  border-radius: 4px;\n  font-family: 'Courier New', monospace;\n  font-size: 14px;\n\n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.colors.primary};\n    box-shadow: 0 0 0 1px ${props => props.theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${props => props.theme.colors.textSecondary};\n  }\n`;\n_c2 = StyledInput;\nconst MessageInput = ({\n  channelId\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [isSending, setIsSending] = useState(false);\n  const handleSendMessage = async content => {\n    if (isSending || !content.trim()) return;\n    try {\n      setIsSending(true);\n      console.log('Sending message:', {\n        channelId,\n        content: content.trim(),\n        wsReadyState: wsService.getChatSocketState()\n      });\n\n      // Send via WebSocket only\n      wsService.sendMessage(channelId, content.trim());\n      setMessage('');\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    } finally {\n      setIsSending(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && message.trim()) {\n      handleSendMessage(message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(InputContainer, {\n    children: /*#__PURE__*/_jsxDEV(StyledInput, {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyPress: handleKeyPress,\n      placeholder: \"> Type your message and press Enter...\",\n      \"aria-label\": \"Message input\",\n      disabled: isSending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageInput, \"+OovNtLH1NxIqqL2P7v61l7Gk14=\");\n_c3 = MessageInput;\nexport default MessageInput;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"InputContainer\");\n$RefreshReg$(_c2, \"StyledInput\");\n$RefreshReg$(_c3, \"MessageInput\");","map":{"version":3,"names":["React","useState","styled","wsService","jsxDEV","_jsxDEV","InputContainer","div","props","theme","colors","background","_c","StyledInput","input","text","border","primary","textSecondary","_c2","MessageInput","channelId","_s","message","setMessage","isSending","setIsSending","handleSendMessage","content","trim","console","log","wsReadyState","getChatSocketState","sendMessage","error","handleKeyPress","e","key","children","type","value","onChange","target","onKeyPress","placeholder","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageInput/index.tsx"],"sourcesContent":["import React, { useState, KeyboardEvent } from 'react';\r\nimport styled from 'styled-components';\r\nimport wsService from '../../../services/websocket';\r\n\r\ninterface MessageInputProps {\r\n  channelId: number;\r\n}\r\n\r\nconst InputContainer = styled.div`\r\n  padding: 16px 32px;\r\n  background: ${props => props.theme.colors.background};\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  max-width: 800px;\r\n  padding: 12px 16px;\r\n  background: ${props => props.theme.colors.background};\r\n  color: ${props => props.theme.colors.text};\r\n  border: 2px solid ${props => props.theme.colors.border};\r\n  border-radius: 4px;\r\n  font-family: 'Courier New', monospace;\r\n  font-size: 14px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${props => props.theme.colors.primary};\r\n    box-shadow: 0 0 0 1px ${props => props.theme.colors.primary};\r\n  }\r\n\r\n  &::placeholder {\r\n    color: ${props => props.theme.colors.textSecondary};\r\n  }\r\n`;\r\n\r\nconst MessageInput: React.FC<MessageInputProps> = ({ channelId }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [isSending, setIsSending] = useState(false);\r\n\r\n  const handleSendMessage = async (content: string) => {\r\n    if (isSending || !content.trim()) return;\r\n\r\n    try {\r\n      setIsSending(true);\r\n      console.log('Sending message:', {\r\n        channelId,\r\n        content: content.trim(),\r\n        wsReadyState: wsService.getChatSocketState()\r\n      });\r\n      \r\n      // Send via WebSocket only\r\n      wsService.sendMessage(channelId, content.trim());\r\n      setMessage('');\r\n    } catch (error) {\r\n      console.error('Failed to send message:', error);\r\n    } finally {\r\n      setIsSending(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter' && message.trim()) {\r\n      handleSendMessage(message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputContainer>\r\n      <StyledInput\r\n        type=\"text\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        onKeyPress={handleKeyPress}\r\n        placeholder=\"> Type your message and press Enter...\"\r\n        aria-label=\"Message input\"\r\n        disabled={isSending}\r\n      />\r\n    </InputContainer>\r\n  );\r\n};\r\n\r\nexport default MessageInput; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}