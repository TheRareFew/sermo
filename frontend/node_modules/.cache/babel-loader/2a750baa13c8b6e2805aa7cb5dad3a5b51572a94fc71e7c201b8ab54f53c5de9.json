{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageReplies\\\\index.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport ChatMessage from '../../common/ChatMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RepliesContainer = styled.div`\n  margin-left: 24px;\n  border-left: 2px solid ${props => props.theme.colors.border};\n  padding-left: 12px;\n  display: ${props => props.isExpanded ? 'block' : 'none'};\n`;\n_c = RepliesContainer;\nconst MessageReplies = ({\n  parentId,\n  replies,\n  isExpanded,\n  onToggleReplies,\n  onDelete,\n  currentUserId\n}) => {\n  if (!isExpanded || replies.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(RepliesContainer, {\n    isExpanded: isExpanded,\n    children: replies.map(reply => /*#__PURE__*/_jsxDEV(ChatMessage, {\n      content: reply.content,\n      sender: reply.userId // You might want to fetch the actual username\n      ,\n      timestamp: reply.createdAt,\n      userId: reply.userId,\n      currentUserId: currentUserId,\n      onDelete: () => onDelete === null || onDelete === void 0 ? void 0 : onDelete(reply.id),\n      parentId: parentId,\n      replyCount: reply.replyCount,\n      isExpanded: reply.isExpanded,\n      onToggleReplies: () => onToggleReplies(reply.id)\n    }, reply.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c2 = MessageReplies;\nexport default MessageReplies;\nvar _c, _c2;\n$RefreshReg$(_c, \"RepliesContainer\");\n$RefreshReg$(_c2, \"MessageReplies\");","map":{"version":3,"names":["React","styled","ChatMessage","jsxDEV","_jsxDEV","RepliesContainer","div","props","theme","colors","border","isExpanded","_c","MessageReplies","parentId","replies","onToggleReplies","onDelete","currentUserId","length","children","map","reply","content","sender","userId","timestamp","createdAt","id","replyCount","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageReplies/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { StoreMessage } from '../../../types';\r\nimport ChatMessage from '../../common/ChatMessage';\r\n\r\ninterface MessageRepliesProps {\r\n  parentId: string;\r\n  replies: StoreMessage[];\r\n  isExpanded: boolean;\r\n  onToggleReplies: (messageId: string) => void;\r\n  onDelete?: (messageId: string) => void;\r\n  currentUserId?: string;\r\n}\r\n\r\nconst RepliesContainer = styled.div<{ isExpanded: boolean }>`\r\n  margin-left: 24px;\r\n  border-left: 2px solid ${props => props.theme.colors.border};\r\n  padding-left: 12px;\r\n  display: ${props => props.isExpanded ? 'block' : 'none'};\r\n`;\r\n\r\nconst MessageReplies: React.FC<MessageRepliesProps> = ({\r\n  parentId,\r\n  replies,\r\n  isExpanded,\r\n  onToggleReplies,\r\n  onDelete,\r\n  currentUserId\r\n}) => {\r\n  if (!isExpanded || replies.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <RepliesContainer isExpanded={isExpanded}>\r\n      {replies.map((reply) => (\r\n        <ChatMessage\r\n          key={reply.id}\r\n          content={reply.content}\r\n          sender={reply.userId} // You might want to fetch the actual username\r\n          timestamp={reply.createdAt}\r\n          userId={reply.userId}\r\n          currentUserId={currentUserId}\r\n          onDelete={() => onDelete?.(reply.id)}\r\n          parentId={parentId}\r\n          replyCount={reply.replyCount}\r\n          isExpanded={reply.isExpanded}\r\n          onToggleReplies={() => onToggleReplies(reply.id)}\r\n        />\r\n      ))}\r\n    </RepliesContainer>\r\n  );\r\n};\r\n\r\nexport default MessageReplies; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWnD,MAAMC,gBAAgB,GAAGJ,MAAM,CAACK,GAA4B;AAC5D;AACA,2BAA2BC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,MAAM;AAC7D;AACA,aAAaH,KAAK,IAAIA,KAAK,CAACI,UAAU,GAAG,OAAO,GAAG,MAAM;AACzD,CAAC;AAACC,EAAA,GALIP,gBAAgB;AAOtB,MAAMQ,cAA6C,GAAGA,CAAC;EACrDC,QAAQ;EACRC,OAAO;EACPJ,UAAU;EACVK,eAAe;EACfC,QAAQ;EACRC;AACF,CAAC,KAAK;EACJ,IAAI,CAACP,UAAU,IAAII,OAAO,CAACI,MAAM,KAAK,CAAC,EAAE;IACvC,OAAO,IAAI;EACb;EAEA,oBACEf,OAAA,CAACC,gBAAgB;IAACM,UAAU,EAAEA,UAAW;IAAAS,QAAA,EACtCL,OAAO,CAACM,GAAG,CAAEC,KAAK,iBACjBlB,OAAA,CAACF,WAAW;MAEVqB,OAAO,EAAED,KAAK,CAACC,OAAQ;MACvBC,MAAM,EAAEF,KAAK,CAACG,MAAO,CAAC;MAAA;MACtBC,SAAS,EAAEJ,KAAK,CAACK,SAAU;MAC3BF,MAAM,EAAEH,KAAK,CAACG,MAAO;MACrBP,aAAa,EAAEA,aAAc;MAC7BD,QAAQ,EAAEA,CAAA,KAAMA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAGK,KAAK,CAACM,EAAE,CAAE;MACrCd,QAAQ,EAAEA,QAAS;MACnBe,UAAU,EAAEP,KAAK,CAACO,UAAW;MAC7BlB,UAAU,EAAEW,KAAK,CAACX,UAAW;MAC7BK,eAAe,EAAEA,CAAA,KAAMA,eAAe,CAACM,KAAK,CAACM,EAAE;IAAE,GAV5CN,KAAK,CAACM,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWd,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAEvB,CAAC;AAACC,GAAA,GA/BIrB,cAA6C;AAiCnD,eAAeA,cAAc;AAAC,IAAAD,EAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}