{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './auth/authSlice';\nimport chatReducer from './chat/chatSlice';\nimport messagesReducer from './messages/messagesSlice';\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    chat: chatReducer,\n    messages: messagesReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      // Ignore these action types\n      ignoredActions: ['auth/login/fulfilled', 'auth/logout/fulfilled']\n    }\n  })\n});","map":{"version":3,"names":["configureStore","authReducer","chatReducer","messagesReducer","store","reducer","auth","chat","messages","middleware","getDefaultMiddleware","serializableCheck","ignoredActions"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/store/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './auth/authSlice';\nimport chatReducer from './chat/chatSlice';\nimport messagesReducer from './messages/messagesSlice';\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    chat: chatReducer,\n    messages: messagesReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        // Ignore these action types\n        ignoredActions: ['auth/login/fulfilled', 'auth/logout/fulfilled'],\n      },\n    }),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch; "],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,eAAe,MAAM,0BAA0B;AAEtD,OAAO,MAAMC,KAAK,GAAGJ,cAAc,CAAC;EAClCK,OAAO,EAAE;IACPC,IAAI,EAAEL,WAAW;IACjBM,IAAI,EAAEL,WAAW;IACjBM,QAAQ,EAAEL;EACZ,CAAC;EACDM,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjB;MACAC,cAAc,EAAE,CAAC,sBAAsB,EAAE,uBAAuB;IAClE;EACF,CAAC;AACL,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}