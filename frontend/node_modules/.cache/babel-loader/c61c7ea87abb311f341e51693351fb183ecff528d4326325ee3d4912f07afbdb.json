{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\common\\\\ChannelListItem\\\\index.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  font-family: 'Courier New', monospace;\n  margin: 4px 0;\n  padding: 2px 4px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  background-color: ${props => props.isActive ? props.theme.colors.hover : 'transparent'};\n\n  &:hover {\n    background-color: ${props => props.theme.colors.hover};\n  }\n`;\n_c = Container;\nconst Prefix = styled.span`\n  color: ${props => props.theme.colors.secondary};\n  margin-right: 4px;\n`;\n_c2 = Prefix;\nconst ChannelName = styled.span`\n  color: ${props => props.isActive ? props.theme.colors.primary : props.theme.colors.text};\n  flex: 1;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  min-width: 0;\n`;\n_c3 = ChannelName;\nconst UnreadIndicator = styled.span`\n  color: ${props => props.theme.colors.error};\n  margin-left: 8px;\n`;\n_c4 = UnreadIndicator;\nconst StatusIndicator = styled.span`\n  color: ${props => props.theme.colors.textLight};\n  font-size: 12px;\n  margin-left: 8px;\n`;\n_c5 = StatusIndicator;\nconst ChannelListItem = ({\n  name,\n  isActive,\n  hasUnread,\n  isDirect,\n  isPublic = true,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    isActive: isActive,\n    onClick: onClick,\n    children: [/*#__PURE__*/_jsxDEV(Prefix, {\n      children: isDirect ? '@' : '#'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChannelName, {\n      isActive: isActive,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), !isDirect && /*#__PURE__*/_jsxDEV(StatusIndicator, {\n      title: isPublic ? 'Public Channel' : 'Private Channel',\n      children: isPublic ? '(public)' : '(private)'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), hasUnread && /*#__PURE__*/_jsxDEV(UnreadIndicator, {\n      children: \"*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_c6 = ChannelListItem;\nexport default ChannelListItem;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Prefix\");\n$RefreshReg$(_c3, \"ChannelName\");\n$RefreshReg$(_c4, \"UnreadIndicator\");\n$RefreshReg$(_c5, \"StatusIndicator\");\n$RefreshReg$(_c6, \"ChannelListItem\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","Container","div","props","isActive","theme","colors","hover","_c","Prefix","span","secondary","_c2","ChannelName","primary","text","_c3","UnreadIndicator","error","_c4","StatusIndicator","textLight","_c5","ChannelListItem","name","hasUnread","isDirect","isPublic","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","title","_c6","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/common/ChannelListItem/index.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\ninterface ChannelListItemProps {\n  name: string;\n  isActive: boolean;\n  hasUnread: boolean;\n  isDirect: boolean;\n  isPublic?: boolean;\n  onClick: () => void;\n}\n\nconst Container = styled.div<{ isActive: boolean }>`\n  font-family: 'Courier New', monospace;\n  margin: 4px 0;\n  padding: 2px 4px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  background-color: ${props => props.isActive ? props.theme.colors.hover : 'transparent'};\n\n  &:hover {\n    background-color: ${props => props.theme.colors.hover};\n  }\n`;\n\nconst Prefix = styled.span`\n  color: ${props => props.theme.colors.secondary};\n  margin-right: 4px;\n`;\n\nconst ChannelName = styled.span<{ isActive: boolean }>`\n  color: ${props => props.isActive ? props.theme.colors.primary : props.theme.colors.text};\n  flex: 1;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  min-width: 0;\n`;\n\nconst UnreadIndicator = styled.span`\n  color: ${props => props.theme.colors.error};\n  margin-left: 8px;\n`;\n\nconst StatusIndicator = styled.span`\n  color: ${props => props.theme.colors.textLight};\n  font-size: 12px;\n  margin-left: 8px;\n`;\n\nconst ChannelListItem: React.FC<ChannelListItemProps> = ({\n  name,\n  isActive,\n  hasUnread,\n  isDirect,\n  isPublic = true,\n  onClick,\n}) => {\n  return (\n    <Container isActive={isActive} onClick={onClick}>\n      <Prefix>{isDirect ? '@' : '#'}</Prefix>\n      <ChannelName isActive={isActive}>{name}</ChannelName>\n      {!isDirect && (\n        <StatusIndicator title={isPublic ? 'Public Channel' : 'Private Channel'}>\n          {isPublic ? '(public)' : '(private)'}\n        </StatusIndicator>\n      )}\n      {hasUnread && <UnreadIndicator>*</UnreadIndicator>}\n    </Container>\n  );\n};\n\nexport default ChannelListItem; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}