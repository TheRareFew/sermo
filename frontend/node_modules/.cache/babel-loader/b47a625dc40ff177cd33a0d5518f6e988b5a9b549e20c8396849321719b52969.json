{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nexport function transformMessage(message) {\n  // Convert reactions object to array\n  const reactions = Object.entries(message.reactions || {}).map(([emoji, users]) => ({\n    id: uuidv4(),\n    emoji,\n    userId: users[0] || '',\n    // First user is the one who added the reaction\n    users\n  }));\n  return {\n    id: message.id,\n    content: message.content,\n    channelId: message.channel_id,\n    userId: message.sender_id,\n    createdAt: message.created_at,\n    updatedAt: message.updated_at,\n    parentId: message.parent_id,\n    reactions,\n    attachments: message.attachments || [],\n    isEdited: message.is_edited || false,\n    mentions: message.mentions || [],\n    replyCount: 0,\n    repliesLoaded: false,\n    isExpanded: false,\n    replies: []\n  };\n}","map":{"version":3,"names":["v4","uuidv4","transformMessage","message","reactions","Object","entries","map","emoji","users","id","userId","content","channelId","channel_id","sender_id","createdAt","created_at","updatedAt","updated_at","parentId","parent_id","attachments","isEdited","is_edited","mentions","replyCount","repliesLoaded","isExpanded","replies"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/utils/messageTransform.ts"],"sourcesContent":["import { Message } from '../types/websocket';\nimport { StoreMessage, Reaction } from '../types';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport function transformMessage(message: Message): StoreMessage {\n  // Convert reactions object to array\n  const reactions: Reaction[] = Object.entries(message.reactions || {}).map(([emoji, users]) => ({\n    id: uuidv4(),\n    emoji,\n    userId: users[0] || '', // First user is the one who added the reaction\n    users\n  }));\n\n  return {\n    id: message.id,\n    content: message.content,\n    channelId: message.channel_id,\n    userId: message.sender_id,\n    createdAt: message.created_at,\n    updatedAt: message.updated_at,\n    parentId: message.parent_id,\n    reactions,\n    attachments: message.attachments || [],\n    isEdited: message.is_edited || false,\n    mentions: message.mentions || [],\n    replyCount: 0,\n    repliesLoaded: false,\n    isExpanded: false,\n    replies: []\n  };\n} "],"mappings":"AAEA,SAASA,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAEnC,OAAO,SAASC,gBAAgBA,CAACC,OAAgB,EAAgB;EAC/D;EACA,MAAMC,SAAqB,GAAGC,MAAM,CAACC,OAAO,CAACH,OAAO,CAACC,SAAS,IAAI,CAAC,CAAC,CAAC,CAACG,GAAG,CAAC,CAAC,CAACC,KAAK,EAAEC,KAAK,CAAC,MAAM;IAC7FC,EAAE,EAAET,MAAM,CAAC,CAAC;IACZO,KAAK;IACLG,MAAM,EAAEF,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE;IAAE;IACxBA;EACF,CAAC,CAAC,CAAC;EAEH,OAAO;IACLC,EAAE,EAAEP,OAAO,CAACO,EAAE;IACdE,OAAO,EAAET,OAAO,CAACS,OAAO;IACxBC,SAAS,EAAEV,OAAO,CAACW,UAAU;IAC7BH,MAAM,EAAER,OAAO,CAACY,SAAS;IACzBC,SAAS,EAAEb,OAAO,CAACc,UAAU;IAC7BC,SAAS,EAAEf,OAAO,CAACgB,UAAU;IAC7BC,QAAQ,EAAEjB,OAAO,CAACkB,SAAS;IAC3BjB,SAAS;IACTkB,WAAW,EAAEnB,OAAO,CAACmB,WAAW,IAAI,EAAE;IACtCC,QAAQ,EAAEpB,OAAO,CAACqB,SAAS,IAAI,KAAK;IACpCC,QAAQ,EAAEtB,OAAO,CAACsB,QAAQ,IAAI,EAAE;IAChCC,UAAU,EAAE,CAAC;IACbC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,KAAK;IACjBC,OAAO,EAAE;EACX,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}