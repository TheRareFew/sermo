{"ast":null,"code":"export const transformMessage = message => {\n  console.log('Transforming message:', message);\n\n  // Ensure reactions is an array\n  const reactions = Array.isArray(message.reactions) ? message.reactions : [];\n  console.log('Transformed reactions:', reactions);\n\n  // Convert parentId to undefined if null\n  const parentId = message.parentId || message.parent_id;\n  return {\n    id: message.id.toString(),\n    content: message.content,\n    channelId: (message.channelId || message.channel_id || '').toString(),\n    userId: (message.userId || message.sender_id || '').toString(),\n    createdAt: message.createdAt || message.created_at || new Date().toISOString(),\n    updatedAt: message.updatedAt || message.updated_at || message.createdAt || message.created_at || new Date().toISOString(),\n    parentId: parentId ? parentId.toString() : undefined,\n    replyCount: message.replyCount || message.reply_count || 0,\n    isExpanded: message.isExpanded || false,\n    repliesLoaded: message.repliesLoaded || false,\n    replies: message.replies || [],\n    reactions,\n    attachments: message.attachments || []\n  };\n};","map":{"version":3,"names":["transformMessage","message","console","log","reactions","Array","isArray","parentId","parent_id","id","toString","content","channelId","channel_id","userId","sender_id","createdAt","created_at","Date","toISOString","updatedAt","updated_at","undefined","replyCount","reply_count","isExpanded","repliesLoaded","replies","attachments"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/utils/messageTransform.ts"],"sourcesContent":["import { RawMessage, StoreMessage, Reaction } from '../types';\n\nexport const transformMessage = (message: RawMessage): StoreMessage => {\n  console.log('Transforming message:', message);\n  \n  // Ensure reactions is an array\n  const reactions = Array.isArray(message.reactions) ? message.reactions : [];\n  console.log('Transformed reactions:', reactions);\n  \n  // Convert parentId to undefined if null\n  const parentId = message.parentId || message.parent_id;\n  \n  return {\n    id: message.id.toString(),\n    content: message.content,\n    channelId: (message.channelId || message.channel_id || '').toString(),\n    userId: (message.userId || message.sender_id || '').toString(),\n    createdAt: message.createdAt || message.created_at || new Date().toISOString(),\n    updatedAt: message.updatedAt || message.updated_at || message.createdAt || message.created_at || new Date().toISOString(),\n    parentId: parentId ? parentId.toString() : undefined,\n    replyCount: message.replyCount || message.reply_count || 0,\n    isExpanded: message.isExpanded || false,\n    repliesLoaded: message.repliesLoaded || false,\n    replies: message.replies || [],\n    reactions,\n    attachments: message.attachments || []\n  };\n}; "],"mappings":"AAEA,OAAO,MAAMA,gBAAgB,GAAIC,OAAmB,IAAmB;EACrEC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,OAAO,CAAC;;EAE7C;EACA,MAAMG,SAAS,GAAGC,KAAK,CAACC,OAAO,CAACL,OAAO,CAACG,SAAS,CAAC,GAAGH,OAAO,CAACG,SAAS,GAAG,EAAE;EAC3EF,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,SAAS,CAAC;;EAEhD;EACA,MAAMG,QAAQ,GAAGN,OAAO,CAACM,QAAQ,IAAIN,OAAO,CAACO,SAAS;EAEtD,OAAO;IACLC,EAAE,EAAER,OAAO,CAACQ,EAAE,CAACC,QAAQ,CAAC,CAAC;IACzBC,OAAO,EAAEV,OAAO,CAACU,OAAO;IACxBC,SAAS,EAAE,CAACX,OAAO,CAACW,SAAS,IAAIX,OAAO,CAACY,UAAU,IAAI,EAAE,EAAEH,QAAQ,CAAC,CAAC;IACrEI,MAAM,EAAE,CAACb,OAAO,CAACa,MAAM,IAAIb,OAAO,CAACc,SAAS,IAAI,EAAE,EAAEL,QAAQ,CAAC,CAAC;IAC9DM,SAAS,EAAEf,OAAO,CAACe,SAAS,IAAIf,OAAO,CAACgB,UAAU,IAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IAC9EC,SAAS,EAAEnB,OAAO,CAACmB,SAAS,IAAInB,OAAO,CAACoB,UAAU,IAAIpB,OAAO,CAACe,SAAS,IAAIf,OAAO,CAACgB,UAAU,IAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACzHZ,QAAQ,EAAEA,QAAQ,GAAGA,QAAQ,CAACG,QAAQ,CAAC,CAAC,GAAGY,SAAS;IACpDC,UAAU,EAAEtB,OAAO,CAACsB,UAAU,IAAItB,OAAO,CAACuB,WAAW,IAAI,CAAC;IAC1DC,UAAU,EAAExB,OAAO,CAACwB,UAAU,IAAI,KAAK;IACvCC,aAAa,EAAEzB,OAAO,CAACyB,aAAa,IAAI,KAAK;IAC7CC,OAAO,EAAE1B,OAAO,CAAC0B,OAAO,IAAI,EAAE;IAC9BvB,SAAS;IACTwB,WAAW,EAAE3B,OAAO,CAAC2B,WAAW,IAAI;EACtC,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}