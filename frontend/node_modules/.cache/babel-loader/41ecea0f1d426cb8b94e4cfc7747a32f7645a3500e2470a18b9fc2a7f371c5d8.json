{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageReplies\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { transformMessage } from '../../../utils/messageTransform';\nimport Message from '../Message';\nimport { updateMessage } from '../../../store/messages/messagesSlice';\nimport { getReplies } from '../../../services/api/chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RepliesContainer = styled.div`\n  margin-left: 24px;\n  border-left: 1px solid ${props => props.theme.colors.border};\n  padding-left: 8px;\n  display: ${props => props.isExpanded ? 'block' : 'none'};\n`;\n_c = RepliesContainer;\nconst ReplyWrapper = styled.div`\n  margin-top: 4px;\n`;\n_c2 = ReplyWrapper;\nconst LoadingIndicator = styled.div`\n  color: ${props => props.theme.colors.textLight};\n  font-family: 'Courier New', monospace;\n  padding: 4px 0;\n`;\n_c3 = LoadingIndicator;\nconst MessageReplies = ({\n  parentId,\n  replies = [],\n  currentUserId,\n  isExpanded,\n  onToggleReplies,\n  onDelete\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = React.useState(false);\n  const {\n    users\n  } = useSelector(state => ({\n    users: state.chat.users\n  }));\n  useEffect(() => {\n    const loadReplies = async () => {\n      if (!isExpanded || replies.length > 0) return;\n      setIsLoading(true);\n      try {\n        const fetchedReplies = await getReplies(parentId);\n        const transformedReplies = fetchedReplies.map(transformMessage);\n\n        // Update the parent message with the new replies\n        if (transformedReplies.length > 0) {\n          var _transformedReplies$;\n          dispatch(updateMessage({\n            channelId: (_transformedReplies$ = transformedReplies[0]) === null || _transformedReplies$ === void 0 ? void 0 : _transformedReplies$.channelId,\n            messageId: parentId,\n            message: {\n              replies: transformedReplies,\n              repliesLoaded: true\n            }\n          }));\n        }\n      } catch (error) {\n        console.error('Failed to load replies:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadReplies();\n  }, [dispatch, isExpanded, parentId, replies]);\n\n  // Sort replies by creation time\n  const sortedReplies = [...replies].sort((a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime());\n  return /*#__PURE__*/_jsxDEV(RepliesContainer, {\n    isExpanded: isExpanded,\n    children: isLoading ? /*#__PURE__*/_jsxDEV(LoadingIndicator, {\n      children: \"Loading replies...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : sortedReplies.map(reply => {\n      var _users$reply$userId;\n      return /*#__PURE__*/_jsxDEV(ReplyWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          id: reply.id,\n          content: reply.content,\n          sender: ((_users$reply$userId = users[reply.userId]) === null || _users$reply$userId === void 0 ? void 0 : _users$reply$userId.username) || reply.userId,\n          timestamp: reply.createdAt,\n          userId: reply.userId,\n          currentUserId: currentUserId,\n          onDelete: () => onDelete(reply.id),\n          replyCount: 0,\n          isExpanded: false,\n          onToggleReplies: () => {},\n          onReply: () => {},\n          isReply: true,\n          reactions: reply.reactions || [],\n          onReactionAdd: () => {},\n          onReactionRemove: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, reply.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageReplies, \"kpH8tNfYVPvnT092baPdtPKMRVI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c4 = MessageReplies;\nexport default MessageReplies;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"RepliesContainer\");\n$RefreshReg$(_c2, \"ReplyWrapper\");\n$RefreshReg$(_c3, \"LoadingIndicator\");\n$RefreshReg$(_c4, \"MessageReplies\");","map":{"version":3,"names":["React","useEffect","styled","useDispatch","useSelector","transformMessage","Message","updateMessage","getReplies","jsxDEV","_jsxDEV","RepliesContainer","div","props","theme","colors","border","isExpanded","_c","ReplyWrapper","_c2","LoadingIndicator","textLight","_c3","MessageReplies","parentId","replies","currentUserId","onToggleReplies","onDelete","_s","dispatch","isLoading","setIsLoading","useState","users","state","chat","loadReplies","length","fetchedReplies","transformedReplies","map","_transformedReplies$","channelId","messageId","message","repliesLoaded","error","console","sortedReplies","sort","a","b","Date","createdAt","getTime","children","fileName","_jsxFileName","lineNumber","columnNumber","reply","_users$reply$userId","id","content","sender","userId","username","timestamp","replyCount","onReply","isReply","reactions","onReactionAdd","onReactionRemove","_c4","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageReplies/index.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState, StoreMessage, User } from '../../../types';\nimport { transformMessage } from '../../../utils/messageTransform';\nimport Message from '../Message';\nimport { updateMessage } from '../../../store/messages/messagesSlice';\nimport { getReplies } from '../../../services/api/chat';\n\ninterface MessageRepliesProps {\n  parentId: string;\n  replies?: StoreMessage[];\n  currentUserId?: string;\n  isExpanded: boolean;\n  onToggleReplies: () => void;\n  onDelete: (messageId: string) => void;\n}\n\nconst RepliesContainer = styled.div<{ isExpanded: boolean }>`\n  margin-left: 24px;\n  border-left: 1px solid ${props => props.theme.colors.border};\n  padding-left: 8px;\n  display: ${props => props.isExpanded ? 'block' : 'none'};\n`;\n\nconst ReplyWrapper = styled.div`\n  margin-top: 4px;\n`;\n\nconst LoadingIndicator = styled.div`\n  color: ${props => props.theme.colors.textLight};\n  font-family: 'Courier New', monospace;\n  padding: 4px 0;\n`;\n\nconst MessageReplies: React.FC<MessageRepliesProps> = ({\n  parentId,\n  replies = [],\n  currentUserId,\n  isExpanded,\n  onToggleReplies,\n  onDelete\n}) => {\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = React.useState(false);\n  const { users } = useSelector((state: RootState) => ({\n    users: state.chat.users as { [key: string]: User }\n  }));\n\n  useEffect(() => {\n    const loadReplies = async () => {\n      if (!isExpanded || replies.length > 0) return;\n      \n      setIsLoading(true);\n      try {\n        const fetchedReplies = await getReplies(parentId);\n        const transformedReplies = fetchedReplies.map(transformMessage);\n        \n        // Update the parent message with the new replies\n        if (transformedReplies.length > 0) {\n          dispatch(updateMessage({\n            channelId: transformedReplies[0]?.channelId,\n            messageId: parentId,\n            message: {\n              replies: transformedReplies,\n              repliesLoaded: true\n            }\n          }));\n        }\n      } catch (error) {\n        console.error('Failed to load replies:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadReplies();\n  }, [dispatch, isExpanded, parentId, replies]);\n\n  // Sort replies by creation time\n  const sortedReplies = [...replies].sort(\n    (a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n  );\n\n  return (\n    <RepliesContainer isExpanded={isExpanded}>\n      {isLoading ? (\n        <LoadingIndicator>Loading replies...</LoadingIndicator>\n      ) : (\n        sortedReplies.map((reply) => (\n          <ReplyWrapper key={reply.id}>\n            <Message\n              id={reply.id}\n              content={reply.content}\n              sender={users[reply.userId]?.username || reply.userId}\n              timestamp={reply.createdAt}\n              userId={reply.userId}\n              currentUserId={currentUserId}\n              onDelete={() => onDelete(reply.id)}\n              replyCount={0}\n              isExpanded={false}\n              onToggleReplies={() => {}}\n              onReply={() => {}}\n              isReply={true}\n              reactions={reply.reactions || []}\n              onReactionAdd={() => {}}\n              onReactionRemove={() => {}}\n            />\n          </ReplyWrapper>\n        ))\n      )}\n    </RepliesContainer>\n  );\n};\n\nexport default MessageReplies; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}