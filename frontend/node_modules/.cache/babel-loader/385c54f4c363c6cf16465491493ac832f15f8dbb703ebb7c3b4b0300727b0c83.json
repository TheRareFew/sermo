{"ast":null,"code":"export const transformMessage = msg => {\n  // Ensure timestamps are valid UTC ISO strings\n  const createdAt = msg.created_at ? new Date(msg.created_at).toISOString() : new Date().toISOString();\n  const updatedAt = msg.updated_at ? new Date(msg.updated_at).toISOString() : createdAt;\n  return {\n    id: msg.id.toString(),\n    content: msg.content,\n    channelId: msg.channel_id.toString(),\n    userId: msg.sender_id.toString(),\n    reactions: [],\n    attachments: [],\n    createdAt,\n    updatedAt,\n    replyCount: 'reply_count' in msg ? msg.reply_count || 0 : 0,\n    isExpanded: false,\n    repliesLoaded: false,\n    replies: [],\n    ...(msg.parent_id ? {\n      parentId: msg.parent_id.toString()\n    } : {})\n  };\n};","map":{"version":3,"names":["transformMessage","msg","createdAt","created_at","Date","toISOString","updatedAt","updated_at","id","toString","content","channelId","channel_id","userId","sender_id","reactions","attachments","replyCount","reply_count","isExpanded","repliesLoaded","replies","parent_id","parentId"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/utils/messageTransform.ts"],"sourcesContent":["import { Message, WebSocketChannelMessage, StoreMessage } from '../types';\r\n\r\nexport const transformMessage = (msg: Message | WebSocketChannelMessage['message']): StoreMessage => {\r\n  // Ensure timestamps are valid UTC ISO strings\r\n  const createdAt = msg.created_at ? new Date(msg.created_at).toISOString() : new Date().toISOString();\r\n  const updatedAt = msg.updated_at ? new Date(msg.updated_at).toISOString() : createdAt;\r\n\r\n  return {\r\n    id: msg.id.toString(),\r\n    content: msg.content,\r\n    channelId: msg.channel_id.toString(),\r\n    userId: msg.sender_id.toString(),\r\n    reactions: [],\r\n    attachments: [],\r\n    createdAt,\r\n    updatedAt,\r\n    replyCount: 'reply_count' in msg ? msg.reply_count || 0 : 0,\r\n    isExpanded: false,\r\n    repliesLoaded: false,\r\n    replies: [],\r\n    ...(msg.parent_id ? { parentId: msg.parent_id.toString() } : {})\r\n  };\r\n}; "],"mappings":"AAEA,OAAO,MAAMA,gBAAgB,GAAIC,GAAiD,IAAmB;EACnG;EACA,MAAMC,SAAS,GAAGD,GAAG,CAACE,UAAU,GAAG,IAAIC,IAAI,CAACH,GAAG,CAACE,UAAU,CAAC,CAACE,WAAW,CAAC,CAAC,GAAG,IAAID,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACpG,MAAMC,SAAS,GAAGL,GAAG,CAACM,UAAU,GAAG,IAAIH,IAAI,CAACH,GAAG,CAACM,UAAU,CAAC,CAACF,WAAW,CAAC,CAAC,GAAGH,SAAS;EAErF,OAAO;IACLM,EAAE,EAAEP,GAAG,CAACO,EAAE,CAACC,QAAQ,CAAC,CAAC;IACrBC,OAAO,EAAET,GAAG,CAACS,OAAO;IACpBC,SAAS,EAAEV,GAAG,CAACW,UAAU,CAACH,QAAQ,CAAC,CAAC;IACpCI,MAAM,EAAEZ,GAAG,CAACa,SAAS,CAACL,QAAQ,CAAC,CAAC;IAChCM,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,EAAE;IACfd,SAAS;IACTI,SAAS;IACTW,UAAU,EAAE,aAAa,IAAIhB,GAAG,GAAGA,GAAG,CAACiB,WAAW,IAAI,CAAC,GAAG,CAAC;IAC3DC,UAAU,EAAE,KAAK;IACjBC,aAAa,EAAE,KAAK;IACpBC,OAAO,EAAE,EAAE;IACX,IAAIpB,GAAG,CAACqB,SAAS,GAAG;MAAEC,QAAQ,EAAEtB,GAAG,CAACqB,SAAS,CAACb,QAAQ,CAAC;IAAE,CAAC,GAAG,CAAC,CAAC;EACjE,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}