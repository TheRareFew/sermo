{"ast":null,"code":"export const transformMessage = msg => {\n  console.log('Transforming message:', msg);\n  if (!msg) {\n    console.error('Invalid message: message is null or undefined');\n    throw new Error('Invalid message: message is null or undefined');\n  }\n  if (!msg.id || !msg.channel_id || !msg.sender_id || !msg.content) {\n    console.error('Invalid message: missing required fields', msg);\n    throw new Error('Invalid message: missing required fields');\n  }\n  try {\n    const id = msg.id.toString();\n    const channelId = msg.channel_id.toString();\n    const userId = msg.sender_id.toString();\n    const createdAt = new Date(msg.created_at).toISOString();\n    const updatedAt = msg.updated_at ? new Date(msg.updated_at).toISOString() : createdAt;\n    const parentId = msg.parent_id ? msg.parent_id.toString() : undefined;\n    const transformedMessage = {\n      id,\n      content: msg.content,\n      channelId,\n      userId,\n      reactions: [],\n      attachments: [],\n      createdAt,\n      updatedAt,\n      replyCount: msg.reply_count || 0,\n      isExpanded: false,\n      repliesLoaded: false,\n      replies: [],\n      ...(parentId ? {\n        parentId\n      } : {})\n    };\n    console.log('Transformed message:', transformedMessage);\n    return transformedMessage;\n  } catch (error) {\n    console.error('Error transforming message:', error);\n    throw new Error(`Error transforming message: ${error instanceof Error ? error.message : 'Unknown error'}`);\n  }\n};","map":{"version":3,"names":["transformMessage","msg","console","log","error","Error","id","channel_id","sender_id","content","toString","channelId","userId","createdAt","Date","created_at","toISOString","updatedAt","updated_at","parentId","parent_id","undefined","transformedMessage","reactions","attachments","replyCount","reply_count","isExpanded","repliesLoaded","replies","message"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/utils/messageTransform.ts"],"sourcesContent":["import { RawMessage, Message, StoreMessage } from '../types';\r\n\r\nexport const transformMessage = (msg: RawMessage | Message): StoreMessage => {\r\n  console.log('Transforming message:', msg);\r\n\r\n  if (!msg) {\r\n    console.error('Invalid message: message is null or undefined');\r\n    throw new Error('Invalid message: message is null or undefined');\r\n  }\r\n\r\n  if (!msg.id || !msg.channel_id || !msg.sender_id || !msg.content) {\r\n    console.error('Invalid message: missing required fields', msg);\r\n    throw new Error('Invalid message: missing required fields');\r\n  }\r\n\r\n  try {\r\n    const id = msg.id.toString();\r\n    const channelId = msg.channel_id.toString();\r\n    const userId = msg.sender_id.toString();\r\n    const createdAt = new Date(msg.created_at).toISOString();\r\n    const updatedAt = msg.updated_at ? new Date(msg.updated_at).toISOString() : createdAt;\r\n    const parentId = msg.parent_id ? msg.parent_id.toString() : undefined;\r\n    \r\n    const transformedMessage: StoreMessage = {\r\n      id,\r\n      content: msg.content,\r\n      channelId,\r\n      userId,\r\n      reactions: [],\r\n      attachments: [],\r\n      createdAt,\r\n      updatedAt,\r\n      replyCount: msg.reply_count || 0,\r\n      isExpanded: false,\r\n      repliesLoaded: false,\r\n      replies: [],\r\n      ...(parentId ? { parentId } : {})\r\n    };\r\n\r\n    console.log('Transformed message:', transformedMessage);\r\n    return transformedMessage;\r\n  } catch (error) {\r\n    console.error('Error transforming message:', error);\r\n    throw new Error(`Error transforming message: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n  }\r\n}; "],"mappings":"AAEA,OAAO,MAAMA,gBAAgB,GAAIC,GAAyB,IAAmB;EAC3EC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,GAAG,CAAC;EAEzC,IAAI,CAACA,GAAG,EAAE;IACRC,OAAO,CAACE,KAAK,CAAC,+CAA+C,CAAC;IAC9D,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;EAClE;EAEA,IAAI,CAACJ,GAAG,CAACK,EAAE,IAAI,CAACL,GAAG,CAACM,UAAU,IAAI,CAACN,GAAG,CAACO,SAAS,IAAI,CAACP,GAAG,CAACQ,OAAO,EAAE;IAChEP,OAAO,CAACE,KAAK,CAAC,0CAA0C,EAAEH,GAAG,CAAC;IAC9D,MAAM,IAAII,KAAK,CAAC,0CAA0C,CAAC;EAC7D;EAEA,IAAI;IACF,MAAMC,EAAE,GAAGL,GAAG,CAACK,EAAE,CAACI,QAAQ,CAAC,CAAC;IAC5B,MAAMC,SAAS,GAAGV,GAAG,CAACM,UAAU,CAACG,QAAQ,CAAC,CAAC;IAC3C,MAAME,MAAM,GAAGX,GAAG,CAACO,SAAS,CAACE,QAAQ,CAAC,CAAC;IACvC,MAAMG,SAAS,GAAG,IAAIC,IAAI,CAACb,GAAG,CAACc,UAAU,CAAC,CAACC,WAAW,CAAC,CAAC;IACxD,MAAMC,SAAS,GAAGhB,GAAG,CAACiB,UAAU,GAAG,IAAIJ,IAAI,CAACb,GAAG,CAACiB,UAAU,CAAC,CAACF,WAAW,CAAC,CAAC,GAAGH,SAAS;IACrF,MAAMM,QAAQ,GAAGlB,GAAG,CAACmB,SAAS,GAAGnB,GAAG,CAACmB,SAAS,CAACV,QAAQ,CAAC,CAAC,GAAGW,SAAS;IAErE,MAAMC,kBAAgC,GAAG;MACvChB,EAAE;MACFG,OAAO,EAAER,GAAG,CAACQ,OAAO;MACpBE,SAAS;MACTC,MAAM;MACNW,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE,EAAE;MACfX,SAAS;MACTI,SAAS;MACTQ,UAAU,EAAExB,GAAG,CAACyB,WAAW,IAAI,CAAC;MAChCC,UAAU,EAAE,KAAK;MACjBC,aAAa,EAAE,KAAK;MACpBC,OAAO,EAAE,EAAE;MACX,IAAIV,QAAQ,GAAG;QAAEA;MAAS,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;IAEDjB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEmB,kBAAkB,CAAC;IACvD,OAAOA,kBAAkB;EAC3B,CAAC,CAAC,OAAOlB,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAM,IAAIC,KAAK,CAAC,+BAA+BD,KAAK,YAAYC,KAAK,GAAGD,KAAK,CAAC0B,OAAO,GAAG,eAAe,EAAE,CAAC;EAC5G;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}