{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ChatMessage from '../../common/ChatMessage';\nimport { getChannelMessages } from '../../../services/api/chat';\nimport { fetchMessagesStart, fetchMessagesSuccess, fetchMessagesFailure } from '../../../store/messages/messagesSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column-reverse; // Makes messages start from bottom\n  padding: 16px;\n  gap: 2px;\n  background: ${props => props.theme.colors.background};\n  border: 2px solid ${props => props.theme.colors.border};\n  font-family: 'Courier New', monospace;\n`;\n_c = MessageListContainer;\nconst LoadingMessage = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.textSecondary};\n  font-family: 'Courier New', monospace;\n  font-style: italic;\n`;\n_c2 = LoadingMessage;\nconst ErrorMessage = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.error};\n  font-family: 'Courier New', monospace;\n  border: 1px solid ${props => props.theme.colors.error};\n  margin: 8px;\n`;\n_c3 = ErrorMessage;\nconst NoMessagesMessage = styled.div`\n  text-align: center;\n  padding: 20px;\n  color: ${props => props.theme.colors.secondary};\n  font-family: 'Courier New', monospace;\n  border: 1px dashed ${props => props.theme.colors.border};\n  margin: 16px;\n`;\n_c4 = NoMessagesMessage;\nconst MESSAGES_PER_PAGE = 30;\n\n// Transform API message to store message format\nconst transformMessage = msg => ({\n  id: String(msg.id),\n  content: msg.content,\n  channelId: String(msg.channel_id),\n  userId: String(msg.sender_id),\n  reactions: [],\n  createdAt: msg.created_at,\n  updatedAt: msg.updated_at\n});\nconst MessageList = ({\n  channelId\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const containerRef = useRef(null);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [hasMoreMessages, setHasMoreMessages] = useState(true);\n  const [error, setError] = useState(null);\n  const messages = useSelector(state => {\n    var _state$messages;\n    return channelId && (_state$messages = state.messages) !== null && _state$messages !== void 0 && _state$messages.messagesByChannel ? state.messages.messagesByChannel[String(channelId)] || [] : [];\n  });\n  const users = useSelector(state => {\n    var _state$chat;\n    return ((_state$chat = state.chat) === null || _state$chat === void 0 ? void 0 : _state$chat.users) || {};\n  });\n  const isLoading = useSelector(state => {\n    var _state$messages2;\n    return (_state$messages2 = state.messages) === null || _state$messages2 === void 0 ? void 0 : _state$messages2.loading;\n  });\n\n  // Initial message load\n  useEffect(() => {\n    if (channelId) {\n      dispatch(fetchMessagesStart());\n      setIsLoadingMore(true);\n      setHasMoreMessages(true);\n      setError(null);\n      getChannelMessages(channelId, MESSAGES_PER_PAGE).then(newMessages => {\n        if (newMessages.length < MESSAGES_PER_PAGE) {\n          setHasMoreMessages(false);\n        }\n        const transformedMessages = newMessages.map(transformMessage);\n        dispatch(fetchMessagesSuccess({\n          channelId: String(channelId),\n          messages: transformedMessages\n        }));\n      }).catch(error => {\n        console.error('Failed to fetch messages:', error);\n        setError('Failed to load messages. Please try again.');\n        dispatch(fetchMessagesFailure(error.message));\n      }).finally(() => {\n        setIsLoadingMore(false);\n      });\n    }\n  }, [channelId, dispatch]);\n\n  // Handle scroll to load more messages\n  const handleScroll = async e => {\n    const div = e.currentTarget;\n    const isNearTop = div.scrollTop <= 100;\n    if (isNearTop && !isLoadingMore && hasMoreMessages && channelId) {\n      setIsLoadingMore(true);\n      setError(null);\n      try {\n        const olderMessages = await getChannelMessages(channelId, MESSAGES_PER_PAGE, messages.length // Use as skip parameter\n        );\n        if (olderMessages.length < MESSAGES_PER_PAGE) {\n          setHasMoreMessages(false);\n        }\n        if (olderMessages.length > 0) {\n          const transformedMessages = olderMessages.map(transformMessage);\n          dispatch(fetchMessagesSuccess({\n            channelId: String(channelId),\n            messages: [...messages, ...transformedMessages].sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())\n          }));\n        }\n      } catch (error) {\n        console.error('Failed to fetch older messages:', error);\n        setError('Failed to load more messages. Please try again.');\n      } finally {\n        setIsLoadingMore(false);\n      }\n    }\n  };\n\n  // Auto-scroll to bottom on new messages\n  useEffect(() => {\n    if (containerRef.current && messages.length > 0) {\n      const isAtBottom = containerRef.current.scrollHeight - containerRef.current.scrollTop === containerRef.current.clientHeight;\n      if (isAtBottom) {\n        containerRef.current.scrollTop = containerRef.current.scrollHeight;\n      }\n    }\n  }, [messages]);\n  if (!channelId) {\n    return /*#__PURE__*/_jsxDEV(MessageListContainer, {\n      children: /*#__PURE__*/_jsxDEV(NoMessagesMessage, {\n        children: \"Select a channel to view messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(MessageListContainer, {\n    ref: containerRef,\n    onScroll: handleScroll,\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), isLoadingMore && /*#__PURE__*/_jsxDEV(LoadingMessage, {\n      children: \"Loading older messages...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this), messages.map(msg => {\n      var _users$Number;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `message-${msg.id}`,\n        children: /*#__PURE__*/_jsxDEV(ChatMessage, {\n          content: msg.content,\n          sender: ((_users$Number = users[Number(msg.userId)]) === null || _users$Number === void 0 ? void 0 : _users$Number.username) || 'Unknown',\n          timestamp: msg.createdAt,\n          isSystem: false,\n          reactions: msg.reactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this);\n    }), !isLoading && messages.length === 0 && /*#__PURE__*/_jsxDEV(NoMessagesMessage, {\n      children: \"No messages yet. Start the conversation!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this), !hasMoreMessages && messages.length > 0 && /*#__PURE__*/_jsxDEV(LoadingMessage, {\n      children: \"You've reached the beginning of this conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageList, \"HbIT3yStHMgz03W+kDTkVGeiTIo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c5 = MessageList;\nexport default MessageList;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"MessageListContainer\");\n$RefreshReg$(_c2, \"LoadingMessage\");\n$RefreshReg$(_c3, \"ErrorMessage\");\n$RefreshReg$(_c4, \"NoMessagesMessage\");\n$RefreshReg$(_c5, \"MessageList\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","useDispatch","useSelector","ChatMessage","getChannelMessages","fetchMessagesStart","fetchMessagesSuccess","fetchMessagesFailure","jsxDEV","_jsxDEV","MessageListContainer","div","props","theme","colors","background","border","_c","LoadingMessage","textSecondary","_c2","ErrorMessage","error","_c3","NoMessagesMessage","secondary","_c4","MESSAGES_PER_PAGE","transformMessage","msg","id","String","content","channelId","channel_id","userId","sender_id","reactions","createdAt","created_at","updatedAt","updated_at","MessageList","_s","dispatch","containerRef","isLoadingMore","setIsLoadingMore","hasMoreMessages","setHasMoreMessages","setError","messages","state","_state$messages","messagesByChannel","users","_state$chat","chat","isLoading","_state$messages2","loading","then","newMessages","length","transformedMessages","map","catch","console","message","finally","handleScroll","e","currentTarget","isNearTop","scrollTop","olderMessages","sort","a","b","Date","getTime","current","isAtBottom","scrollHeight","clientHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onScroll","_users$Number","sender","Number","username","timestamp","isSystem","_c5","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageList/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ChatMessage from '../../common/ChatMessage';\nimport { getChannelMessages } from '../../../services/api/chat';\nimport { fetchMessagesStart, fetchMessagesSuccess, fetchMessagesFailure } from '../../../store/messages/messagesSlice';\nimport { Message as ApiMessage } from '../../../types';\nimport { Message as StoreMessage } from '../../../store/types';\nimport { RootState } from '../../../store/rootReducer';\n\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column-reverse; // Makes messages start from bottom\n  padding: 16px;\n  gap: 2px;\n  background: ${props => props.theme.colors.background};\n  border: 2px solid ${props => props.theme.colors.border};\n  font-family: 'Courier New', monospace;\n`;\n\nconst LoadingMessage = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.textSecondary};\n  font-family: 'Courier New', monospace;\n  font-style: italic;\n`;\n\nconst ErrorMessage = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.error};\n  font-family: 'Courier New', monospace;\n  border: 1px solid ${props => props.theme.colors.error};\n  margin: 8px;\n`;\n\nconst NoMessagesMessage = styled.div`\n  text-align: center;\n  padding: 20px;\n  color: ${props => props.theme.colors.secondary};\n  font-family: 'Courier New', monospace;\n  border: 1px dashed ${props => props.theme.colors.border};\n  margin: 16px;\n`;\n\ninterface MessageListProps {\n  channelId: number | null;\n}\n\nconst MESSAGES_PER_PAGE = 30;\n\n// Transform API message to store message format\nconst transformMessage = (msg: ApiMessage): StoreMessage => ({\n  id: String(msg.id),\n  content: msg.content,\n  channelId: String(msg.channel_id),\n  userId: String(msg.sender_id),\n  reactions: [],\n  createdAt: msg.created_at,\n  updatedAt: msg.updated_at,\n});\n\nconst MessageList: React.FC<MessageListProps> = ({ channelId }) => {\n  const dispatch = useDispatch();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [hasMoreMessages, setHasMoreMessages] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const messages = useSelector((state: RootState) => \n    channelId && state.messages?.messagesByChannel ? \n    state.messages.messagesByChannel[String(channelId)] || [] : []\n  );\n  const users = useSelector((state: RootState) => state.chat?.users || {});\n  const isLoading = useSelector((state: RootState) => state.messages?.loading);\n\n  // Initial message load\n  useEffect(() => {\n    if (channelId) {\n      dispatch(fetchMessagesStart());\n      setIsLoadingMore(true);\n      setHasMoreMessages(true);\n      setError(null);\n      \n      getChannelMessages(channelId, MESSAGES_PER_PAGE)\n        .then(newMessages => {\n          if (newMessages.length < MESSAGES_PER_PAGE) {\n            setHasMoreMessages(false);\n          }\n          const transformedMessages = newMessages.map(transformMessage);\n          dispatch(fetchMessagesSuccess({ \n            channelId: String(channelId), \n            messages: transformedMessages \n          }));\n        })\n        .catch(error => {\n          console.error('Failed to fetch messages:', error);\n          setError('Failed to load messages. Please try again.');\n          dispatch(fetchMessagesFailure(error.message));\n        })\n        .finally(() => {\n          setIsLoadingMore(false);\n        });\n    }\n  }, [channelId, dispatch]);\n\n  // Handle scroll to load more messages\n  const handleScroll = async (e: React.UIEvent<HTMLDivElement>) => {\n    const div = e.currentTarget;\n    const isNearTop = div.scrollTop <= 100;\n    \n    if (isNearTop && !isLoadingMore && hasMoreMessages && channelId) {\n      setIsLoadingMore(true);\n      setError(null);\n      \n      try {\n        const olderMessages = await getChannelMessages(\n          channelId, \n          MESSAGES_PER_PAGE, \n          messages.length // Use as skip parameter\n        );\n        \n        if (olderMessages.length < MESSAGES_PER_PAGE) {\n          setHasMoreMessages(false);\n        }\n\n        if (olderMessages.length > 0) {\n          const transformedMessages = olderMessages.map(transformMessage);\n          dispatch(fetchMessagesSuccess({ \n            channelId: String(channelId), \n            messages: [...messages, ...transformedMessages].sort((a, b) => \n              new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n            )\n          }));\n        }\n      } catch (error) {\n        console.error('Failed to fetch older messages:', error);\n        setError('Failed to load more messages. Please try again.');\n      } finally {\n        setIsLoadingMore(false);\n      }\n    }\n  };\n\n  // Auto-scroll to bottom on new messages\n  useEffect(() => {\n    if (containerRef.current && messages.length > 0) {\n      const isAtBottom = \n        containerRef.current.scrollHeight - containerRef.current.scrollTop === containerRef.current.clientHeight;\n      \n      if (isAtBottom) {\n        containerRef.current.scrollTop = containerRef.current.scrollHeight;\n      }\n    }\n  }, [messages]);\n\n  if (!channelId) {\n    return (\n      <MessageListContainer>\n        <NoMessagesMessage>\n          Select a channel to view messages\n        </NoMessagesMessage>\n      </MessageListContainer>\n    );\n  }\n\n  return (\n    <MessageListContainer\n      ref={containerRef}\n      onScroll={handleScroll}\n    >\n      {error && (\n        <ErrorMessage>\n          {error}\n        </ErrorMessage>\n      )}\n      \n      {isLoadingMore && (\n        <LoadingMessage>Loading older messages...</LoadingMessage>\n      )}\n      \n      {messages.map((msg: StoreMessage) => (\n        <div key={msg.id} id={`message-${msg.id}`}>\n          <ChatMessage\n            content={msg.content}\n            sender={users[Number(msg.userId)]?.username || 'Unknown'}\n            timestamp={msg.createdAt}\n            isSystem={false}\n            reactions={msg.reactions}\n          />\n        </div>\n      ))}\n      \n      {!isLoading && messages.length === 0 && (\n        <NoMessagesMessage>\n          No messages yet. Start the conversation!\n        </NoMessagesMessage>\n      )}\n      \n      {!hasMoreMessages && messages.length > 0 && (\n        <LoadingMessage>\n          You've reached the beginning of this conversation\n        </LoadingMessage>\n      )}\n    </MessageListContainer>\n  );\n};\n\nexport default MessageList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}