{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ChatMessage from '../../common/ChatMessage';\nimport DeleteMessageModal from '../DeleteMessageModal';\nimport { getChannelMessages, deleteMessage as deleteMessageApi } from '../../../services/api/chat';\nimport { setMessages, deleteMessage } from '../../../store/messages/messagesSlice';\nimport wsService from '../../../services/websocket';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  gap: 2px;\n  background: ${props => props.theme.colors.background};\n  border: 2px solid ${props => props.theme.colors.border};\n  font-family: 'Courier New', monospace;\n`;\n_c = MessageListContainer;\nconst MessagesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: auto;\n  min-height: min-content;\n`;\n_c2 = MessagesWrapper;\nconst LoadingMessage = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.textSecondary};\n  font-family: 'Courier New', monospace;\n  font-style: italic;\n`;\n_c3 = LoadingMessage;\nconst ErrorMessage = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.error};\n  font-family: 'Courier New', monospace;\n  border: 1px solid ${props => props.theme.colors.error};\n  margin: 8px;\n`;\n_c4 = ErrorMessage;\nconst NoMessagesMessage = styled.div`\n  text-align: center;\n  padding: 20px;\n  color: ${props => props.theme.colors.secondary};\n  font-family: 'Courier New', monospace;\n  border: 1px dashed ${props => props.theme.colors.border};\n  margin: 16px;\n`;\n_c5 = NoMessagesMessage;\nconst MESSAGES_PER_PAGE = 30;\n\n// Transform API message to store message format\nconst transformMessage = msg => {\n  console.log('Transforming message:', msg);\n  if (!msg || !msg.id || !msg.content || !msg.channel_id || !msg.sender_id) {\n    console.error('Invalid message format:', msg);\n    throw new Error('Invalid message format');\n  }\n  const transformed = {\n    id: String(msg.id),\n    content: msg.content,\n    channelId: String(msg.channel_id),\n    userId: String(msg.sender_id),\n    reactions: [],\n    attachments: [],\n    createdAt: msg.created_at,\n    updatedAt: msg.created_at\n  };\n  console.log('Transformed message:', transformed);\n  return transformed;\n};\nconst MessageList = ({\n  channelId\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const containerRef = useRef(null);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [hasMoreMessages, setHasMoreMessages] = useState(true);\n  const [error, setError] = useState(null);\n  const [shouldScrollToBottom, setShouldScrollToBottom] = useState(true);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [deletingMessageIds, setDeletingMessageIds] = useState(new Set());\n  const [messageToDelete, setMessageToDelete] = useState(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n\n  // Connect to WebSocket when channel changes\n  useEffect(() => {\n    let isMounted = true;\n    let errorHandler = null;\n    const connectToChannel = async () => {\n      if (!channelId) return;\n      setIsConnecting(true);\n      setError(null);\n      try {\n        await wsService.connect(channelId);\n        if (isMounted) {\n          setError(null);\n        }\n      } catch (error) {\n        console.error('Failed to connect to channel:', error);\n        if (isMounted) {\n          if (error instanceof Error) {\n            setError(error.message);\n          } else {\n            setError('Failed to connect to channel. Messages may not update in real-time.');\n          }\n        }\n      } finally {\n        if (isMounted) {\n          setIsConnecting(false);\n        }\n      }\n    };\n\n    // Set up WebSocket error handler\n    errorHandler = error => {\n      if (!isMounted) return;\n      console.error('WebSocket error:', error);\n      if (error.code === 'MAX_RECONNECT_ATTEMPTS') {\n        setError('Lost connection to chat. Please refresh the page.');\n      } else if (error.code === 'AUTH_FAILED') {\n        setError('Authentication failed. Please try logging in again.');\n      } else if (error.code === 'CHANNEL_ACCESS_DENIED') {\n        setError('You do not have access to this channel.');\n      } else {\n        setError(error.message || 'Connection error. Messages may not update in real-time.');\n      }\n    };\n    wsService.onError(errorHandler);\n    connectToChannel();\n\n    // Cleanup\n    return () => {\n      isMounted = false;\n      if (channelId) {\n        wsService.leaveChannel(channelId);\n      }\n    };\n  }, [channelId]);\n  const messages = useSelector(state => {\n    var _state$messages;\n    if (!channelId || !((_state$messages = state.messages) !== null && _state$messages !== void 0 && _state$messages.messagesByChannel)) {\n      var _state$messages2;\n      console.log('No messages to display - channelId or messagesByChannel is missing:', {\n        channelId,\n        hasMessagesByChannel: !!((_state$messages2 = state.messages) !== null && _state$messages2 !== void 0 && _state$messages2.messagesByChannel)\n      });\n      return [];\n    }\n    const channelMessages = state.messages.messagesByChannel[String(channelId)] || [];\n    // Sort messages by timestamp, oldest first\n    const sortedMessages = [...channelMessages].sort((a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime());\n    console.log('Selected messages for channel', channelId, ':', {\n      channelId,\n      messageCount: sortedMessages.length,\n      messages: sortedMessages,\n      messagesByChannel: state.messages.messagesByChannel,\n      stateMessages: state.messages\n    });\n    return sortedMessages;\n  });\n  const users = useSelector(state => {\n    var _state$chat;\n    const allUsers = ((_state$chat = state.chat) === null || _state$chat === void 0 ? void 0 : _state$chat.users) || {};\n    console.log('Selected users:', {\n      userCount: Object.keys(allUsers).length,\n      users: allUsers\n    });\n    return allUsers;\n  });\n  const currentUser = useSelector(state => {\n    var _state$auth;\n    return (_state$auth = state.auth) === null || _state$auth === void 0 ? void 0 : _state$auth.user;\n  });\n  const isLoading = useSelector(state => {\n    var _state$messages3;\n    const loading = ((_state$messages3 = state.messages) === null || _state$messages3 === void 0 ? void 0 : _state$messages3.loading) || false;\n    console.log('Loading state:', loading);\n    return loading;\n  });\n  const handleDeleteMessage = async messageId => {\n    setMessageToDelete(messageId);\n    setIsDeleteModalOpen(true);\n  };\n  const confirmDelete = async () => {\n    if (!channelId || !messageToDelete) return;\n    try {\n      setDeletingMessageIds(prev => new Set(prev).add(messageToDelete));\n      await deleteMessageApi(messageToDelete);\n      dispatch(deleteMessage({\n        channelId,\n        messageId: messageToDelete\n      }));\n      toast.success('Message deleted successfully');\n    } catch (error) {\n      console.error('Failed to delete message:', error);\n      if (error instanceof Error) {\n        if (error.message.includes('403')) {\n          toast.error('You are not authorized to delete this message');\n        } else if (error.message.includes('404')) {\n          toast.error('Message not found');\n          // Remove from local state anyway since it doesn't exist\n          dispatch(deleteMessage({\n            channelId,\n            messageId: messageToDelete\n          }));\n        } else {\n          toast.error('Failed to delete message. Please try again.');\n        }\n      } else {\n        toast.error('An unexpected error occurred');\n      }\n    } finally {\n      setDeletingMessageIds(prev => {\n        const next = new Set(prev);\n        next.delete(messageToDelete);\n        return next;\n      });\n      setMessageToDelete(null);\n      setIsDeleteModalOpen(false);\n    }\n  };\n\n  // Initial message load\n  useEffect(() => {\n    if (channelId) {\n      console.log('Loading messages for channel:', channelId);\n      setIsLoadingMore(true);\n      setHasMoreMessages(true);\n      setError(null);\n      setShouldScrollToBottom(true);\n      getChannelMessages(channelId, MESSAGES_PER_PAGE).then(newMessages => {\n        console.log('Received messages from API:', newMessages);\n        if (newMessages.length < MESSAGES_PER_PAGE) {\n          setHasMoreMessages(false);\n        }\n        const transformedMessages = newMessages.map(transformMessage);\n        console.log('Transformed messages:', transformedMessages);\n        dispatch(setMessages({\n          channelId: String(channelId),\n          messages: transformedMessages\n        }));\n      }).catch(error => {\n        console.error('Failed to fetch messages:', error);\n        setError('Failed to load messages. Please try again.');\n      }).finally(() => {\n        setIsLoadingMore(false);\n      });\n    }\n  }, [channelId, dispatch]);\n\n  // Handle scroll to load more messages\n  const handleScroll = async e => {\n    const div = e.currentTarget;\n    const isNearTop = div.scrollTop <= 100;\n    const previousScrollHeight = div.scrollHeight;\n    if (isNearTop && !isLoadingMore && hasMoreMessages && channelId) {\n      setIsLoadingMore(true);\n      setError(null);\n      setShouldScrollToBottom(false);\n      try {\n        const olderMessages = await getChannelMessages(channelId, MESSAGES_PER_PAGE, messages.length);\n        if (olderMessages.length < MESSAGES_PER_PAGE) {\n          setHasMoreMessages(false);\n        }\n        if (olderMessages.length > 0) {\n          const transformedMessages = olderMessages.map(transformMessage);\n          const allMessages = [...transformedMessages, ...messages];\n          dispatch(setMessages({\n            channelId: String(channelId),\n            messages: allMessages\n          }));\n\n          // Maintain scroll position after loading older messages\n          requestAnimationFrame(() => {\n            if (containerRef.current) {\n              const newScrollHeight = containerRef.current.scrollHeight;\n              containerRef.current.scrollTop = newScrollHeight - previousScrollHeight;\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Failed to fetch older messages:', error);\n        setError('Failed to load more messages. Please try again.');\n      } finally {\n        setIsLoadingMore(false);\n      }\n    }\n  };\n\n  // Auto-scroll to bottom on new messages\n  useEffect(() => {\n    if (containerRef.current && messages.length > 0 && shouldScrollToBottom) {\n      const container = containerRef.current;\n      // Use requestAnimationFrame to ensure the scroll happens after the render\n      requestAnimationFrame(() => {\n        container.scrollTop = container.scrollHeight;\n      });\n    }\n  }, [messages, shouldScrollToBottom]);\n\n  // Reset scroll behavior when channel changes\n  useEffect(() => {\n    setShouldScrollToBottom(true);\n  }, [channelId]);\n  if (!channelId) {\n    return /*#__PURE__*/_jsxDEV(MessageListContainer, {\n      children: /*#__PURE__*/_jsxDEV(NoMessagesMessage, {\n        children: \"Select a channel to view messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MessageListContainer, {\n      ref: containerRef,\n      onScroll: handleScroll,\n      children: /*#__PURE__*/_jsxDEV(MessagesWrapper, {\n        children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), isConnecting && /*#__PURE__*/_jsxDEV(LoadingMessage, {\n          children: \"Connecting to chat...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), !hasMoreMessages && messages.length > 0 && /*#__PURE__*/_jsxDEV(LoadingMessage, {\n          children: \"You've reached the beginning of this conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), isLoadingMore && /*#__PURE__*/_jsxDEV(LoadingMessage, {\n          children: \"Loading older messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this), messages.length === 0 && !isLoading && !error && !isConnecting && /*#__PURE__*/_jsxDEV(NoMessagesMessage, {\n          children: \"No messages yet. Start the conversation!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this), messages.map(msg => {\n          var _currentUser$id;\n          const userId = Number(msg.userId);\n          const user = users[userId];\n          const sender = (user === null || user === void 0 ? void 0 : user.username) || `User ${msg.userId}`;\n          const isDeleting = deletingMessageIds.has(msg.id);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: `message-${msg.id}`,\n            style: {\n              margin: '4px 0',\n              opacity: isDeleting ? 0.5 : 1,\n              pointerEvents: isDeleting ? 'none' : 'auto'\n            },\n            children: /*#__PURE__*/_jsxDEV(ChatMessage, {\n              content: msg.content,\n              sender: sender,\n              timestamp: msg.createdAt,\n              isSystem: false,\n              userId: msg.userId,\n              currentUserId: currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$id = currentUser.id) === null || _currentUser$id === void 0 ? void 0 : _currentUser$id.toString(),\n              onDelete: () => handleDeleteMessage(msg.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this)\n          }, msg.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteMessageModal, {\n      isOpen: isDeleteModalOpen,\n      onClose: () => {\n        setIsDeleteModalOpen(false);\n        setMessageToDelete(null);\n      },\n      onConfirm: confirmDelete,\n      isDeleting: messageToDelete ? deletingMessageIds.has(messageToDelete) : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(MessageList, \"+lPeNBdRG+qDqdWI8fbG+nGDJmY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c6 = MessageList;\nexport default MessageList;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"MessageListContainer\");\n$RefreshReg$(_c2, \"MessagesWrapper\");\n$RefreshReg$(_c3, \"LoadingMessage\");\n$RefreshReg$(_c4, \"ErrorMessage\");\n$RefreshReg$(_c5, \"NoMessagesMessage\");\n$RefreshReg$(_c6, \"MessageList\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","useDispatch","useSelector","ChatMessage","DeleteMessageModal","getChannelMessages","deleteMessage","deleteMessageApi","setMessages","wsService","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageListContainer","div","props","theme","colors","background","border","_c","MessagesWrapper","_c2","LoadingMessage","textSecondary","_c3","ErrorMessage","error","_c4","NoMessagesMessage","secondary","_c5","MESSAGES_PER_PAGE","transformMessage","msg","console","log","id","content","channel_id","sender_id","Error","transformed","String","channelId","userId","reactions","attachments","createdAt","created_at","updatedAt","MessageList","_s","dispatch","containerRef","isLoadingMore","setIsLoadingMore","hasMoreMessages","setHasMoreMessages","setError","shouldScrollToBottom","setShouldScrollToBottom","isConnecting","setIsConnecting","deletingMessageIds","setDeletingMessageIds","Set","messageToDelete","setMessageToDelete","isDeleteModalOpen","setIsDeleteModalOpen","isMounted","errorHandler","connectToChannel","connect","message","code","onError","leaveChannel","messages","state","_state$messages","messagesByChannel","_state$messages2","hasMessagesByChannel","channelMessages","sortedMessages","sort","a","b","Date","getTime","messageCount","length","stateMessages","users","_state$chat","allUsers","chat","userCount","Object","keys","currentUser","_state$auth","auth","user","isLoading","_state$messages3","loading","handleDeleteMessage","messageId","confirmDelete","prev","add","success","includes","next","delete","then","newMessages","transformedMessages","map","catch","finally","handleScroll","e","currentTarget","isNearTop","scrollTop","previousScrollHeight","scrollHeight","olderMessages","allMessages","requestAnimationFrame","current","newScrollHeight","container","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onScroll","_currentUser$id","Number","sender","username","isDeleting","has","style","margin","opacity","pointerEvents","timestamp","isSystem","currentUserId","toString","onDelete","isOpen","onClose","onConfirm","_c6","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageList/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ChatMessage from '../../common/ChatMessage';\nimport DeleteMessageModal from '../DeleteMessageModal';\nimport { getChannelMessages, deleteMessage as deleteMessageApi } from '../../../services/api/chat';\nimport { setMessages, deleteMessage } from '../../../store/messages/messagesSlice';\nimport { Message as ApiMessage, StoreMessage, RootState, User } from '../../../types';\nimport wsService from '../../../services/websocket';\nimport { toast } from 'react-toastify';\n\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  gap: 2px;\n  background: ${props => props.theme.colors.background};\n  border: 2px solid ${props => props.theme.colors.border};\n  font-family: 'Courier New', monospace;\n`;\n\nconst MessagesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: auto;\n  min-height: min-content;\n`;\n\nconst LoadingMessage = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.textSecondary};\n  font-family: 'Courier New', monospace;\n  font-style: italic;\n`;\n\nconst ErrorMessage = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.error};\n  font-family: 'Courier New', monospace;\n  border: 1px solid ${props => props.theme.colors.error};\n  margin: 8px;\n`;\n\nconst NoMessagesMessage = styled.div`\n  text-align: center;\n  padding: 20px;\n  color: ${props => props.theme.colors.secondary};\n  font-family: 'Courier New', monospace;\n  border: 1px dashed ${props => props.theme.colors.border};\n  margin: 16px;\n`;\n\ninterface MessageListProps {\n  channelId: string | null;\n}\n\nconst MESSAGES_PER_PAGE = 30;\n\n// Transform API message to store message format\nconst transformMessage = (msg: ApiMessage): StoreMessage => {\n  console.log('Transforming message:', msg);\n  if (!msg || !msg.id || !msg.content || !msg.channel_id || !msg.sender_id) {\n    console.error('Invalid message format:', msg);\n    throw new Error('Invalid message format');\n  }\n\n  const transformed: StoreMessage = {\n    id: String(msg.id),\n    content: msg.content,\n    channelId: String(msg.channel_id),\n    userId: String(msg.sender_id),\n    reactions: [],\n    attachments: [],\n    createdAt: msg.created_at,\n    updatedAt: msg.created_at\n  };\n\n  console.log('Transformed message:', transformed);\n  return transformed;\n};\n\nconst MessageList: React.FC<MessageListProps> = ({ channelId }) => {\n  const dispatch = useDispatch();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [hasMoreMessages, setHasMoreMessages] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [shouldScrollToBottom, setShouldScrollToBottom] = useState(true);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [deletingMessageIds, setDeletingMessageIds] = useState<Set<string>>(new Set());\n  const [messageToDelete, setMessageToDelete] = useState<string | null>(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n\n  // Connect to WebSocket when channel changes\n  useEffect(() => {\n    let isMounted = true;\n    let errorHandler: ((error: { code: string; message: string }) => void) | null = null;\n\n    const connectToChannel = async () => {\n      if (!channelId) return;\n\n      setIsConnecting(true);\n      setError(null);\n\n      try {\n        await wsService.connect(channelId);\n        if (isMounted) {\n          setError(null);\n        }\n      } catch (error) {\n        console.error('Failed to connect to channel:', error);\n        if (isMounted) {\n          if (error instanceof Error) {\n            setError(error.message);\n          } else {\n            setError('Failed to connect to channel. Messages may not update in real-time.');\n          }\n        }\n      } finally {\n        if (isMounted) {\n          setIsConnecting(false);\n        }\n      }\n    };\n\n    // Set up WebSocket error handler\n    errorHandler = (error: { code: string; message: string }) => {\n      if (!isMounted) return;\n      \n      console.error('WebSocket error:', error);\n      if (error.code === 'MAX_RECONNECT_ATTEMPTS') {\n        setError('Lost connection to chat. Please refresh the page.');\n      } else if (error.code === 'AUTH_FAILED') {\n        setError('Authentication failed. Please try logging in again.');\n      } else if (error.code === 'CHANNEL_ACCESS_DENIED') {\n        setError('You do not have access to this channel.');\n      } else {\n        setError(error.message || 'Connection error. Messages may not update in real-time.');\n      }\n    };\n\n    wsService.onError(errorHandler);\n    connectToChannel();\n\n    // Cleanup\n    return () => {\n      isMounted = false;\n      if (channelId) {\n        wsService.leaveChannel(channelId);\n      }\n    };\n  }, [channelId]);\n\n  const messages = useSelector((state: RootState) => {\n    if (!channelId || !state.messages?.messagesByChannel) {\n      console.log('No messages to display - channelId or messagesByChannel is missing:', {\n        channelId,\n        hasMessagesByChannel: !!state.messages?.messagesByChannel\n      });\n      return [];\n    }\n    const channelMessages = state.messages.messagesByChannel[String(channelId)] || [];\n    // Sort messages by timestamp, oldest first\n    const sortedMessages = [...channelMessages].sort((a, b) => \n      new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n    );\n    console.log('Selected messages for channel', channelId, ':', {\n      channelId,\n      messageCount: sortedMessages.length,\n      messages: sortedMessages,\n      messagesByChannel: state.messages.messagesByChannel,\n      stateMessages: state.messages\n    });\n    return sortedMessages;\n  });\n\n  const users = useSelector((state: RootState) => {\n    const allUsers = state.chat?.users || {} as { [key: number]: User };\n    console.log('Selected users:', {\n      userCount: Object.keys(allUsers).length,\n      users: allUsers\n    });\n    return allUsers;\n  });\n\n  const currentUser = useSelector((state: RootState) => state.auth?.user);\n\n  const isLoading = useSelector((state: RootState) => {\n    const loading = state.messages?.loading || false;\n    console.log('Loading state:', loading);\n    return loading;\n  });\n\n  const handleDeleteMessage = async (messageId: string) => {\n    setMessageToDelete(messageId);\n    setIsDeleteModalOpen(true);\n  };\n\n  const confirmDelete = async () => {\n    if (!channelId || !messageToDelete) return;\n\n    try {\n      setDeletingMessageIds(prev => new Set(prev).add(messageToDelete));\n      await deleteMessageApi(messageToDelete);\n      dispatch(deleteMessage({ channelId, messageId: messageToDelete }));\n      toast.success('Message deleted successfully');\n    } catch (error) {\n      console.error('Failed to delete message:', error);\n      if (error instanceof Error) {\n        if (error.message.includes('403')) {\n          toast.error('You are not authorized to delete this message');\n        } else if (error.message.includes('404')) {\n          toast.error('Message not found');\n          // Remove from local state anyway since it doesn't exist\n          dispatch(deleteMessage({ channelId, messageId: messageToDelete }));\n        } else {\n          toast.error('Failed to delete message. Please try again.');\n        }\n      } else {\n        toast.error('An unexpected error occurred');\n      }\n    } finally {\n      setDeletingMessageIds(prev => {\n        const next = new Set(prev);\n        next.delete(messageToDelete);\n        return next;\n      });\n      setMessageToDelete(null);\n      setIsDeleteModalOpen(false);\n    }\n  };\n\n  // Initial message load\n  useEffect(() => {\n    if (channelId) {\n      console.log('Loading messages for channel:', channelId);\n      setIsLoadingMore(true);\n      setHasMoreMessages(true);\n      setError(null);\n      setShouldScrollToBottom(true);\n      \n      getChannelMessages(channelId, MESSAGES_PER_PAGE)\n        .then(newMessages => {\n          console.log('Received messages from API:', newMessages);\n          if (newMessages.length < MESSAGES_PER_PAGE) {\n            setHasMoreMessages(false);\n          }\n          const transformedMessages: StoreMessage[] = newMessages.map(transformMessage);\n          console.log('Transformed messages:', transformedMessages);\n          dispatch(setMessages({ \n            channelId: String(channelId), \n            messages: transformedMessages \n          }));\n        })\n        .catch(error => {\n          console.error('Failed to fetch messages:', error);\n          setError('Failed to load messages. Please try again.');\n        })\n        .finally(() => {\n          setIsLoadingMore(false);\n        });\n    }\n  }, [channelId, dispatch]);\n\n  // Handle scroll to load more messages\n  const handleScroll = async (e: React.UIEvent<HTMLDivElement>) => {\n    const div = e.currentTarget;\n    const isNearTop = div.scrollTop <= 100;\n    const previousScrollHeight = div.scrollHeight;\n    \n    if (isNearTop && !isLoadingMore && hasMoreMessages && channelId) {\n      setIsLoadingMore(true);\n      setError(null);\n      setShouldScrollToBottom(false);\n      \n      try {\n        const olderMessages = await getChannelMessages(\n          channelId, \n          MESSAGES_PER_PAGE,\n          messages.length\n        );\n        \n        if (olderMessages.length < MESSAGES_PER_PAGE) {\n          setHasMoreMessages(false);\n        }\n\n        if (olderMessages.length > 0) {\n          const transformedMessages: StoreMessage[] = olderMessages.map(transformMessage);\n          const allMessages: StoreMessage[] = [...transformedMessages, ...messages];\n          dispatch(setMessages({ \n            channelId: String(channelId), \n            messages: allMessages\n          }));\n          \n          // Maintain scroll position after loading older messages\n          requestAnimationFrame(() => {\n            if (containerRef.current) {\n              const newScrollHeight = containerRef.current.scrollHeight;\n              containerRef.current.scrollTop = newScrollHeight - previousScrollHeight;\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Failed to fetch older messages:', error);\n        setError('Failed to load more messages. Please try again.');\n      } finally {\n        setIsLoadingMore(false);\n      }\n    }\n  };\n\n  // Auto-scroll to bottom on new messages\n  useEffect(() => {\n    if (containerRef.current && messages.length > 0 && shouldScrollToBottom) {\n      const container = containerRef.current;\n      // Use requestAnimationFrame to ensure the scroll happens after the render\n      requestAnimationFrame(() => {\n        container.scrollTop = container.scrollHeight;\n      });\n    }\n  }, [messages, shouldScrollToBottom]);\n\n  // Reset scroll behavior when channel changes\n  useEffect(() => {\n    setShouldScrollToBottom(true);\n  }, [channelId]);\n\n  if (!channelId) {\n    return (\n      <MessageListContainer>\n        <NoMessagesMessage>\n          Select a channel to view messages\n        </NoMessagesMessage>\n      </MessageListContainer>\n    );\n  }\n\n  return (\n    <>\n      <MessageListContainer\n        ref={containerRef}\n        onScroll={handleScroll}\n      >\n        <MessagesWrapper>\n          {error && (\n            <ErrorMessage>\n              {error}\n            </ErrorMessage>\n          )}\n          \n          {isConnecting && (\n            <LoadingMessage>\n              Connecting to chat...\n            </LoadingMessage>\n          )}\n          \n          {!hasMoreMessages && messages.length > 0 && (\n            <LoadingMessage>\n              You've reached the beginning of this conversation\n            </LoadingMessage>\n          )}\n          \n          {isLoadingMore && (\n            <LoadingMessage>Loading older messages...</LoadingMessage>\n          )}\n\n          {messages.length === 0 && !isLoading && !error && !isConnecting && (\n            <NoMessagesMessage>\n              No messages yet. Start the conversation!\n            </NoMessagesMessage>\n          )}\n\n          {messages.map((msg: StoreMessage) => {\n            const userId = Number(msg.userId);\n            const user = users[userId];\n            const sender = user?.username || `User ${msg.userId}`;\n            const isDeleting = deletingMessageIds.has(msg.id);\n            \n            return (\n              <div key={msg.id} id={`message-${msg.id}`} style={{ \n                margin: '4px 0',\n                opacity: isDeleting ? 0.5 : 1,\n                pointerEvents: isDeleting ? 'none' : 'auto'\n              }}>\n                <ChatMessage\n                  content={msg.content}\n                  sender={sender}\n                  timestamp={msg.createdAt}\n                  isSystem={false}\n                  userId={msg.userId}\n                  currentUserId={currentUser?.id?.toString()}\n                  onDelete={() => handleDeleteMessage(msg.id)}\n                />\n              </div>\n            );\n          })}\n        </MessagesWrapper>\n      </MessageListContainer>\n      <DeleteMessageModal\n        isOpen={isDeleteModalOpen}\n        onClose={() => {\n          setIsDeleteModalOpen(false);\n          setMessageToDelete(null);\n        }}\n        onConfirm={confirmDelete}\n        isDeleting={messageToDelete ? deletingMessageIds.has(messageToDelete) : false}\n      />\n    </>\n  );\n};\n\nexport default MessageList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}