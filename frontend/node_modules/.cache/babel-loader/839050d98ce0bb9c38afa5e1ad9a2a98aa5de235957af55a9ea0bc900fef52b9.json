{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\layout\\\\MainLayout\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useMemo, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setActiveChannel } from '../../../store/chat/chatSlice';\nimport { setSelectedMessageId } from '../../../store/messages/messagesSlice';\nimport { logout } from '../../../store/auth/authSlice';\nimport { searchAll } from '../../../services/api/search';\nimport MessageList from '../../chat/MessageList';\nimport SearchBar from '../../common/SearchBar';\nimport SearchResults from '../../common/SearchResults';\nimport CreateChannelModal from '../../chat/CreateChannelModal';\nimport ChannelSettings from '../../chat/ChannelSettings';\nimport ChannelListItem from '../../chat/ChannelListItem';\nimport UserListItem from '../../chat/UserListItem';\nimport MessageInput from '../../chat/MessageInput';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'Courier New', monospace;\n`;\n_c = MainContainer;\nconst Sidebar = styled.div`\n  width: 240px;\n  border-right: 1px solid ${props => props.theme.colors.border};\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = Sidebar;\nconst ChannelList = styled.div`\n  padding: 16px;\n  border-bottom: 1px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 8px;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.textLight};\n  }\n`;\n_c3 = ChannelList;\nconst CreateChannelButton = styled.button`\n  padding: 8px 16px;\n  border: 1px solid ${props => props.theme.colors.border};\n  color: ${props => props.theme.colors.text};\n  background: none;\n  width: 100%;\n  font-family: 'Courier New', monospace;\n  cursor: pointer;\n  text-transform: uppercase;\n\n  &:hover {\n    background: ${props => props.theme.colors.backgroundHover};\n    color: ${props => props.theme.colors.textHover};\n  }\n`;\n_c4 = CreateChannelButton;\nconst ChannelActions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n\n  h2 {\n    margin: 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.textLight};\n  }\n`;\n_c5 = ChannelActions;\nconst GroupTitle = styled.h3`\n  padding: 8px 16px;\n  font-size: 0.9rem;\n`;\n_c6 = GroupTitle;\nconst ChannelGroup = styled.div`\n  margin-bottom: 24px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n_c7 = ChannelGroup;\nconst UserList = styled.div`\n  padding: 16px;\n  font-size: 0.9rem;\n  text-transform: uppercase;\n  color: ${props => props.theme.colors.textLight};\n  border-bottom: 1px solid ${props => props.theme.colors.border};\n  font-family: 'Courier New', monospace;\n`;\n_c8 = UserList;\nconst SearchContainer = styled.div`\n  flex: 1;\n  padding: 0 16px;\n`;\n_c9 = SearchContainer;\nconst ChatArea = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n_c10 = ChatArea;\nconst ChatHeader = styled.div`\n  padding: 16px;\n  border-bottom: 1px solid ${props => props.theme.colors.border};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h1 {\n    margin: 0;\n    text-transform: uppercase;\n  }\n`;\n_c11 = ChatHeader;\nconst ChatInput = styled.div`\n  border-top: 1px solid ${props => props.theme.colors.border};\n`;\n_c12 = ChatInput;\nconst SettingsButton = styled.button`\n  background: none;\n  border: 1px solid ${props => props.theme.colors.border};\n  color: ${props => props.theme.colors.text};\n  padding: 8px 16px;\n  font-family: 'Courier New', monospace;\n  cursor: pointer;\n  text-transform: uppercase;\n\n  &:hover {\n    background: ${props => props.theme.colors.backgroundHover};\n    color: ${props => props.theme.colors.textHover};\n  }\n`;\n_c13 = SettingsButton;\nconst LogoutButton = styled(SettingsButton)`\n  margin-left: 8px;\n`;\n\n// Constants\n_c14 = LogoutButton;\nconst PAGE_SIZE = 50;\nconst MainLayout = () => {\n  _s();\n  // Local state\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [searchResults, setSearchResults] = useState(null);\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchError, setSearchError] = useState(null);\n  const messageListRef = useRef(null);\n\n  // Redux state\n  const dispatch = useDispatch();\n  const {\n    channels,\n    activeChannel,\n    activeChannelId,\n    channelMessages,\n    currentUser,\n    users\n  } = useSelector(state => ({\n    channels: state.chat.channels,\n    activeChannel: state.chat.channels.find(c => c.id === state.chat.activeChannelId),\n    activeChannelId: state.chat.activeChannelId,\n    channelMessages: state.messages.messagesByChannel[state.chat.activeChannelId || ''] || [],\n    currentUser: state.auth.user,\n    users: state.chat.users\n  }));\n\n  // Handle search\n  const handleSearch = async query => {\n    if (!query.trim()) {\n      setSearchResults(null);\n      return;\n    }\n    setIsSearching(true);\n    try {\n      const results = await searchAll(query);\n      setSearchResults(results);\n    } catch (error) {\n      console.error('Search error:', error);\n      setSearchError('Failed to search');\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  // Handle search result selection\n  const handleSelectChannel = channelId => {\n    dispatch(setActiveChannel(channelId));\n    setSearchResults(null);\n  };\n  const handleSelectMessage = async (channelId, messageId) => {\n    try {\n      // Switch to the channel if needed\n      if (channelId !== activeChannelId) {\n        dispatch(setActiveChannel(channelId));\n      }\n\n      // Set the selected message in Redux\n      dispatch(setSelectedMessageId({\n        channelId,\n        messageId\n      }));\n      setSearchResults(null);\n    } catch (error) {\n      console.error('Error selecting message:', error);\n    }\n  };\n  const handleSelectFile = fileId => {\n    // TODO: Implement file selection\n    console.log('Selected file:', fileId);\n    setSearchResults(null);\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  // Sort channels\n  const sortedChannels = useMemo(() => {\n    return [...channels].sort((a, b) => a.name.localeCompare(b.name));\n  }, [channels]);\n  const publicChannels = useMemo(() => sortedChannels.filter(channel => channel.is_public && !channel.is_direct_message), [sortedChannels]);\n  const privateChannels = useMemo(() => sortedChannels.filter(channel => !channel.is_public && !channel.is_direct_message), [sortedChannels]);\n  const directMessages = useMemo(() => sortedChannels.filter(channel => channel.is_direct_message), [sortedChannels]);\n\n  // Handle channel selection\n  const handleChannelSelect = useCallback(async channelId => {\n    if (channelId === activeChannelId) return;\n    dispatch(setActiveChannel(channelId));\n  }, [activeChannelId, dispatch]);\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(ChannelList, {\n        children: [/*#__PURE__*/_jsxDEV(CreateChannelButton, {\n          onClick: () => setIsCreateModalOpen(true),\n          children: \"Create Channel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChannelGroup, {\n          children: [/*#__PURE__*/_jsxDEV(GroupTitle, {\n            children: \"Public Channels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), publicChannels.map(channel => /*#__PURE__*/_jsxDEV(ChannelListItem, {\n            name: channel.name,\n            isActive: channel.id === activeChannelId,\n            hasUnread: channel.unreadCount > 0,\n            isPublic: true,\n            isDirect: false,\n            onClick: () => handleChannelSelect(channel.id)\n          }, channel.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChannelGroup, {\n          children: [/*#__PURE__*/_jsxDEV(GroupTitle, {\n            children: \"Private Channels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), privateChannels.map(channel => /*#__PURE__*/_jsxDEV(ChannelListItem, {\n            name: channel.name,\n            isActive: channel.id === activeChannelId,\n            hasUnread: channel.unreadCount > 0,\n            isPublic: false,\n            isDirect: false,\n            onClick: () => handleChannelSelect(channel.id)\n          }, channel.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChannelGroup, {\n          children: [/*#__PURE__*/_jsxDEV(GroupTitle, {\n            children: \"Direct Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), directMessages.map(channel => /*#__PURE__*/_jsxDEV(ChannelListItem, {\n            name: channel.name,\n            isActive: channel.id === activeChannelId,\n            hasUnread: channel.unreadCount > 0,\n            isDirect: true,\n            isPublic: false,\n            onClick: () => handleChannelSelect(channel.id)\n          }, channel.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserList, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), Object.values(users).map(user => /*#__PURE__*/_jsxDEV(UserListItem, {\n          username: user.username,\n          status: user.status\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatArea, {\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        children: activeChannel && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: activeChannel.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ChannelActions, {\n            children: [/*#__PURE__*/_jsxDEV(SearchContainer, {\n              children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n                onSearch: handleSearch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this), isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Searching...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 35\n              }, this), searchResults && /*#__PURE__*/_jsxDEV(SearchResults, {\n                results: searchResults,\n                isLoading: isSearching,\n                onClose: () => setSearchResults(null),\n                onSelectChannel: handleSelectChannel,\n                onSelectMessage: handleSelectMessage,\n                onSelectFile: handleSelectFile\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(SettingsButton, {\n              onClick: () => setIsSettingsOpen(true),\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n              onClick: handleLogout,\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n        ref: messageListRef,\n        messages: channelMessages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        children: /*#__PURE__*/_jsxDEV(MessageInput, {\n          channelId: activeChannelId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), isCreateModalOpen && /*#__PURE__*/_jsxDEV(CreateChannelModal, {\n      isOpen: isCreateModalOpen,\n      onClose: () => setIsCreateModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 9\n    }, this), isSettingsOpen && activeChannel && /*#__PURE__*/_jsxDEV(ChannelSettings, {\n      isOpen: isSettingsOpen,\n      channel: activeChannel,\n      onClose: () => setIsSettingsOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_s(MainLayout, \"BddBHkpqPO4QeWDc0Y2aoRFDcHg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c15 = MainLayout;\nexport default MainLayout;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"MainContainer\");\n$RefreshReg$(_c2, \"Sidebar\");\n$RefreshReg$(_c3, \"ChannelList\");\n$RefreshReg$(_c4, \"CreateChannelButton\");\n$RefreshReg$(_c5, \"ChannelActions\");\n$RefreshReg$(_c6, \"GroupTitle\");\n$RefreshReg$(_c7, \"ChannelGroup\");\n$RefreshReg$(_c8, \"UserList\");\n$RefreshReg$(_c9, \"SearchContainer\");\n$RefreshReg$(_c10, \"ChatArea\");\n$RefreshReg$(_c11, \"ChatHeader\");\n$RefreshReg$(_c12, \"ChatInput\");\n$RefreshReg$(_c13, \"SettingsButton\");\n$RefreshReg$(_c14, \"LogoutButton\");\n$RefreshReg$(_c15, \"MainLayout\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","useRef","styled","useDispatch","useSelector","setActiveChannel","setSelectedMessageId","logout","searchAll","MessageList","SearchBar","SearchResults","CreateChannelModal","ChannelSettings","ChannelListItem","UserListItem","MessageInput","jsxDEV","_jsxDEV","Fragment","_Fragment","MainContainer","div","props","theme","colors","background","text","_c","Sidebar","border","_c2","ChannelList","textLight","_c3","CreateChannelButton","button","backgroundHover","textHover","_c4","ChannelActions","_c5","GroupTitle","h3","_c6","ChannelGroup","_c7","UserList","_c8","SearchContainer","_c9","ChatArea","_c10","ChatHeader","_c11","ChatInput","_c12","SettingsButton","_c13","LogoutButton","_c14","PAGE_SIZE","MainLayout","_s","isCreateModalOpen","setIsCreateModalOpen","isSettingsOpen","setIsSettingsOpen","searchResults","setSearchResults","isSearching","setIsSearching","searchError","setSearchError","messageListRef","dispatch","channels","activeChannel","activeChannelId","channelMessages","currentUser","users","state","chat","find","c","id","messages","messagesByChannel","auth","user","handleSearch","query","trim","results","error","console","handleSelectChannel","channelId","handleSelectMessage","messageId","handleSelectFile","fileId","log","handleLogout","sortedChannels","sort","a","b","name","localeCompare","publicChannels","filter","channel","is_public","is_direct_message","privateChannels","directMessages","handleChannelSelect","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","isActive","hasUnread","unreadCount","isPublic","isDirect","Object","values","username","status","onSearch","isLoading","onClose","onSelectChannel","onSelectMessage","onSelectFile","ref","isOpen","_c15","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/layout/MainLayout/index.tsx"],"sourcesContent":["import React, { useState, useCallback, useMemo, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState, SearchResult } from '../../../types';\nimport { setActiveChannel } from '../../../store/chat/chatSlice';\nimport { setSelectedMessageId } from '../../../store/messages/messagesSlice';\nimport { logout } from '../../../store/auth/authSlice';\nimport { searchAll } from '../../../services/api/search';\nimport MessageList from '../../chat/MessageList';\nimport SearchBar from '../../common/SearchBar';\nimport SearchResults from '../../common/SearchResults';\nimport CreateChannelModal from '../../chat/CreateChannelModal';\nimport ChannelSettings from '../../chat/ChannelSettings';\nimport ChannelListItem from '../../chat/ChannelListItem';\nimport UserListItem from '../../chat/UserListItem';\nimport MessageInput from '../../chat/MessageInput';\n\nconst MainContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'Courier New', monospace;\n`;\n\nconst Sidebar = styled.div`\n  width: 240px;\n  border-right: 1px solid ${props => props.theme.colors.border};\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ChannelList = styled.div`\n  padding: 16px;\n  border-bottom: 1px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 8px;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.textLight};\n  }\n`;\n\nconst CreateChannelButton = styled.button`\n  padding: 8px 16px;\n  border: 1px solid ${props => props.theme.colors.border};\n  color: ${props => props.theme.colors.text};\n  background: none;\n  width: 100%;\n  font-family: 'Courier New', monospace;\n  cursor: pointer;\n  text-transform: uppercase;\n\n  &:hover {\n    background: ${props => props.theme.colors.backgroundHover};\n    color: ${props => props.theme.colors.textHover};\n  }\n`;\n\nconst ChannelActions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n\n  h2 {\n    margin: 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.textLight};\n  }\n`;\n\nconst GroupTitle = styled.h3`\n  padding: 8px 16px;\n  font-size: 0.9rem;\n`;\n\nconst ChannelGroup = styled.div`\n  margin-bottom: 24px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst UserList = styled.div`\n  padding: 16px;\n  font-size: 0.9rem;\n  text-transform: uppercase;\n  color: ${props => props.theme.colors.textLight};\n  border-bottom: 1px solid ${props => props.theme.colors.border};\n  font-family: 'Courier New', monospace;\n`;\n\nconst SearchContainer = styled.div`\n  flex: 1;\n  padding: 0 16px;\n`;\n\nconst ChatArea = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nconst ChatHeader = styled.div`\n  padding: 16px;\n  border-bottom: 1px solid ${props => props.theme.colors.border};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h1 {\n    margin: 0;\n    text-transform: uppercase;\n  }\n`;\n\nconst ChatInput = styled.div`\n  border-top: 1px solid ${props => props.theme.colors.border};\n`;\n\nconst SettingsButton = styled.button`\n  background: none;\n  border: 1px solid ${props => props.theme.colors.border};\n  color: ${props => props.theme.colors.text};\n  padding: 8px 16px;\n  font-family: 'Courier New', monospace;\n  cursor: pointer;\n  text-transform: uppercase;\n\n  &:hover {\n    background: ${props => props.theme.colors.backgroundHover};\n    color: ${props => props.theme.colors.textHover};\n  }\n`;\n\nconst LogoutButton = styled(SettingsButton)`\n  margin-left: 8px;\n`;\n\n// Constants\nconst PAGE_SIZE = 50;\n\nconst MainLayout: React.FC = () => {\n  // Local state\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [searchResults, setSearchResults] = useState<SearchResult | null>(null);\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchError, setSearchError] = useState<string | null>(null);\n  const messageListRef = useRef<HTMLDivElement>(null);\n\n  // Redux state\n  const dispatch = useDispatch();\n  const {\n    channels,\n    activeChannel,\n    activeChannelId,\n    channelMessages,\n    currentUser,\n    users\n  } = useSelector((state: RootState) => ({\n    channels: state.chat.channels,\n    activeChannel: state.chat.channels.find(c => c.id === state.chat.activeChannelId),\n    activeChannelId: state.chat.activeChannelId,\n    channelMessages: state.messages.messagesByChannel[state.chat.activeChannelId || ''] || [],\n    currentUser: state.auth.user,\n    users: state.chat.users\n  }));\n\n  // Handle search\n  const handleSearch = async (query: string) => {\n    if (!query.trim()) {\n      setSearchResults(null);\n      return;\n    }\n\n    setIsSearching(true);\n    try {\n      const results = await searchAll(query);\n      setSearchResults(results);\n    } catch (error) {\n      console.error('Search error:', error);\n      setSearchError('Failed to search');\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  // Handle search result selection\n  const handleSelectChannel = (channelId: string) => {\n    dispatch(setActiveChannel(channelId));\n    setSearchResults(null);\n  };\n\n  const handleSelectMessage = async (channelId: string, messageId: string) => {\n    try {\n      // Switch to the channel if needed\n      if (channelId !== activeChannelId) {\n        dispatch(setActiveChannel(channelId));\n      }\n\n      // Set the selected message in Redux\n      dispatch(setSelectedMessageId({ channelId, messageId }));\n      setSearchResults(null);\n    } catch (error) {\n      console.error('Error selecting message:', error);\n    }\n  };\n\n  const handleSelectFile = (fileId: string) => {\n    // TODO: Implement file selection\n    console.log('Selected file:', fileId);\n    setSearchResults(null);\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  // Sort channels\n  const sortedChannels = useMemo(() => {\n    return [...channels].sort((a, b) => a.name.localeCompare(b.name));\n  }, [channels]);\n\n  const publicChannels = useMemo(() => \n    sortedChannels.filter(channel => channel.is_public && !channel.is_direct_message),\n    [sortedChannels]\n  );\n\n  const privateChannels = useMemo(() => \n    sortedChannels.filter(channel => !channel.is_public && !channel.is_direct_message),\n    [sortedChannels]\n  );\n\n  const directMessages = useMemo(() => \n    sortedChannels.filter(channel => channel.is_direct_message),\n    [sortedChannels]\n  );\n\n  // Handle channel selection\n  const handleChannelSelect = useCallback(async (channelId: string) => {\n    if (channelId === activeChannelId) return;\n    dispatch(setActiveChannel(channelId));\n  }, [activeChannelId, dispatch]);\n\n  return (\n    <MainContainer>\n      <Sidebar>\n        <ChannelList>\n          <CreateChannelButton onClick={() => setIsCreateModalOpen(true)}>\n            Create Channel\n          </CreateChannelButton>\n\n          {/* Public Channels */}\n          <ChannelGroup>\n            <GroupTitle>Public Channels</GroupTitle>\n            {publicChannels.map(channel => (\n              <ChannelListItem\n                key={channel.id}\n                name={channel.name}\n                isActive={channel.id === activeChannelId}\n                hasUnread={channel.unreadCount > 0}\n                isPublic={true}\n                isDirect={false}\n                onClick={() => handleChannelSelect(channel.id)}\n              />\n            ))}\n          </ChannelGroup>\n\n          {/* Private Channels */}\n          <ChannelGroup>\n            <GroupTitle>Private Channels</GroupTitle>\n            {privateChannels.map(channel => (\n              <ChannelListItem\n                key={channel.id}\n                name={channel.name}\n                isActive={channel.id === activeChannelId}\n                hasUnread={channel.unreadCount > 0}\n                isPublic={false}\n                isDirect={false}\n                onClick={() => handleChannelSelect(channel.id)}\n              />\n            ))}\n          </ChannelGroup>\n\n          {/* Direct Messages */}\n          <ChannelGroup>\n            <GroupTitle>Direct Messages</GroupTitle>\n            {directMessages.map(channel => (\n              <ChannelListItem\n                key={channel.id}\n                name={channel.name}\n                isActive={channel.id === activeChannelId}\n                hasUnread={channel.unreadCount > 0}\n                isDirect={true}\n                isPublic={false}\n                onClick={() => handleChannelSelect(channel.id)}\n              />\n            ))}\n          </ChannelGroup>\n        </ChannelList>\n\n        <UserList>\n          <h2>Users</h2>\n          {Object.values(users).map(user => (\n            <UserListItem\n              key={user.id}\n              username={user.username}\n              status={user.status}\n            />\n          ))}\n        </UserList>\n      </Sidebar>\n\n      <ChatArea>\n        <ChatHeader>\n          {activeChannel && (\n            <>\n              <h1>{activeChannel.name}</h1>\n              <ChannelActions>\n                <SearchContainer>\n                  <SearchBar onSearch={handleSearch} />\n                  {isSearching && <div>Searching...</div>}\n                  {searchResults && (\n                    <SearchResults\n                      results={searchResults}\n                      isLoading={isSearching}\n                      onClose={() => setSearchResults(null)}\n                      onSelectChannel={handleSelectChannel}\n                      onSelectMessage={handleSelectMessage}\n                      onSelectFile={handleSelectFile}\n                    />\n                  )}\n                </SearchContainer>\n                <SettingsButton onClick={() => setIsSettingsOpen(true)}>\n                  Settings\n                </SettingsButton>\n                <LogoutButton onClick={handleLogout}>\n                  Logout\n                </LogoutButton>\n              </ChannelActions>\n            </>\n          )}\n        </ChatHeader>\n\n        <MessageList\n          ref={messageListRef}\n          messages={channelMessages}\n        />\n        \n        <ChatInput>\n          <MessageInput\n            channelId={activeChannelId}\n          />\n        </ChatInput>\n      </ChatArea>\n\n      {isCreateModalOpen && (\n        <CreateChannelModal\n          isOpen={isCreateModalOpen}\n          onClose={() => setIsCreateModalOpen(false)}\n        />\n      )}\n\n      {isSettingsOpen && activeChannel && (\n        <ChannelSettings\n          isOpen={isSettingsOpen}\n          channel={activeChannel}\n          onClose={() => setIsSettingsOpen(false)}\n        />\n      )}\n    </MainContainer>\n  );\n};\n\nexport default MainLayout; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}