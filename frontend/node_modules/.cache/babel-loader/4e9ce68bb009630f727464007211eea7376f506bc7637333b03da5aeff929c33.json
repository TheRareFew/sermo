{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './auth/authSlice';\nimport chatReducer from './chat/chatSlice';\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    chat: chatReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      // Ignore these action types\n      ignoredActions: ['auth/login/fulfilled', 'auth/logout/fulfilled']\n    }\n  })\n});","map":{"version":3,"names":["configureStore","authReducer","chatReducer","store","reducer","auth","chat","middleware","getDefaultMiddleware","serializableCheck","ignoredActions"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/store/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './auth/authSlice';\nimport chatReducer from './chat/chatSlice';\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    chat: chatReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        // Ignore these action types\n        ignoredActions: ['auth/login/fulfilled', 'auth/logout/fulfilled'],\n      },\n    }),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch; "],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,WAAW,MAAM,kBAAkB;AAE1C,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAClCI,OAAO,EAAE;IACPC,IAAI,EAAEJ,WAAW;IACjBK,IAAI,EAAEJ;EACR,CAAC;EACDK,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjB;MACAC,cAAc,EAAE,CAAC,sBAAsB,EAAE,uBAAuB;IAClE;EACF,CAAC;AACL,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}