{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  messagesByChannel: {},\n  loading: false,\n  error: null\n};\nconst messagesSlice = createSlice({\n  name: 'messages',\n  initialState,\n  reducers: {\n    setMessages: (state, action) => {\n      const {\n        channelId,\n        messages\n      } = action.payload;\n      console.log('Setting messages for channel:', channelId, messages);\n      state.messagesByChannel[channelId] = messages.map(message => ({\n        ...message,\n        reactions: message.reactions || [],\n        attachments: message.attachments || [],\n        replyCount: message.replyCount || 0,\n        isExpanded: false,\n        repliesLoaded: false\n      }));\n      console.log('Updated messages state:', state.messagesByChannel[channelId]);\n    },\n    addMessage: (state, action) => {\n      const {\n        channelId,\n        message\n      } = action.payload;\n      console.log('Adding message:', {\n        channelId,\n        message\n      });\n      if (!state.messagesByChannel[channelId]) {\n        state.messagesByChannel[channelId] = [];\n      }\n      state.messagesByChannel[channelId].push({\n        ...message,\n        reactions: message.reactions || [],\n        attachments: message.attachments || [],\n        replyCount: message.replyCount || 0,\n        isExpanded: false,\n        repliesLoaded: false\n      });\n      console.log('Updated messages state:', state.messagesByChannel[channelId]);\n    },\n    prependMessages: (state, action) => {\n      const {\n        channelId,\n        messages\n      } = action.payload;\n      console.log('Prepending messages:', {\n        channelId,\n        messages\n      });\n      if (!state.messagesByChannel[channelId]) {\n        state.messagesByChannel[channelId] = [];\n      }\n      state.messagesByChannel[channelId].unshift(...messages.map(message => ({\n        ...message,\n        reactions: message.reactions || [],\n        attachments: message.attachments || [],\n        replyCount: message.replyCount || 0,\n        isExpanded: false,\n        repliesLoaded: false\n      })));\n      console.log('Updated messages state:', state.messagesByChannel[channelId]);\n    },\n    updateMessage: (state, action) => {\n      var _state$messagesByChan;\n      const {\n        channelId,\n        messageId,\n        message\n      } = action.payload;\n      console.log('Updating message:', {\n        channelId,\n        messageId,\n        message\n      });\n      const messageIndex = (_state$messagesByChan = state.messagesByChannel[channelId]) === null || _state$messagesByChan === void 0 ? void 0 : _state$messagesByChan.findIndex(m => m.id === messageId);\n      if (messageIndex !== undefined && messageIndex !== -1) {\n        state.messagesByChannel[channelId][messageIndex] = {\n          ...state.messagesByChannel[channelId][messageIndex],\n          ...message,\n          reactions: message.reactions || state.messagesByChannel[channelId][messageIndex].reactions || [],\n          attachments: message.attachments || state.messagesByChannel[channelId][messageIndex].attachments || []\n        };\n        console.log('Updated message:', state.messagesByChannel[channelId][messageIndex]);\n      }\n    },\n    deleteMessage: (state, action) => {\n      const {\n        channelId,\n        messageId\n      } = action.payload;\n      if (state.messagesByChannel[channelId]) {\n        state.messagesByChannel[channelId] = state.messagesByChannel[channelId].filter(message => message.id !== messageId);\n      }\n    },\n    toggleReplies: (state, action) => {\n      var _state$messagesByChan2;\n      const {\n        channelId,\n        messageId\n      } = action.payload;\n      const messageIndex = (_state$messagesByChan2 = state.messagesByChannel[channelId]) === null || _state$messagesByChan2 === void 0 ? void 0 : _state$messagesByChan2.findIndex(m => m.id === messageId);\n      if (messageIndex !== undefined && messageIndex !== -1) {\n        state.messagesByChannel[channelId][messageIndex].isExpanded = !state.messagesByChannel[channelId][messageIndex].isExpanded;\n      }\n    },\n    addReaction: (state, action) => {\n      var _state$messagesByChan3;\n      const {\n        channelId,\n        messageId,\n        reaction\n      } = action.payload;\n      console.log('Adding reaction:', {\n        channelId,\n        messageId,\n        reaction\n      });\n      const message = (_state$messagesByChan3 = state.messagesByChannel[channelId]) === null || _state$messagesByChan3 === void 0 ? void 0 : _state$messagesByChan3.find(m => m.id === messageId);\n      console.log('Found message:', message);\n      if (message) {\n        if (!message.reactions) {\n          message.reactions = [];\n        }\n        const existingIndex = message.reactions.findIndex(r => r.userId === reaction.userId && r.emoji === reaction.emoji);\n        console.log('Existing reaction index:', existingIndex);\n        if (existingIndex === -1) {\n          message.reactions.push(reaction);\n          console.log('Added reaction, new reactions:', message.reactions);\n          state.messagesByChannel[channelId] = [...state.messagesByChannel[channelId]];\n        } else {\n          console.log('Reaction already exists, skipping');\n        }\n      } else {\n        console.warn('Message not found for reaction:', messageId);\n      }\n    },\n    removeReaction: (state, action) => {\n      var _state$messagesByChan4;\n      const {\n        channelId,\n        messageId,\n        userId,\n        emoji\n      } = action.payload;\n      console.log('Removing reaction:', {\n        channelId,\n        messageId,\n        userId,\n        emoji\n      });\n      const message = (_state$messagesByChan4 = state.messagesByChannel[channelId]) === null || _state$messagesByChan4 === void 0 ? void 0 : _state$messagesByChan4.find(m => m.id === messageId);\n      console.log('Found message:', message);\n      if (message && message.reactions) {\n        const initialLength = message.reactions.length;\n        message.reactions = message.reactions.filter(r => !(r.userId === userId && r.emoji === emoji));\n        if (message.reactions.length !== initialLength) {\n          console.log('Removed reaction, new reactions:', message.reactions);\n          state.messagesByChannel[channelId] = [...state.messagesByChannel[channelId]];\n        } else {\n          console.log('No reaction was removed');\n        }\n      } else {\n        console.warn('Message not found or has no reactions:', messageId);\n      }\n    }\n  }\n});\nexport const {\n  setMessages,\n  addMessage,\n  prependMessages,\n  updateMessage,\n  deleteMessage,\n  toggleReplies,\n  addReaction,\n  removeReaction\n} = messagesSlice.actions;\nexport default messagesSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","messagesByChannel","loading","error","messagesSlice","name","reducers","setMessages","state","action","channelId","messages","payload","console","log","map","message","reactions","attachments","replyCount","isExpanded","repliesLoaded","addMessage","push","prependMessages","unshift","updateMessage","_state$messagesByChan","messageId","messageIndex","findIndex","m","id","undefined","deleteMessage","filter","toggleReplies","_state$messagesByChan2","addReaction","_state$messagesByChan3","reaction","find","existingIndex","r","userId","emoji","warn","removeReaction","_state$messagesByChan4","initialLength","length","actions","reducer"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/store/messages/messagesSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { StoreMessage, Reaction } from '../../types';\n\ninterface MessagesState {\n  messagesByChannel: {\n    [channelId: string]: StoreMessage[];\n  };\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: MessagesState = {\n  messagesByChannel: {},\n  loading: false,\n  error: null\n};\n\nconst messagesSlice = createSlice({\n  name: 'messages',\n  initialState,\n  reducers: {\n    setMessages: (state, action: PayloadAction<{ channelId: string; messages: StoreMessage[] }>) => {\n      const { channelId, messages } = action.payload;\n      console.log('Setting messages for channel:', channelId, messages);\n      state.messagesByChannel[channelId] = messages.map(message => ({\n        ...message,\n        reactions: message.reactions || [],\n        attachments: message.attachments || [],\n        replyCount: message.replyCount || 0,\n        isExpanded: false,\n        repliesLoaded: false\n      }));\n      console.log('Updated messages state:', state.messagesByChannel[channelId]);\n    },\n    addMessage: (state, action: PayloadAction<{ channelId: string; message: StoreMessage }>) => {\n      const { channelId, message } = action.payload;\n      console.log('Adding message:', { channelId, message });\n      if (!state.messagesByChannel[channelId]) {\n        state.messagesByChannel[channelId] = [];\n      }\n      state.messagesByChannel[channelId].push({\n        ...message,\n        reactions: message.reactions || [],\n        attachments: message.attachments || [],\n        replyCount: message.replyCount || 0,\n        isExpanded: false,\n        repliesLoaded: false\n      });\n      console.log('Updated messages state:', state.messagesByChannel[channelId]);\n    },\n    prependMessages: (state, action: PayloadAction<{ channelId: string; messages: StoreMessage[] }>) => {\n      const { channelId, messages } = action.payload;\n      console.log('Prepending messages:', { channelId, messages });\n      if (!state.messagesByChannel[channelId]) {\n        state.messagesByChannel[channelId] = [];\n      }\n      state.messagesByChannel[channelId].unshift(...messages.map(message => ({\n        ...message,\n        reactions: message.reactions || [],\n        attachments: message.attachments || [],\n        replyCount: message.replyCount || 0,\n        isExpanded: false,\n        repliesLoaded: false\n      })));\n      console.log('Updated messages state:', state.messagesByChannel[channelId]);\n    },\n    updateMessage: (state, action: PayloadAction<{ channelId: string; messageId: string; message: Partial<StoreMessage> }>) => {\n      const { channelId, messageId, message } = action.payload;\n      console.log('Updating message:', { channelId, messageId, message });\n      const messageIndex = state.messagesByChannel[channelId]?.findIndex(m => m.id === messageId);\n      if (messageIndex !== undefined && messageIndex !== -1) {\n        state.messagesByChannel[channelId][messageIndex] = {\n          ...state.messagesByChannel[channelId][messageIndex],\n          ...message,\n          reactions: message.reactions || state.messagesByChannel[channelId][messageIndex].reactions || [],\n          attachments: message.attachments || state.messagesByChannel[channelId][messageIndex].attachments || []\n        };\n        console.log('Updated message:', state.messagesByChannel[channelId][messageIndex]);\n      }\n    },\n    deleteMessage: (state, action: PayloadAction<{ channelId: string; messageId: string }>) => {\n      const { channelId, messageId } = action.payload;\n      if (state.messagesByChannel[channelId]) {\n        state.messagesByChannel[channelId] = state.messagesByChannel[channelId].filter(message => message.id !== messageId);\n      }\n    },\n    toggleReplies: (state, action: PayloadAction<{ channelId: string; messageId: string }>) => {\n      const { channelId, messageId } = action.payload;\n      const messageIndex = state.messagesByChannel[channelId]?.findIndex(m => m.id === messageId);\n      if (messageIndex !== undefined && messageIndex !== -1) {\n        state.messagesByChannel[channelId][messageIndex].isExpanded = !state.messagesByChannel[channelId][messageIndex].isExpanded;\n      }\n    },\n    addReaction: (state, action: PayloadAction<{ channelId: string; messageId: string; reaction: Reaction }>) => {\n      const { channelId, messageId, reaction } = action.payload;\n      console.log('Adding reaction:', {\n        channelId,\n        messageId,\n        reaction\n      });\n      \n      const message = state.messagesByChannel[channelId]?.find(m => m.id === messageId);\n      console.log('Found message:', message);\n      \n      if (message) {\n        if (!message.reactions) {\n          message.reactions = [];\n        }\n        \n        const existingIndex = message.reactions.findIndex(r => \n          r.userId === reaction.userId && r.emoji === reaction.emoji\n        );\n        console.log('Existing reaction index:', existingIndex);\n        \n        if (existingIndex === -1) {\n          message.reactions.push(reaction);\n          console.log('Added reaction, new reactions:', message.reactions);\n          \n          state.messagesByChannel[channelId] = [...state.messagesByChannel[channelId]];\n        } else {\n          console.log('Reaction already exists, skipping');\n        }\n      } else {\n        console.warn('Message not found for reaction:', messageId);\n      }\n    },\n    removeReaction: (state, action: PayloadAction<{ channelId: string; messageId: string; userId: string; emoji: string }>) => {\n      const { channelId, messageId, userId, emoji } = action.payload;\n      console.log('Removing reaction:', {\n        channelId,\n        messageId,\n        userId,\n        emoji\n      });\n      \n      const message = state.messagesByChannel[channelId]?.find(m => m.id === messageId);\n      console.log('Found message:', message);\n      \n      if (message && message.reactions) {\n        const initialLength = message.reactions.length;\n        message.reactions = message.reactions.filter(r => \n          !(r.userId === userId && r.emoji === emoji)\n        );\n        \n        if (message.reactions.length !== initialLength) {\n          console.log('Removed reaction, new reactions:', message.reactions);\n          state.messagesByChannel[channelId] = [...state.messagesByChannel[channelId]];\n        } else {\n          console.log('No reaction was removed');\n        }\n      } else {\n        console.warn('Message not found or has no reactions:', messageId);\n      }\n    },\n  },\n});\n\nexport const { \n  setMessages, \n  addMessage, \n  prependMessages, \n  updateMessage, \n  deleteMessage, \n  toggleReplies,\n  addReaction,\n  removeReaction\n} = messagesSlice.actions;\n\nexport default messagesSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}