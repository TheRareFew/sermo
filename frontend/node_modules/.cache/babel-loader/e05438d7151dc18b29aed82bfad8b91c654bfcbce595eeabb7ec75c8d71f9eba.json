{"ast":null,"code":"// User Types\n\n// Base types\n\n// Store Message type\n\n// Attachment type\n\n// Reaction type\n\n// Auth types\n\n// State types\n\n// WebSocket message types\n\n// Base WebSocket message data interface\n\n// Message-specific WebSocket data\n\n// Channel-specific WebSocket data\n\n// Combined WebSocket data type\n\n// WebSocket message interface\n\n// Type guards\nexport function isMessageData(data) {\n  if (!data.message) return false;\n  return 'content' in data.message && 'sender_id' in data.message;\n}\nexport function isChannelData(data) {\n  if (!data.message) return false;\n  return 'is_direct_message' in data.message && 'is_public' in data.message;\n}\n\n// Root State type","map":{"version":3,"names":["isMessageData","data","message","isChannelData"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/types/index.ts"],"sourcesContent":["// User Types\nexport type UserStatus = 'online' | 'offline' | 'away' | 'busy';\n\nexport interface User {\n  id: string;\n  username: string;\n  status: UserStatus;\n  avatar_url?: string;\n}\n\n// Base types\nexport interface Channel {\n  id: string;\n  name: string;\n  description?: string;\n  is_direct_message: boolean;\n  is_public: boolean;\n  created_at: string;\n  created_by_id: string;\n  members: string[];\n  unreadCount: number;\n}\n\nexport interface RawMessage {\n  id: number | string;\n  content: string;\n  channel_id: number | string;\n  sender_id: number | string;\n  created_at: string;\n  updated_at?: string;\n  is_system?: boolean;\n  parent_id?: number | string;\n  reply_count?: number;\n}\n\nexport interface Message {\n  id: string;\n  content: string;\n  sender_id: string;\n  channel_id: string;\n  created_at: string;\n  updated_at: string;\n  is_system?: boolean;\n  parent_id?: string;\n  reply_count?: number;\n}\n\n// Store Message type\nexport interface StoreMessage {\n  id: string;\n  content: string;\n  channelId: string;\n  userId: string;\n  reactions: Reaction[];\n  attachments: Attachment[];\n  createdAt: string;\n  updatedAt: string;\n  parentId?: string;\n  replyCount: number;\n  isExpanded?: boolean;\n  repliesLoaded?: boolean;\n  replies?: StoreMessage[];\n}\n\n// Attachment type\nexport interface Attachment {\n  id: string;\n  type: 'image' | 'file';\n  url: string;\n  name: string;\n  size: number;\n}\n\n// Reaction type\nexport interface Reaction {\n  id: string;\n  emoji: string;\n  userId: string;\n}\n\n// Auth types\nexport interface AuthResponse {\n  token: string;\n  user: User;\n}\n\nexport interface ApiAuthResponse {\n  access_token: string;\n  token_type: string;\n  user: {\n    id: string;\n    username: string;\n    email: string;\n    full_name: string;\n    status: 'online' | 'offline' | 'away' | 'busy';\n    last_seen: string;\n  };\n}\n\n// State types\nexport interface AuthState {\n  isAuthenticated: boolean;\n  user: User | null;\n  token: string | null;\n  loading: boolean;\n  error: string | null;\n}\n\nexport interface ChannelsState {\n  channels: Channel[];\n  activeChannel: Channel | null;\n  loading: boolean;\n  error: string | null;\n}\n\nexport interface ChatState {\n  activeChannelId: string | null;\n  channels: Channel[];\n  users: { [key: string]: User };\n  loading: boolean;\n  error: string | null;\n}\n\nexport interface MessagesState {\n  messagesByChannel: {\n    [channelId: string]: StoreMessage[];\n  };\n  loading: boolean;\n  error: string | null;\n}\n\nexport interface UsersState {\n  users: User[];\n  onlineUsers: string[];\n  loading: boolean;\n  error: string | null;\n}\n\n// WebSocket message types\nexport type WebSocketMessageType = \n  | 'new_message'\n  | 'message_updated'\n  | 'message_deleted'\n  | 'new_reply'\n  | 'channel_joined'\n  | 'join_channel'\n  | 'channel_created'\n  | 'channel_updated'\n  | 'channel_deleted'\n  | 'unread_count_updated'\n  | 'user_status'\n  | 'error'\n  | 'pong';\n\n// Base WebSocket message data interface\ninterface BaseWebSocketData {\n  channelId?: string;\n  channel_id?: number | string;\n  messageId?: string;\n  message_id?: string;\n  parentMessageId?: string;\n  parent_id?: string;\n  error?: string;\n  user_id?: string | number;\n  status?: UserStatus;\n  count?: number;\n}\n\n// Message-specific WebSocket data\ninterface MessageWebSocketData extends BaseWebSocketData {\n  message: Message | RawMessage;\n  reply?: Message | RawMessage;\n}\n\n// Channel-specific WebSocket data\ninterface ChannelWebSocketData extends BaseWebSocketData {\n  message: Channel;\n}\n\n// Combined WebSocket data type\nexport type WebSocketMessageData = BaseWebSocketData & {\n  message?: Message | RawMessage | Channel;\n  reply?: Message | RawMessage;\n};\n\n// WebSocket message interface\nexport interface WebSocketMessage {\n  type: WebSocketMessageType;\n  data?: WebSocketMessageData;\n}\n\n// Type guards\nexport function isMessageData(data: WebSocketMessageData): data is MessageWebSocketData {\n  if (!data.message) return false;\n  return 'content' in data.message && 'sender_id' in data.message;\n}\n\nexport function isChannelData(data: WebSocketMessageData): data is ChannelWebSocketData {\n  if (!data.message) return false;\n  return 'is_direct_message' in data.message && 'is_public' in data.message;\n}\n\n// Root State type\nexport interface RootState {\n  auth: AuthState;\n  chat: ChatState;\n  messages: MessagesState;\n  users: UsersState;\n}\n\nexport interface SearchResult {\n  channels: ChannelSearchResult[];\n  messages: MessageSearchResult[];\n  files: FileSearchResult[];\n}\n\nexport interface ChannelSearchResult {\n  id: string;\n  name: string;\n  description?: string;\n  is_direct_message: boolean;\n  member_count: number;\n}\n\nexport interface MessageSearchResult {\n  id: string;\n  content: string;\n  created_at: string;\n  sender_id: string;\n  channel_id: string;\n  channel_name: string;\n}\n\nexport interface FileSearchResult {\n  id: string;\n  filename: string;\n  file_type: string;\n  file_path: string;\n  created_at: string;\n  channel_id: string;\n  channel_name: string;\n} "],"mappings":"AAAA;;AAUA;;AAqCA;;AAiBA;;AASA;;AAOA;;AAmBA;;AAuCA;;AAgBA;;AAcA;;AAMA;;AAKA;;AAMA;;AAMA;AACA,OAAO,SAASA,aAAaA,CAACC,IAA0B,EAAgC;EACtF,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE,OAAO,KAAK;EAC/B,OAAO,SAAS,IAAID,IAAI,CAACC,OAAO,IAAI,WAAW,IAAID,IAAI,CAACC,OAAO;AACjE;AAEA,OAAO,SAASC,aAAaA,CAACF,IAA0B,EAAgC;EACtF,IAAI,CAACA,IAAI,CAACC,OAAO,EAAE,OAAO,KAAK;EAC/B,OAAO,mBAAmB,IAAID,IAAI,CAACC,OAAO,IAAI,WAAW,IAAID,IAAI,CAACC,OAAO;AAC3E;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}