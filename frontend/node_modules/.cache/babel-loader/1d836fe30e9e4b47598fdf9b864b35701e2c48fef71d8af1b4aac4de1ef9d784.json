{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ChatMessage from '../../common/ChatMessage';\nimport DeleteMessageModal from '../DeleteMessageModal';\nimport ReplyModal from '../ReplyModal';\nimport MessageReplies from '../MessageReplies';\nimport { getChannelMessages, deleteMessage as deleteMessageApi, getReplies, createReply } from '../../../services/api/chat';\nimport { setMessages, deleteMessage, setReplies, toggleExpanded, addMessage } from '../../../store/messages/messagesSlice';\nimport wsService from '../../../services/websocket';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  gap: 2px;\n  background: ${props => props.theme.colors.background};\n  border: 2px solid ${props => props.theme.colors.border};\n  font-family: 'Courier New', monospace;\n`;\n_c = MessageListContainer;\nconst MessagesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: auto;\n  min-height: min-content;\n`;\n_c2 = MessagesWrapper;\nconst LoadingMessage = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.textSecondary};\n  font-family: 'Courier New', monospace;\n  font-style: italic;\n`;\n_c3 = LoadingMessage;\nconst ErrorMessage = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.error};\n  font-family: 'Courier New', monospace;\n  border: 1px solid ${props => props.theme.colors.error};\n  margin: 8px;\n`;\n_c4 = ErrorMessage;\nconst NoMessagesMessage = styled.div`\n  text-align: center;\n  padding: 20px;\n  color: ${props => props.theme.colors.secondary};\n  font-family: 'Courier New', monospace;\n  border: 1px dashed ${props => props.theme.colors.border};\n  margin: 16px;\n`;\n_c5 = NoMessagesMessage;\nconst MESSAGES_PER_PAGE = 30;\n\n// Transform API message to store message format\nconst transformMessage = msg => {\n  console.log('Transforming message:', msg);\n  if (!msg || !msg.id || !msg.content || !msg.channel_id || !msg.sender_id) {\n    console.error('Invalid message format:', msg);\n    throw new Error('Invalid message format');\n  }\n  const transformed = {\n    id: String(msg.id),\n    content: msg.content,\n    channelId: String(msg.channel_id),\n    userId: String(msg.sender_id),\n    parentId: msg.parent_id ? String(msg.parent_id) : undefined,\n    reactions: [],\n    attachments: [],\n    createdAt: msg.created_at,\n    updatedAt: msg.created_at,\n    replyCount: msg.reply_count || 0,\n    isExpanded: false\n  };\n  console.log('Transformed message:', transformed);\n  return transformed;\n};\nconst MessageList = ({\n  channelId\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const containerRef = useRef(null);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [hasMoreMessages, setHasMoreMessages] = useState(true);\n  const [error, setError] = useState(null);\n  const [shouldScrollToBottom, setShouldScrollToBottom] = useState(true);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [deletingMessageIds, setDeletingMessageIds] = useState(new Set());\n  const [messageToDelete, setMessageToDelete] = useState(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [replyToMessage, setReplyToMessage] = useState(null);\n  const [isReplyModalOpen, setIsReplyModalOpen] = useState(false);\n\n  // Connect to WebSocket when channel changes\n  useEffect(() => {\n    let isMounted = true;\n    let errorHandler = null;\n    const connectToChannel = async () => {\n      if (!channelId) return;\n      setIsConnecting(true);\n      setError(null);\n      try {\n        await wsService.connect(channelId);\n        if (isMounted) {\n          setError(null);\n        }\n      } catch (error) {\n        console.error('Failed to connect to channel:', error);\n        if (isMounted) {\n          if (error instanceof Error) {\n            setError(error.message);\n          } else {\n            setError('Failed to connect to channel. Messages may not update in real-time.');\n          }\n        }\n      } finally {\n        if (isMounted) {\n          setIsConnecting(false);\n        }\n      }\n    };\n\n    // Set up WebSocket error handler\n    errorHandler = error => {\n      if (!isMounted) return;\n      console.error('WebSocket error:', error);\n      if (error.code === 'MAX_RECONNECT_ATTEMPTS') {\n        setError('Lost connection to chat. Please refresh the page.');\n      } else if (error.code === 'AUTH_FAILED') {\n        setError('Authentication failed. Please try logging in again.');\n      } else if (error.code === 'CHANNEL_ACCESS_DENIED') {\n        setError('You do not have access to this channel.');\n      } else {\n        setError(error.message || 'Connection error. Messages may not update in real-time.');\n      }\n    };\n    wsService.onError(errorHandler);\n    connectToChannel();\n\n    // Cleanup\n    return () => {\n      isMounted = false;\n      if (channelId) {\n        wsService.leaveChannel(channelId);\n      }\n    };\n  }, [channelId]);\n  const messages = useSelector(state => {\n    var _state$messages;\n    if (!channelId || !((_state$messages = state.messages) !== null && _state$messages !== void 0 && _state$messages.messagesByChannel)) {\n      return [];\n    }\n    const channelMessages = state.messages.messagesByChannel[String(channelId)] || [];\n    // Sort messages by timestamp, oldest first\n    const sortedMessages = [...channelMessages].sort((a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime());\n    return sortedMessages;\n  });\n\n  // Organize messages into threads\n  const messageThreads = messages.reduce((acc, message) => {\n    if (!message.parentId) {\n      // This is a top-level message\n      // Get all replies in the thread by recursively finding children\n      const getAllReplies = parentId => {\n        const directReplies = messages.filter(m => m.parentId === parentId);\n        return directReplies.reduce((allReplies, reply) => {\n          return [...allReplies, reply, ...getAllReplies(reply.id)];\n        }, []);\n      };\n      acc.push({\n        message,\n        replies: getAllReplies(message.id)\n      });\n    }\n    return acc;\n  }, []);\n  const users = useSelector(state => {\n    var _state$chat;\n    return ((_state$chat = state.chat) === null || _state$chat === void 0 ? void 0 : _state$chat.users) || {};\n  });\n  const currentUser = useSelector(state => {\n    var _state$auth;\n    return (_state$auth = state.auth) === null || _state$auth === void 0 ? void 0 : _state$auth.user;\n  });\n  const isLoading = useSelector(state => {\n    var _state$messages2;\n    return ((_state$messages2 = state.messages) === null || _state$messages2 === void 0 ? void 0 : _state$messages2.loading) || false;\n  });\n  const handleDeleteMessage = async messageId => {\n    setMessageToDelete(messageId);\n    setIsDeleteModalOpen(true);\n  };\n  const handleReplyToMessage = message => {\n    setReplyToMessage(message);\n    setIsReplyModalOpen(true);\n  };\n  const handleSubmitReply = async content => {\n    if (!channelId || !replyToMessage) return;\n    try {\n      const reply = await createReply(replyToMessage.id, content);\n      const transformedReply = {\n        ...transformMessage(reply),\n        parentId: replyToMessage.id,\n        // Ensure parentId is set\n        isExpanded: false\n      };\n\n      // Update the parent message's reply count and expand it\n      const updatedParentMessage = {\n        ...replyToMessage,\n        replyCount: (replyToMessage.replyCount || 0) + 1,\n        isExpanded: true // Auto-expand when a new reply is added\n      };\n\n      // First add the new reply\n      dispatch(addMessage(transformedReply));\n\n      // Then update the parent message\n      dispatch(setMessages({\n        channelId,\n        messages: messages.map(msg => msg.id === replyToMessage.id ? updatedParentMessage : msg)\n      }));\n      toast.success('Reply sent successfully');\n    } catch (error) {\n      console.error('Failed to send reply:', error);\n      toast.error('Failed to send reply. Please try again.');\n    }\n  };\n  const handleToggleReplies = async messageId => {\n    if (!channelId) return;\n    const message = messages.find(msg => msg.id === messageId);\n    if (!message) return;\n    if (!message.isExpanded) {\n      try {\n        const replies = await getReplies(messageId);\n        const transformedReplies = replies.map(transformMessage);\n        dispatch(setReplies({\n          channelId,\n          messageId,\n          replies: transformedReplies\n        }));\n      } catch (error) {\n        console.error('Failed to fetch replies:', error);\n        toast.error('Failed to load replies. Please try again.');\n        return;\n      }\n    }\n    dispatch(toggleExpanded({\n      channelId,\n      messageId\n    }));\n  };\n  const confirmDelete = async () => {\n    if (!channelId || !messageToDelete) return;\n    try {\n      setDeletingMessageIds(prev => new Set(prev).add(messageToDelete));\n      await deleteMessageApi(messageToDelete);\n      dispatch(deleteMessage({\n        channelId,\n        messageId: messageToDelete\n      }));\n      toast.success('Message deleted successfully');\n    } catch (error) {\n      console.error('Failed to delete message:', error);\n      if (error instanceof Error) {\n        if (error.message.includes('403')) {\n          toast.error('You are not authorized to delete this message');\n        } else if (error.message.includes('404')) {\n          toast.error('Message not found');\n          // Remove from local state anyway since it doesn't exist\n          dispatch(deleteMessage({\n            channelId,\n            messageId: messageToDelete\n          }));\n        } else {\n          toast.error('Failed to delete message. Please try again.');\n        }\n      } else {\n        toast.error('An unexpected error occurred');\n      }\n    } finally {\n      setDeletingMessageIds(prev => {\n        const next = new Set(prev);\n        next.delete(messageToDelete);\n        return next;\n      });\n      setMessageToDelete(null);\n      setIsDeleteModalOpen(false);\n    }\n  };\n\n  // Initial message load\n  useEffect(() => {\n    if (channelId) {\n      console.log('Loading messages for channel:', channelId);\n      setIsLoadingMore(true);\n      setHasMoreMessages(true);\n      setError(null);\n      setShouldScrollToBottom(true);\n      getChannelMessages(channelId, MESSAGES_PER_PAGE).then(newMessages => {\n        console.log('Received messages from API:', newMessages);\n        if (newMessages.length < MESSAGES_PER_PAGE) {\n          setHasMoreMessages(false);\n        }\n        const transformedMessages = newMessages.map(transformMessage);\n        console.log('Transformed messages:', transformedMessages);\n        dispatch(setMessages({\n          channelId: String(channelId),\n          messages: transformedMessages\n        }));\n      }).catch(error => {\n        console.error('Failed to fetch messages:', error);\n        setError('Failed to load messages. Please try again.');\n      }).finally(() => {\n        setIsLoadingMore(false);\n      });\n    }\n  }, [channelId, dispatch]);\n\n  // Handle scroll to load more messages\n  const handleScroll = async e => {\n    const div = e.currentTarget;\n    const isNearTop = div.scrollTop <= 100;\n    const previousScrollHeight = div.scrollHeight;\n    if (isNearTop && !isLoadingMore && hasMoreMessages && channelId) {\n      setIsLoadingMore(true);\n      setError(null);\n      setShouldScrollToBottom(false);\n      try {\n        const olderMessages = await getChannelMessages(channelId, MESSAGES_PER_PAGE, messages.length);\n        if (olderMessages.length < MESSAGES_PER_PAGE) {\n          setHasMoreMessages(false);\n        }\n        if (olderMessages.length > 0) {\n          const transformedMessages = olderMessages.map(transformMessage);\n          const allMessages = [...transformedMessages, ...messages];\n          dispatch(setMessages({\n            channelId: String(channelId),\n            messages: allMessages\n          }));\n\n          // Maintain scroll position after loading older messages\n          requestAnimationFrame(() => {\n            if (containerRef.current) {\n              const newScrollHeight = containerRef.current.scrollHeight;\n              containerRef.current.scrollTop = newScrollHeight - previousScrollHeight;\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Failed to fetch older messages:', error);\n        setError('Failed to load more messages. Please try again.');\n      } finally {\n        setIsLoadingMore(false);\n      }\n    }\n  };\n\n  // Auto-scroll to bottom on new messages\n  useEffect(() => {\n    if (containerRef.current && messages.length > 0 && shouldScrollToBottom) {\n      const container = containerRef.current;\n      // Use requestAnimationFrame to ensure the scroll happens after the render\n      requestAnimationFrame(() => {\n        container.scrollTop = container.scrollHeight;\n      });\n    }\n  }, [messages, shouldScrollToBottom]);\n\n  // Reset scroll behavior when channel changes\n  useEffect(() => {\n    setShouldScrollToBottom(true);\n  }, [channelId]);\n  if (!channelId) {\n    return /*#__PURE__*/_jsxDEV(MessageListContainer, {\n      children: /*#__PURE__*/_jsxDEV(NoMessagesMessage, {\n        children: \"Select a channel to view messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MessageListContainer, {\n      ref: containerRef,\n      onScroll: handleScroll,\n      children: /*#__PURE__*/_jsxDEV(MessagesWrapper, {\n        children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 21\n        }, this), isConnecting && /*#__PURE__*/_jsxDEV(LoadingMessage, {\n          children: \"Connecting to chat...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 28\n        }, this), !hasMoreMessages && messages.length > 0 && /*#__PURE__*/_jsxDEV(LoadingMessage, {\n          children: \"You've reached the beginning of this conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this), isLoadingMore && /*#__PURE__*/_jsxDEV(LoadingMessage, {\n          children: \"Loading older messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 29\n        }, this), messages.length === 0 && !isLoading && !error && !isConnecting && /*#__PURE__*/_jsxDEV(NoMessagesMessage, {\n          children: \"No messages yet. Start the conversation!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this), messageThreads.map(({\n          message,\n          replies\n        }) => {\n          var _users$message$userId;\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ChatMessage, {\n              content: message.content,\n              sender: ((_users$message$userId = users[message.userId]) === null || _users$message$userId === void 0 ? void 0 : _users$message$userId.username) || message.userId,\n              timestamp: message.createdAt,\n              userId: message.userId,\n              currentUserId: currentUser === null || currentUser === void 0 ? void 0 : currentUser.id,\n              onDelete: () => handleDeleteMessage(message.id),\n              replyCount: replies.length,\n              isExpanded: message.isExpanded || false,\n              onToggleReplies: () => handleToggleReplies(message.id),\n              onReply: () => handleReplyToMessage(message)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this), replies.length > 0 && /*#__PURE__*/_jsxDEV(MessageReplies, {\n              parentId: message.id,\n              replies: replies,\n              isExpanded: message.isExpanded || false,\n              onToggleReplies: handleToggleReplies,\n              onDelete: handleDeleteMessage,\n              onReply: handleReplyToMessage,\n              currentUserId: currentUser === null || currentUser === void 0 ? void 0 : currentUser.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this)]\n          }, message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteMessageModal, {\n      isOpen: isDeleteModalOpen,\n      onClose: () => {\n        setIsDeleteModalOpen(false);\n        setMessageToDelete(null);\n      },\n      onConfirm: confirmDelete,\n      isDeleting: messageToDelete ? deletingMessageIds.has(messageToDelete) : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this), replyToMessage && /*#__PURE__*/_jsxDEV(ReplyModal, {\n      isOpen: isReplyModalOpen,\n      onClose: () => {\n        setIsReplyModalOpen(false);\n        setReplyToMessage(null);\n      },\n      onSubmit: handleSubmitReply,\n      parentMessage: replyToMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(MessageList, \"Chr1NdzRbrJ37EmI1gUV5RAK7tU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c6 = MessageList;\nexport default MessageList;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"MessageListContainer\");\n$RefreshReg$(_c2, \"MessagesWrapper\");\n$RefreshReg$(_c3, \"LoadingMessage\");\n$RefreshReg$(_c4, \"ErrorMessage\");\n$RefreshReg$(_c5, \"NoMessagesMessage\");\n$RefreshReg$(_c6, \"MessageList\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","useDispatch","useSelector","ChatMessage","DeleteMessageModal","ReplyModal","MessageReplies","getChannelMessages","deleteMessage","deleteMessageApi","getReplies","createReply","setMessages","setReplies","toggleExpanded","addMessage","wsService","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageListContainer","div","props","theme","colors","background","border","_c","MessagesWrapper","_c2","LoadingMessage","textSecondary","_c3","ErrorMessage","error","_c4","NoMessagesMessage","secondary","_c5","MESSAGES_PER_PAGE","transformMessage","msg","console","log","id","content","channel_id","sender_id","Error","transformed","String","channelId","userId","parentId","parent_id","undefined","reactions","attachments","createdAt","created_at","updatedAt","replyCount","reply_count","isExpanded","MessageList","_s","dispatch","containerRef","isLoadingMore","setIsLoadingMore","hasMoreMessages","setHasMoreMessages","setError","shouldScrollToBottom","setShouldScrollToBottom","isConnecting","setIsConnecting","deletingMessageIds","setDeletingMessageIds","Set","messageToDelete","setMessageToDelete","isDeleteModalOpen","setIsDeleteModalOpen","replyToMessage","setReplyToMessage","isReplyModalOpen","setIsReplyModalOpen","isMounted","errorHandler","connectToChannel","connect","message","code","onError","leaveChannel","messages","state","_state$messages","messagesByChannel","channelMessages","sortedMessages","sort","a","b","Date","getTime","messageThreads","reduce","acc","getAllReplies","directReplies","filter","m","allReplies","reply","push","replies","users","_state$chat","chat","currentUser","_state$auth","auth","user","isLoading","_state$messages2","loading","handleDeleteMessage","messageId","handleReplyToMessage","handleSubmitReply","transformedReply","updatedParentMessage","map","success","handleToggleReplies","find","transformedReplies","confirmDelete","prev","add","includes","next","delete","then","newMessages","length","transformedMessages","catch","finally","handleScroll","e","currentTarget","isNearTop","scrollTop","previousScrollHeight","scrollHeight","olderMessages","allMessages","requestAnimationFrame","current","newScrollHeight","container","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onScroll","_users$message$userId","sender","username","timestamp","currentUserId","onDelete","onToggleReplies","onReply","isOpen","onClose","onConfirm","isDeleting","has","onSubmit","parentMessage","_c6","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageList/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ChatMessage from '../../common/ChatMessage';\nimport DeleteMessageModal from '../DeleteMessageModal';\nimport ReplyModal from '../ReplyModal';\nimport MessageReplies from '../MessageReplies';\nimport { getChannelMessages, deleteMessage as deleteMessageApi, getReplies, createReply } from '../../../services/api/chat';\nimport { setMessages, deleteMessage, setReplies, toggleExpanded, addMessage } from '../../../store/messages/messagesSlice';\nimport { Message as ApiMessage, StoreMessage, RootState, User } from '../../../types';\nimport wsService from '../../../services/websocket';\nimport { toast } from 'react-toastify';\n\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  gap: 2px;\n  background: ${props => props.theme.colors.background};\n  border: 2px solid ${props => props.theme.colors.border};\n  font-family: 'Courier New', monospace;\n`;\n\nconst MessagesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: auto;\n  min-height: min-content;\n`;\n\nconst LoadingMessage = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.textSecondary};\n  font-family: 'Courier New', monospace;\n  font-style: italic;\n`;\n\nconst ErrorMessage = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.error};\n  font-family: 'Courier New', monospace;\n  border: 1px solid ${props => props.theme.colors.error};\n  margin: 8px;\n`;\n\nconst NoMessagesMessage = styled.div`\n  text-align: center;\n  padding: 20px;\n  color: ${props => props.theme.colors.secondary};\n  font-family: 'Courier New', monospace;\n  border: 1px dashed ${props => props.theme.colors.border};\n  margin: 16px;\n`;\n\ninterface MessageListProps {\n  channelId: string | null;\n}\n\nconst MESSAGES_PER_PAGE = 30;\n\n// Transform API message to store message format\nconst transformMessage = (msg: ApiMessage): StoreMessage => {\n  console.log('Transforming message:', msg);\n  if (!msg || !msg.id || !msg.content || !msg.channel_id || !msg.sender_id) {\n    console.error('Invalid message format:', msg);\n    throw new Error('Invalid message format');\n  }\n\n  const transformed: StoreMessage = {\n    id: String(msg.id),\n    content: msg.content,\n    channelId: String(msg.channel_id),\n    userId: String(msg.sender_id),\n    parentId: msg.parent_id ? String(msg.parent_id) : undefined,\n    reactions: [],\n    attachments: [],\n    createdAt: msg.created_at,\n    updatedAt: msg.created_at,\n    replyCount: msg.reply_count || 0,\n    isExpanded: false\n  };\n\n  console.log('Transformed message:', transformed);\n  return transformed;\n};\n\nconst MessageList: React.FC<MessageListProps> = ({ channelId }) => {\n  const dispatch = useDispatch();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [hasMoreMessages, setHasMoreMessages] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [shouldScrollToBottom, setShouldScrollToBottom] = useState(true);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [deletingMessageIds, setDeletingMessageIds] = useState<Set<string>>(new Set());\n  const [messageToDelete, setMessageToDelete] = useState<string | null>(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [replyToMessage, setReplyToMessage] = useState<StoreMessage | null>(null);\n  const [isReplyModalOpen, setIsReplyModalOpen] = useState(false);\n\n  // Connect to WebSocket when channel changes\n  useEffect(() => {\n    let isMounted = true;\n    let errorHandler: ((error: { code: string; message: string }) => void) | null = null;\n\n    const connectToChannel = async () => {\n      if (!channelId) return;\n\n      setIsConnecting(true);\n      setError(null);\n\n      try {\n        await wsService.connect(channelId);\n        if (isMounted) {\n          setError(null);\n        }\n      } catch (error) {\n        console.error('Failed to connect to channel:', error);\n        if (isMounted) {\n          if (error instanceof Error) {\n            setError(error.message);\n          } else {\n            setError('Failed to connect to channel. Messages may not update in real-time.');\n          }\n        }\n      } finally {\n        if (isMounted) {\n          setIsConnecting(false);\n        }\n      }\n    };\n\n    // Set up WebSocket error handler\n    errorHandler = (error: { code: string; message: string }) => {\n      if (!isMounted) return;\n      \n      console.error('WebSocket error:', error);\n      if (error.code === 'MAX_RECONNECT_ATTEMPTS') {\n        setError('Lost connection to chat. Please refresh the page.');\n      } else if (error.code === 'AUTH_FAILED') {\n        setError('Authentication failed. Please try logging in again.');\n      } else if (error.code === 'CHANNEL_ACCESS_DENIED') {\n        setError('You do not have access to this channel.');\n      } else {\n        setError(error.message || 'Connection error. Messages may not update in real-time.');\n      }\n    };\n\n    wsService.onError(errorHandler);\n    connectToChannel();\n\n    // Cleanup\n    return () => {\n      isMounted = false;\n      if (channelId) {\n        wsService.leaveChannel(channelId);\n      }\n    };\n  }, [channelId]);\n\n  const messages = useSelector((state: RootState) => {\n    if (!channelId || !state.messages?.messagesByChannel) {\n      return [];\n    }\n    const channelMessages = state.messages.messagesByChannel[String(channelId)] || [];\n    // Sort messages by timestamp, oldest first\n    const sortedMessages = [...channelMessages].sort((a, b) => \n      new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n    );\n    return sortedMessages;\n  });\n\n  // Organize messages into threads\n  const messageThreads = messages.reduce<{ message: StoreMessage; replies: StoreMessage[] }[]>((acc, message) => {\n    if (!message.parentId) {\n      // This is a top-level message\n      // Get all replies in the thread by recursively finding children\n      const getAllReplies = (parentId: string): StoreMessage[] => {\n        const directReplies = messages.filter(m => m.parentId === parentId);\n        return directReplies.reduce((allReplies, reply) => {\n          return [...allReplies, reply, ...getAllReplies(reply.id)];\n        }, [] as StoreMessage[]);\n      };\n\n      acc.push({\n        message,\n        replies: getAllReplies(message.id)\n      });\n    }\n    return acc;\n  }, []);\n\n  const users = useSelector((state: RootState) => state.chat?.users || {});\n  const currentUser = useSelector((state: RootState) => state.auth?.user);\n  const isLoading = useSelector((state: RootState) => state.messages?.loading || false);\n\n  const handleDeleteMessage = async (messageId: string) => {\n    setMessageToDelete(messageId);\n    setIsDeleteModalOpen(true);\n  };\n\n  const handleReplyToMessage = (message: StoreMessage) => {\n    setReplyToMessage(message);\n    setIsReplyModalOpen(true);\n  };\n\n  const handleSubmitReply = async (content: string) => {\n    if (!channelId || !replyToMessage) return;\n\n    try {\n      const reply = await createReply(replyToMessage.id, content);\n      const transformedReply = {\n        ...transformMessage(reply),\n        parentId: replyToMessage.id,  // Ensure parentId is set\n        isExpanded: false\n      };\n      \n      // Update the parent message's reply count and expand it\n      const updatedParentMessage = {\n        ...replyToMessage,\n        replyCount: (replyToMessage.replyCount || 0) + 1,\n        isExpanded: true  // Auto-expand when a new reply is added\n      };\n      \n      // First add the new reply\n      dispatch(addMessage(transformedReply));\n      \n      // Then update the parent message\n      dispatch(setMessages({\n        channelId,\n        messages: messages.map(msg => \n          msg.id === replyToMessage.id ? updatedParentMessage : msg\n        )\n      }));\n      \n      toast.success('Reply sent successfully');\n    } catch (error) {\n      console.error('Failed to send reply:', error);\n      toast.error('Failed to send reply. Please try again.');\n    }\n  };\n\n  const handleToggleReplies = async (messageId: string) => {\n    if (!channelId) return;\n\n    const message = messages.find(msg => msg.id === messageId);\n    if (!message) return;\n\n    if (!message.isExpanded) {\n      try {\n        const replies = await getReplies(messageId);\n        const transformedReplies = replies.map(transformMessage);\n        dispatch(setReplies({ channelId, messageId, replies: transformedReplies }));\n      } catch (error) {\n        console.error('Failed to fetch replies:', error);\n        toast.error('Failed to load replies. Please try again.');\n        return;\n      }\n    }\n\n    dispatch(toggleExpanded({ channelId, messageId }));\n  };\n\n  const confirmDelete = async () => {\n    if (!channelId || !messageToDelete) return;\n\n    try {\n      setDeletingMessageIds(prev => new Set(prev).add(messageToDelete));\n      await deleteMessageApi(messageToDelete);\n      dispatch(deleteMessage({ channelId, messageId: messageToDelete }));\n      toast.success('Message deleted successfully');\n    } catch (error) {\n      console.error('Failed to delete message:', error);\n      if (error instanceof Error) {\n        if (error.message.includes('403')) {\n          toast.error('You are not authorized to delete this message');\n        } else if (error.message.includes('404')) {\n          toast.error('Message not found');\n          // Remove from local state anyway since it doesn't exist\n          dispatch(deleteMessage({ channelId, messageId: messageToDelete }));\n        } else {\n          toast.error('Failed to delete message. Please try again.');\n        }\n      } else {\n        toast.error('An unexpected error occurred');\n      }\n    } finally {\n      setDeletingMessageIds(prev => {\n        const next = new Set(prev);\n        next.delete(messageToDelete);\n        return next;\n      });\n      setMessageToDelete(null);\n      setIsDeleteModalOpen(false);\n    }\n  };\n\n  // Initial message load\n  useEffect(() => {\n    if (channelId) {\n      console.log('Loading messages for channel:', channelId);\n      setIsLoadingMore(true);\n      setHasMoreMessages(true);\n      setError(null);\n      setShouldScrollToBottom(true);\n      \n      getChannelMessages(channelId, MESSAGES_PER_PAGE)\n        .then(newMessages => {\n          console.log('Received messages from API:', newMessages);\n          if (newMessages.length < MESSAGES_PER_PAGE) {\n            setHasMoreMessages(false);\n          }\n          const transformedMessages: StoreMessage[] = newMessages.map(transformMessage);\n          console.log('Transformed messages:', transformedMessages);\n          dispatch(setMessages({ \n            channelId: String(channelId), \n            messages: transformedMessages \n          }));\n        })\n        .catch(error => {\n          console.error('Failed to fetch messages:', error);\n          setError('Failed to load messages. Please try again.');\n        })\n        .finally(() => {\n          setIsLoadingMore(false);\n        });\n    }\n  }, [channelId, dispatch]);\n\n  // Handle scroll to load more messages\n  const handleScroll = async (e: React.UIEvent<HTMLDivElement>) => {\n    const div = e.currentTarget;\n    const isNearTop = div.scrollTop <= 100;\n    const previousScrollHeight = div.scrollHeight;\n    \n    if (isNearTop && !isLoadingMore && hasMoreMessages && channelId) {\n      setIsLoadingMore(true);\n      setError(null);\n      setShouldScrollToBottom(false);\n      \n      try {\n        const olderMessages = await getChannelMessages(\n          channelId, \n          MESSAGES_PER_PAGE,\n          messages.length\n        );\n        \n        if (olderMessages.length < MESSAGES_PER_PAGE) {\n          setHasMoreMessages(false);\n        }\n\n        if (olderMessages.length > 0) {\n          const transformedMessages: StoreMessage[] = olderMessages.map(transformMessage);\n          const allMessages: StoreMessage[] = [...transformedMessages, ...messages];\n          dispatch(setMessages({ \n            channelId: String(channelId), \n            messages: allMessages\n          }));\n          \n          // Maintain scroll position after loading older messages\n          requestAnimationFrame(() => {\n            if (containerRef.current) {\n              const newScrollHeight = containerRef.current.scrollHeight;\n              containerRef.current.scrollTop = newScrollHeight - previousScrollHeight;\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Failed to fetch older messages:', error);\n        setError('Failed to load more messages. Please try again.');\n      } finally {\n        setIsLoadingMore(false);\n      }\n    }\n  };\n\n  // Auto-scroll to bottom on new messages\n  useEffect(() => {\n    if (containerRef.current && messages.length > 0 && shouldScrollToBottom) {\n      const container = containerRef.current;\n      // Use requestAnimationFrame to ensure the scroll happens after the render\n      requestAnimationFrame(() => {\n        container.scrollTop = container.scrollHeight;\n      });\n    }\n  }, [messages, shouldScrollToBottom]);\n\n  // Reset scroll behavior when channel changes\n  useEffect(() => {\n    setShouldScrollToBottom(true);\n  }, [channelId]);\n\n  if (!channelId) {\n    return (\n      <MessageListContainer>\n        <NoMessagesMessage>\n          Select a channel to view messages\n        </NoMessagesMessage>\n      </MessageListContainer>\n    );\n  }\n\n  return (\n    <>\n      <MessageListContainer ref={containerRef} onScroll={handleScroll}>\n        <MessagesWrapper>\n          {error && <ErrorMessage>{error}</ErrorMessage>}\n          {isConnecting && <LoadingMessage>Connecting to chat...</LoadingMessage>}\n          {!hasMoreMessages && messages.length > 0 && (\n            <LoadingMessage>You've reached the beginning of this conversation</LoadingMessage>\n          )}\n          {isLoadingMore && <LoadingMessage>Loading older messages...</LoadingMessage>}\n          {messages.length === 0 && !isLoading && !error && !isConnecting && (\n            <NoMessagesMessage>No messages yet. Start the conversation!</NoMessagesMessage>\n          )}\n\n          {messageThreads.map(({ message, replies }) => (\n            <React.Fragment key={message.id}>\n              <ChatMessage\n                content={message.content}\n                sender={users[message.userId]?.username || message.userId}\n                timestamp={message.createdAt}\n                userId={message.userId}\n                currentUserId={currentUser?.id}\n                onDelete={() => handleDeleteMessage(message.id)}\n                replyCount={replies.length}\n                isExpanded={message.isExpanded || false}\n                onToggleReplies={() => handleToggleReplies(message.id)}\n                onReply={() => handleReplyToMessage(message)}\n              />\n              {replies.length > 0 && (\n                <MessageReplies\n                  parentId={message.id}\n                  replies={replies}\n                  isExpanded={message.isExpanded || false}\n                  onToggleReplies={handleToggleReplies}\n                  onDelete={handleDeleteMessage}\n                  onReply={handleReplyToMessage}\n                  currentUserId={currentUser?.id}\n                />\n              )}\n            </React.Fragment>\n          ))}\n        </MessagesWrapper>\n      </MessageListContainer>\n\n      <DeleteMessageModal\n        isOpen={isDeleteModalOpen}\n        onClose={() => {\n          setIsDeleteModalOpen(false);\n          setMessageToDelete(null);\n        }}\n        onConfirm={confirmDelete}\n        isDeleting={messageToDelete ? deletingMessageIds.has(messageToDelete) : false}\n      />\n      {replyToMessage && (\n        <ReplyModal\n          isOpen={isReplyModalOpen}\n          onClose={() => {\n            setIsReplyModalOpen(false);\n            setReplyToMessage(null);\n          }}\n          onSubmit={handleSubmitReply}\n          parentMessage={replyToMessage}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MessageList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}