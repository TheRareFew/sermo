{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageReplies\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Message from '../Message';\nimport { deleteMessage as deleteMessageAction, setReplies } from '../../../store/messages/messagesSlice';\nimport { deleteMessage as deleteMessageApi, getReplies } from '../../../services/api/chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RepliesContainer = styled.div`\n  display: ${props => props.isExpanded ? 'block' : 'none'};\n  margin-left: 24px;\n  position: relative;\n  border-left: 2px solid ${props => props.theme.colors.border};\n  margin-top: 2px;\n  margin-bottom: 2px;\n  padding-left: 8px;\n\n  &:before {\n    content: '';\n    position: absolute;\n    left: -2px;\n    top: 0;\n    width: 8px;\n    height: 2px;\n    background-color: ${props => props.theme.colors.border};\n  }\n`;\n_c = RepliesContainer;\nconst ReplyWrapper = styled.div`\n  position: relative;\n  padding: 2px 0;\n  background-color: ${props => props.theme.colors.backgroundDark};\n\n  &:hover {\n    background-color: ${props => props.theme.colors.hover};\n  }\n\n  &:last-child {\n    &:after {\n      content: '';\n      position: absolute;\n      left: -10px;\n      bottom: 50%;\n      width: 8px;\n      height: 2px;\n      background-color: ${props => props.theme.colors.border};\n    }\n  }\n`;\n_c2 = ReplyWrapper;\nconst MessageReplies = ({\n  parentId\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    replies,\n    users,\n    currentUser,\n    activeChannelId,\n    parentMessage\n  } = useSelector(state => {\n    const allMessages = Object.values(state.messages.messagesByChannel).flat();\n    const parent = allMessages.find(msg => msg.id === parentId);\n    return {\n      replies: allMessages.filter(msg => msg.parentId === parentId).sort((a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()),\n      users: state.chat.users,\n      currentUser: state.auth.user,\n      activeChannelId: state.chat.activeChannelId,\n      parentMessage: parent\n    };\n  });\n  useEffect(() => {\n    const loadReplies = async () => {\n      if (!activeChannelId) return;\n      try {\n        const fetchedReplies = await getReplies(parentId);\n        // Transform the replies to match our store format\n        const transformedReplies = fetchedReplies.map(reply => ({\n          id: reply.id.toString(),\n          content: reply.content,\n          channelId: reply.channel_id.toString(),\n          userId: reply.sender_id.toString(),\n          reactions: [],\n          attachments: [],\n          createdAt: reply.created_at,\n          updatedAt: reply.created_at,\n          parentId: parentId,\n          replyCount: 0,\n          isExpanded: false\n        }));\n        dispatch(setReplies({\n          channelId: activeChannelId,\n          messageId: parentId,\n          replies: transformedReplies\n        }));\n      } catch (error) {\n        console.error('Error loading replies:', error);\n      }\n    };\n    loadReplies();\n  }, [parentId, activeChannelId, dispatch]);\n  const handleDelete = async messageId => {\n    if (!activeChannelId) return;\n    try {\n      await deleteMessageApi(messageId);\n      dispatch(deleteMessageAction({\n        channelId: activeChannelId,\n        messageId\n      }));\n    } catch (error) {\n      console.error('Error deleting reply:', error);\n    }\n  };\n  const handleToggleReplies = () => {\n    // No-op for replies\n  };\n  const handleReply = () => {\n    // No-op for replies\n  };\n  if (!parentMessage || replies.length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(RepliesContainer, {\n    isExpanded: parentMessage.isExpanded || false,\n    children: replies.map(reply => {\n      var _users$reply$userId;\n      return /*#__PURE__*/_jsxDEV(ReplyWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          content: reply.content,\n          sender: ((_users$reply$userId = users[reply.userId]) === null || _users$reply$userId === void 0 ? void 0 : _users$reply$userId.username) || reply.userId,\n          timestamp: reply.createdAt,\n          userId: reply.userId,\n          currentUserId: currentUser === null || currentUser === void 0 ? void 0 : currentUser.id,\n          onDelete: () => handleDelete(reply.id),\n          replyCount: 0,\n          isExpanded: false,\n          onToggleReplies: handleToggleReplies,\n          onReply: handleReply,\n          isReply: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, reply.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageReplies, \"nVUt3TCSTXF/q6iIhMeXBF82IIY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c3 = MessageReplies;\nexport default MessageReplies;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"RepliesContainer\");\n$RefreshReg$(_c2, \"ReplyWrapper\");\n$RefreshReg$(_c3, \"MessageReplies\");","map":{"version":3,"names":["React","useEffect","styled","useSelector","useDispatch","Message","deleteMessage","deleteMessageAction","setReplies","deleteMessageApi","getReplies","jsxDEV","_jsxDEV","RepliesContainer","div","props","isExpanded","theme","colors","border","_c","ReplyWrapper","backgroundDark","hover","_c2","MessageReplies","parentId","_s","dispatch","replies","users","currentUser","activeChannelId","parentMessage","state","allMessages","Object","values","messages","messagesByChannel","flat","parent","find","msg","id","filter","sort","a","b","Date","createdAt","getTime","chat","auth","user","loadReplies","fetchedReplies","transformedReplies","map","reply","toString","content","channelId","channel_id","userId","sender_id","reactions","attachments","created_at","updatedAt","replyCount","messageId","error","console","handleDelete","handleToggleReplies","handleReply","length","children","_users$reply$userId","sender","username","timestamp","currentUserId","onDelete","onToggleReplies","onReply","isReply","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageReplies/index.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { StoreMessage, RootState } from '../../../types';\nimport Message from '../Message';\nimport { deleteMessage as deleteMessageAction, setReplies } from '../../../store/messages/messagesSlice';\nimport { deleteMessage as deleteMessageApi, getReplies } from '../../../services/api/chat';\n\ninterface MessageRepliesProps {\n  parentId: string;\n}\n\nconst RepliesContainer = styled.div<{ isExpanded: boolean }>`\n  display: ${props => props.isExpanded ? 'block' : 'none'};\n  margin-left: 24px;\n  position: relative;\n  border-left: 2px solid ${props => props.theme.colors.border};\n  margin-top: 2px;\n  margin-bottom: 2px;\n  padding-left: 8px;\n\n  &:before {\n    content: '';\n    position: absolute;\n    left: -2px;\n    top: 0;\n    width: 8px;\n    height: 2px;\n    background-color: ${props => props.theme.colors.border};\n  }\n`;\n\nconst ReplyWrapper = styled.div`\n  position: relative;\n  padding: 2px 0;\n  background-color: ${props => props.theme.colors.backgroundDark};\n\n  &:hover {\n    background-color: ${props => props.theme.colors.hover};\n  }\n\n  &:last-child {\n    &:after {\n      content: '';\n      position: absolute;\n      left: -10px;\n      bottom: 50%;\n      width: 8px;\n      height: 2px;\n      background-color: ${props => props.theme.colors.border};\n    }\n  }\n`;\n\nconst MessageReplies: React.FC<MessageRepliesProps> = ({ parentId }) => {\n  const dispatch = useDispatch();\n  const { replies, users, currentUser, activeChannelId, parentMessage } = useSelector((state: RootState) => {\n    const allMessages = Object.values(state.messages.messagesByChannel).flat();\n    const parent = allMessages.find(msg => msg.id === parentId);\n    return {\n      replies: allMessages\n        .filter((msg: StoreMessage) => msg.parentId === parentId)\n        .sort((a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()),\n      users: state.chat.users,\n      currentUser: state.auth.user,\n      activeChannelId: state.chat.activeChannelId,\n      parentMessage: parent\n    };\n  });\n\n  useEffect(() => {\n    const loadReplies = async () => {\n      if (!activeChannelId) return;\n      \n      try {\n        const fetchedReplies = await getReplies(parentId);\n        // Transform the replies to match our store format\n        const transformedReplies = fetchedReplies.map(reply => ({\n          id: reply.id.toString(),\n          content: reply.content,\n          channelId: reply.channel_id.toString(),\n          userId: reply.sender_id.toString(),\n          reactions: [],\n          attachments: [],\n          createdAt: reply.created_at,\n          updatedAt: reply.created_at,\n          parentId: parentId,\n          replyCount: 0,\n          isExpanded: false\n        }));\n        \n        dispatch(setReplies({\n          channelId: activeChannelId,\n          messageId: parentId,\n          replies: transformedReplies\n        }));\n      } catch (error) {\n        console.error('Error loading replies:', error);\n      }\n    };\n\n    loadReplies();\n  }, [parentId, activeChannelId, dispatch]);\n\n  const handleDelete = async (messageId: string) => {\n    if (!activeChannelId) return;\n    \n    try {\n      await deleteMessageApi(messageId);\n      dispatch(deleteMessageAction({ channelId: activeChannelId, messageId }));\n    } catch (error) {\n      console.error('Error deleting reply:', error);\n    }\n  };\n\n  const handleToggleReplies = () => {\n    // No-op for replies\n  };\n\n  const handleReply = () => {\n    // No-op for replies\n  };\n\n  if (!parentMessage || replies.length === 0) return null;\n\n  return (\n    <RepliesContainer isExpanded={parentMessage.isExpanded || false}>\n      {replies.map((reply) => (\n        <ReplyWrapper key={reply.id}>\n          <Message\n            content={reply.content}\n            sender={users[reply.userId]?.username || reply.userId}\n            timestamp={reply.createdAt}\n            userId={reply.userId}\n            currentUserId={currentUser?.id}\n            onDelete={() => handleDelete(reply.id)}\n            replyCount={0}\n            isExpanded={false}\n            onToggleReplies={handleToggleReplies}\n            onReply={handleReply}\n            isReply={true}\n          />\n        </ReplyWrapper>\n      ))}\n    </RepliesContainer>\n  );\n};\n\nexport default MessageReplies; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}