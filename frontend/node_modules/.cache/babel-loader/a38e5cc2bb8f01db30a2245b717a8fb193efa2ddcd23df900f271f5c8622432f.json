{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { getAuthToken } from '../../services/api/auth';\nconst initialState = {\n  isAuthenticated: !!getAuthToken(),\n  user: null,\n  token: getAuthToken(),\n  loading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    // Login actions\n    loginStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.loading = false;\n      state.error = null;\n    },\n    loginFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    // Signup actions\n    signupStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    signupSuccess: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.loading = false;\n      state.error = null;\n    },\n    signupFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    // Logout action\n    logout: state => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n      state.loading = false;\n      state.error = null;\n    },\n    // Clear error action\n    clearError: state => {\n      state.error = null;\n    },\n    // Update user status\n    updateUserStatus: (state, action) => {\n      if (state.user) {\n        state.user.status = action.payload.status;\n      }\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  signupStart,\n  signupSuccess,\n  signupFailure,\n  logout,\n  clearError,\n  updateUserStatus\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","getAuthToken","initialState","isAuthenticated","user","token","loading","error","authSlice","name","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","signupStart","signupSuccess","signupFailure","logout","clearError","updateUserStatus","status","actions","reducer"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/store/auth/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AuthState, User } from '../types';\r\nimport { getAuthToken } from '../../services/api/auth';\r\n\r\nconst initialState: AuthState = {\r\n  isAuthenticated: !!getAuthToken(),\r\n  user: null,\r\n  token: getAuthToken(),\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    // Login actions\r\n    loginStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    loginSuccess: (state, action: PayloadAction<{ user: User; token: string }>) => {\r\n      state.isAuthenticated = true;\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    loginFailure: (state, action: PayloadAction<string>) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // Signup actions\r\n    signupStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    signupSuccess: (state, action: PayloadAction<{ user: User; token: string }>) => {\r\n      state.isAuthenticated = true;\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    signupFailure: (state, action: PayloadAction<string>) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // Logout action\r\n    logout: (state) => {\r\n      state.isAuthenticated = false;\r\n      state.user = null;\r\n      state.token = null;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n\r\n    // Clear error action\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n\r\n    // Update user status\r\n    updateUserStatus: (state, action: PayloadAction<{ status: User['status'] }>) => {\r\n      if (state.user) {\r\n        state.user.status = action.payload.status;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  loginStart,\r\n  loginSuccess,\r\n  loginFailure,\r\n  signupStart,\r\n  signupSuccess,\r\n  signupFailure,\r\n  logout,\r\n  clearError,\r\n  updateUserStatus,\r\n} = authSlice.actions;\r\n\r\nexport default authSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAE7D,SAASC,YAAY,QAAQ,yBAAyB;AAEtD,MAAMC,YAAuB,GAAG;EAC9BC,eAAe,EAAE,CAAC,CAACF,YAAY,CAAC,CAAC;EACjCG,IAAI,EAAE,IAAI;EACVC,KAAK,EAAEJ,YAAY,CAAC,CAAC;EACrBK,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGR,WAAW,CAAC;EAC5BS,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACR;IACAC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDM,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAAoD,KAAK;MAC7EF,KAAK,CAACT,eAAe,GAAG,IAAI;MAC5BS,KAAK,CAACR,IAAI,GAAGU,MAAM,CAACC,OAAO,CAACX,IAAI;MAChCQ,KAAK,CAACP,KAAK,GAAGS,MAAM,CAACC,OAAO,CAACV,KAAK;MAClCO,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDS,YAAY,EAAEA,CAACJ,KAAK,EAAEE,MAA6B,KAAK;MACtDF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC;IAED;IACAE,WAAW,EAAGL,KAAK,IAAK;MACtBA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDW,aAAa,EAAEA,CAACN,KAAK,EAAEE,MAAoD,KAAK;MAC9EF,KAAK,CAACT,eAAe,GAAG,IAAI;MAC5BS,KAAK,CAACR,IAAI,GAAGU,MAAM,CAACC,OAAO,CAACX,IAAI;MAChCQ,KAAK,CAACP,KAAK,GAAGS,MAAM,CAACC,OAAO,CAACV,KAAK;MAClCO,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDY,aAAa,EAAEA,CAACP,KAAK,EAAEE,MAA6B,KAAK;MACvDF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC;IAED;IACAK,MAAM,EAAGR,KAAK,IAAK;MACjBA,KAAK,CAACT,eAAe,GAAG,KAAK;MAC7BS,KAAK,CAACR,IAAI,GAAG,IAAI;MACjBQ,KAAK,CAACP,KAAK,GAAG,IAAI;MAClBO,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IAED;IACAc,UAAU,EAAGT,KAAK,IAAK;MACrBA,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IAED;IACAe,gBAAgB,EAAEA,CAACV,KAAK,EAAEE,MAAiD,KAAK;MAC9E,IAAIF,KAAK,CAACR,IAAI,EAAE;QACdQ,KAAK,CAACR,IAAI,CAACmB,MAAM,GAAGT,MAAM,CAACC,OAAO,CAACQ,MAAM;MAC3C;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXZ,UAAU;EACVE,YAAY;EACZG,YAAY;EACZC,WAAW;EACXC,aAAa;EACbC,aAAa;EACbC,MAAM;EACNC,UAAU;EACVC;AACF,CAAC,GAAGd,SAAS,CAACgB,OAAO;AAErB,eAAehB,SAAS,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}