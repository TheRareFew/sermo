{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageReplies\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Message from '../Message';\nimport { deleteMessage as deleteMessageAction } from '../../../store/messages/messagesSlice';\nimport { deleteMessage as deleteMessageApi, getReplies } from '../../../services/api/chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReplyWrapper = styled.div`\n  margin-left: 24px;\n  border-left: 2px solid ${props => props.theme.colors.border};\n  padding-left: 8px;\n`;\n_c = ReplyWrapper;\nconst MessageReplies = ({\n  parentId\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    replies,\n    users,\n    currentUser,\n    activeChannelId\n  } = useSelector(state => ({\n    replies: Object.values(state.messages.messagesByChannel).flat().filter(msg => msg.parentId === parentId),\n    users: state.chat.users,\n    currentUser: state.auth.user,\n    activeChannelId: state.chat.activeChannelId\n  }));\n  useEffect(() => {\n    const loadReplies = async () => {\n      try {\n        await getReplies(parentId);\n      } catch (error) {\n        console.error('Error loading replies:', error);\n      }\n    };\n    loadReplies();\n  }, [parentId]);\n  const handleDelete = async messageId => {\n    if (!activeChannelId) return;\n    try {\n      await deleteMessageApi(messageId);\n      dispatch(deleteMessageAction({\n        channelId: activeChannelId,\n        messageId\n      }));\n    } catch (error) {\n      console.error('Error deleting reply:', error);\n    }\n  };\n  const handleToggleReplies = () => {\n    // No-op for replies\n  };\n  const handleReply = () => {\n    // No-op for replies\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: replies.map(reply => {\n      var _users$reply$userId;\n      return /*#__PURE__*/_jsxDEV(ReplyWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          content: reply.content,\n          sender: ((_users$reply$userId = users[reply.userId]) === null || _users$reply$userId === void 0 ? void 0 : _users$reply$userId.username) || reply.userId,\n          timestamp: reply.createdAt,\n          userId: reply.userId,\n          currentUserId: currentUser === null || currentUser === void 0 ? void 0 : currentUser.id,\n          onDelete: () => handleDelete(reply.id),\n          replyCount: 0,\n          isExpanded: false,\n          onToggleReplies: handleToggleReplies,\n          onReply: handleReply,\n          isReply: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, reply.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageReplies, \"rs3c9HhD7XmndDQLccs/0ieaV+g=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c2 = MessageReplies;\nexport default MessageReplies;\nvar _c, _c2;\n$RefreshReg$(_c, \"ReplyWrapper\");\n$RefreshReg$(_c2, \"MessageReplies\");","map":{"version":3,"names":["React","useEffect","styled","useSelector","useDispatch","Message","deleteMessage","deleteMessageAction","deleteMessageApi","getReplies","jsxDEV","_jsxDEV","ReplyWrapper","div","props","theme","colors","border","_c","MessageReplies","parentId","_s","dispatch","replies","users","currentUser","activeChannelId","state","Object","values","messages","messagesByChannel","flat","filter","msg","chat","auth","user","loadReplies","error","console","handleDelete","messageId","channelId","handleToggleReplies","handleReply","children","map","reply","_users$reply$userId","content","sender","userId","username","timestamp","createdAt","currentUserId","id","onDelete","replyCount","isExpanded","onToggleReplies","onReply","isReply","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageReplies/index.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { StoreMessage, RootState } from '../../../types';\nimport Message from '../Message';\nimport { deleteMessage as deleteMessageAction } from '../../../store/messages/messagesSlice';\nimport { deleteMessage as deleteMessageApi, getReplies } from '../../../services/api/chat';\n\ninterface MessageRepliesProps {\n  parentId: string;\n}\n\nconst ReplyWrapper = styled.div`\n  margin-left: 24px;\n  border-left: 2px solid ${props => props.theme.colors.border};\n  padding-left: 8px;\n`;\n\nconst MessageReplies: React.FC<MessageRepliesProps> = ({ parentId }) => {\n  const dispatch = useDispatch();\n  const { replies, users, currentUser, activeChannelId } = useSelector((state: RootState) => ({\n    replies: Object.values(state.messages.messagesByChannel)\n      .flat()\n      .filter((msg: StoreMessage) => msg.parentId === parentId),\n    users: state.chat.users,\n    currentUser: state.auth.user,\n    activeChannelId: state.chat.activeChannelId\n  }));\n\n  useEffect(() => {\n    const loadReplies = async () => {\n      try {\n        await getReplies(parentId);\n      } catch (error) {\n        console.error('Error loading replies:', error);\n      }\n    };\n\n    loadReplies();\n  }, [parentId]);\n\n  const handleDelete = async (messageId: string) => {\n    if (!activeChannelId) return;\n    \n    try {\n      await deleteMessageApi(messageId);\n      dispatch(deleteMessageAction({ channelId: activeChannelId, messageId }));\n    } catch (error) {\n      console.error('Error deleting reply:', error);\n    }\n  };\n\n  const handleToggleReplies = () => {\n    // No-op for replies\n  };\n\n  const handleReply = () => {\n    // No-op for replies\n  };\n\n  return (\n    <div>\n      {replies.map((reply) => (\n        <ReplyWrapper key={reply.id}>\n          <Message\n            content={reply.content}\n            sender={users[reply.userId]?.username || reply.userId}\n            timestamp={reply.createdAt}\n            userId={reply.userId}\n            currentUserId={currentUser?.id}\n            onDelete={() => handleDelete(reply.id)}\n            replyCount={0}\n            isExpanded={false}\n            onToggleReplies={handleToggleReplies}\n            onReply={handleReply}\n            isReply={true}\n          />\n        </ReplyWrapper>\n      ))}\n    </div>\n  );\n};\n\nexport default MessageReplies; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}