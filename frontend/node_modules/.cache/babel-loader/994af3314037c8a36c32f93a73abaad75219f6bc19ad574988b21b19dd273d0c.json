{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport ChatMessage from '../../common/ChatMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n_c = MessageListContainer;\nconst MessageWrapper = styled.div`\n  transition: background-color 0.3s ease;\n  padding: 4px;\n  border-radius: 4px;\n  background-color: ${props => props.$isSelected ? '#3a3a3a' : 'transparent'};\n`;\n_c2 = MessageWrapper;\nconst MessageList = ({\n  messages,\n  selectedMessageId\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const selectedMessageRef = useRef(null);\n  useEffect(() => {\n    // Scroll to bottom on initial load\n    if (containerRef.current) {\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\n    }\n  }, []);\n  useEffect(() => {\n    // Scroll to selected message\n    if (selectedMessageId && selectedMessageRef.current) {\n      selectedMessageRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center'\n      });\n    }\n  }, [selectedMessageId]);\n  return /*#__PURE__*/_jsxDEV(MessageListContainer, {\n    ref: containerRef,\n    children: messages.map(message => /*#__PURE__*/_jsxDEV(MessageWrapper, {\n      $isSelected: message.id === selectedMessageId,\n      ref: message.id === selectedMessageId ? selectedMessageRef : undefined,\n      children: /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageList, \"lM+6dKXLykOKYvC/CO+WEr9rtAk=\");\n_c3 = MessageList;\nexport default MessageList;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MessageListContainer\");\n$RefreshReg$(_c2, \"MessageWrapper\");\n$RefreshReg$(_c3, \"MessageList\");","map":{"version":3,"names":["React","useEffect","useRef","styled","ChatMessage","jsxDEV","_jsxDEV","MessageListContainer","div","_c","MessageWrapper","props","$isSelected","_c2","MessageList","messages","selectedMessageId","_s","containerRef","selectedMessageRef","current","scrollTop","scrollHeight","scrollIntoView","behavior","block","ref","children","map","message","id","undefined","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageList/index.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { StoreMessage } from '../../../types';\nimport ChatMessage from '../../common/ChatMessage';\n\ninterface MessageListProps {\n  messages: StoreMessage[];\n  selectedMessageId?: string | null;\n}\n\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst MessageWrapper = styled.div<{ $isSelected?: boolean }>`\n  transition: background-color 0.3s ease;\n  padding: 4px;\n  border-radius: 4px;\n  background-color: ${props => props.$isSelected ? '#3a3a3a' : 'transparent'};\n`;\n\nconst MessageList: React.FC<MessageListProps> = ({ messages, selectedMessageId }) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const selectedMessageRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    // Scroll to bottom on initial load\n    if (containerRef.current) {\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\n    }\n  }, []);\n\n  useEffect(() => {\n    // Scroll to selected message\n    if (selectedMessageId && selectedMessageRef.current) {\n      selectedMessageRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center'\n      });\n    }\n  }, [selectedMessageId]);\n\n  return (\n    <MessageListContainer ref={containerRef}>\n      {messages.map(message => (\n        <MessageWrapper\n          key={message.id}\n          $isSelected={message.id === selectedMessageId}\n          ref={message.id === selectedMessageId ? selectedMessageRef : undefined}\n        >\n          <ChatMessage message={message} />\n        </MessageWrapper>\n      ))}\n    </MessageListContainer>\n  );\n};\n\nexport default MessageList; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOnD,MAAMC,oBAAoB,GAAGJ,MAAM,CAACK,GAAG;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAPIF,oBAAoB;AAS1B,MAAMG,cAAc,GAAGP,MAAM,CAACK,GAA8B;AAC5D;AACA;AACA;AACA,sBAAsBG,KAAK,IAAIA,KAAK,CAACC,WAAW,GAAG,SAAS,GAAG,aAAa;AAC5E,CAAC;AAACC,GAAA,GALIH,cAAc;AAOpB,MAAMI,WAAuC,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EACnF,MAAMC,YAAY,GAAGhB,MAAM,CAAiB,IAAI,CAAC;EACjD,MAAMiB,kBAAkB,GAAGjB,MAAM,CAAiB,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACd;IACA,IAAIiB,YAAY,CAACE,OAAO,EAAE;MACxBF,YAAY,CAACE,OAAO,CAACC,SAAS,GAAGH,YAAY,CAACE,OAAO,CAACE,YAAY;IACpE;EACF,CAAC,EAAE,EAAE,CAAC;EAENrB,SAAS,CAAC,MAAM;IACd;IACA,IAAIe,iBAAiB,IAAIG,kBAAkB,CAACC,OAAO,EAAE;MACnDD,kBAAkB,CAACC,OAAO,CAACG,cAAc,CAAC;QACxCC,QAAQ,EAAE,QAAQ;QAClBC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACT,iBAAiB,CAAC,CAAC;EAEvB,oBACEV,OAAA,CAACC,oBAAoB;IAACmB,GAAG,EAAER,YAAa;IAAAS,QAAA,EACrCZ,QAAQ,CAACa,GAAG,CAACC,OAAO,iBACnBvB,OAAA,CAACI,cAAc;MAEbE,WAAW,EAAEiB,OAAO,CAACC,EAAE,KAAKd,iBAAkB;MAC9CU,GAAG,EAAEG,OAAO,CAACC,EAAE,KAAKd,iBAAiB,GAAGG,kBAAkB,GAAGY,SAAU;MAAAJ,QAAA,eAEvErB,OAAA,CAACF,WAAW;QAACyB,OAAO,EAAEA;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GAJ5BN,OAAO,CAACC,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKD,CACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAE3B,CAAC;AAAClB,EAAA,CAlCIH,WAAuC;AAAAsB,GAAA,GAAvCtB,WAAuC;AAoC7C,eAAeA,WAAW;AAAC,IAAAL,EAAA,EAAAI,GAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAA5B,EAAA;AAAA4B,YAAA,CAAAxB,GAAA;AAAAwB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}