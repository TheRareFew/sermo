{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\CreateChannelModal\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport Modal from '../../common/Modal';\nimport Input from '../../common/Input';\nimport Button from '../../common/Button';\nimport { createChannel } from '../../../services/api/chat';\nimport { addChannel, setActiveChannel } from '../../../store/chat/chatSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n_c = Form;\nconst Description = styled.div`\n  font-family: 'Courier New', monospace;\n  margin-bottom: 16px;\n  color: ${props => props.theme.colors.text};\n`;\n_c2 = Description;\nconst ErrorMessage = styled.div`\n  color: ${props => props.theme.colors.error};\n  font-family: 'Courier New', monospace;\n  margin-top: 8px;\n`;\n_c3 = ErrorMessage;\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 8px;\n  justify-content: flex-end;\n  margin-top: 8px;\n`;\n_c4 = ButtonGroup;\nconst CreateChannelModal = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    setIsLoading(true);\n    try {\n      // Validate channel name\n      const trimmedName = name.trim().toLowerCase();\n      if (!trimmedName) {\n        throw new Error('Channel name is required');\n      }\n      if (trimmedName.length < 2) {\n        throw new Error('Channel name must be at least 2 characters long');\n      }\n      if (!/^[a-z0-9-_]+$/.test(trimmedName)) {\n        throw new Error('Channel name can only contain letters, numbers, hyphens, and underscores');\n      }\n\n      // Create channel\n      const newChannel = await createChannel(trimmedName, description.trim() || undefined);\n      dispatch(addChannel(newChannel));\n      dispatch(setActiveChannel(newChannel.id));\n      onClose();\n      setName('');\n      setDescription('');\n    } catch (error) {\n      setError(error instanceof Error ? error.message : 'Failed to create channel');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleClose = () => {\n    setName('');\n    setDescription('');\n    setError(null);\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onClose: handleClose,\n    title: \"Create Channel\",\n    children: [/*#__PURE__*/_jsxDEV(Description, {\n      children: \"Create a new channel for your team to collaborate in. Channel names must be lowercase and can only contain letters, numbers, hyphens, and underscores.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Channel Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        placeholder: \"e.g., general, random, project-x\",\n        fullWidth: true,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Description (Optional)\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"What's this channel about?\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          variant: \"secondary\",\n          onClick: handleClose,\n          disabled: isLoading,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: isLoading,\n          children: isLoading ? 'Creating...' : 'Create Channel'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateChannelModal, \"zRyaioc/EuURNUzjufvjwGSCu7Y=\", false, function () {\n  return [useDispatch];\n});\n_c5 = CreateChannelModal;\nexport default CreateChannelModal;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"Description\");\n$RefreshReg$(_c3, \"ErrorMessage\");\n$RefreshReg$(_c4, \"ButtonGroup\");\n$RefreshReg$(_c5, \"CreateChannelModal\");","map":{"version":3,"names":["React","useState","styled","useDispatch","Modal","Input","Button","createChannel","addChannel","setActiveChannel","jsxDEV","_jsxDEV","Form","form","_c","Description","div","props","theme","colors","text","_c2","ErrorMessage","error","_c3","ButtonGroup","_c4","CreateChannelModal","isOpen","onClose","_s","dispatch","name","setName","description","setDescription","setError","isLoading","setIsLoading","handleSubmit","e","preventDefault","trimmedName","trim","toLowerCase","Error","length","test","newChannel","undefined","id","message","handleClose","title","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","value","onChange","target","placeholder","fullWidth","autoFocus","type","variant","onClick","disabled","_c5","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/CreateChannelModal/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport Modal from '../../common/Modal';\r\nimport Input from '../../common/Input';\r\nimport Button from '../../common/Button';\r\nimport { createChannel } from '../../../services/api/chat';\r\nimport { addChannel, setActiveChannel } from '../../../store/chat/chatSlice';\r\n\r\ninterface CreateChannelModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n`;\r\n\r\nconst Description = styled.div`\r\n  font-family: 'Courier New', monospace;\r\n  margin-bottom: 16px;\r\n  color: ${props => props.theme.colors.text};\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: ${props => props.theme.colors.error};\r\n  font-family: 'Courier New', monospace;\r\n  margin-top: 8px;\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 8px;\r\n  justify-content: flex-end;\r\n  margin-top: 8px;\r\n`;\r\n\r\nconst CreateChannelModal: React.FC<CreateChannelModalProps> = ({ isOpen, onClose }) => {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Validate channel name\r\n      const trimmedName = name.trim().toLowerCase();\r\n      if (!trimmedName) {\r\n        throw new Error('Channel name is required');\r\n      }\r\n      if (trimmedName.length < 2) {\r\n        throw new Error('Channel name must be at least 2 characters long');\r\n      }\r\n      if (!/^[a-z0-9-_]+$/.test(trimmedName)) {\r\n        throw new Error('Channel name can only contain letters, numbers, hyphens, and underscores');\r\n      }\r\n\r\n      // Create channel\r\n      const newChannel = await createChannel(trimmedName, description.trim() || undefined);\r\n      dispatch(addChannel(newChannel));\r\n      dispatch(setActiveChannel(newChannel.id));\r\n      onClose();\r\n      setName('');\r\n      setDescription('');\r\n    } catch (error) {\r\n      setError(error instanceof Error ? error.message : 'Failed to create channel');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setName('');\r\n    setDescription('');\r\n    setError(null);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={handleClose} title=\"Create Channel\">\r\n      <Description>\r\n        Create a new channel for your team to collaborate in.\r\n        Channel names must be lowercase and can only contain letters,\r\n        numbers, hyphens, and underscores.\r\n      </Description>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          label=\"Channel Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          placeholder=\"e.g., general, random, project-x\"\r\n          fullWidth\r\n          autoFocus\r\n        />\r\n        <Input\r\n          label=\"Description (Optional)\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          placeholder=\"What's this channel about?\"\r\n          fullWidth\r\n        />\r\n        {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        <ButtonGroup>\r\n          <Button\r\n            type=\"button\"\r\n            variant=\"secondary\"\r\n            onClick={handleClose}\r\n            disabled={isLoading}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? 'Creating...' : 'Create Channel'}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateChannelModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}