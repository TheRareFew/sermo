{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Message from '../Message';\nimport MessageReplies from '../MessageReplies';\nimport { deleteMessage, toggleExpanded } from '../../../store/messages/messagesSlice';\nimport { deleteMessage as deleteMessageApi } from '../../../services/api/chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n_c = MessageListContainer;\nconst MessagesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: auto;\n`;\n_c2 = MessagesWrapper;\nconst MessageWrapper = styled.div`\n  transition: background-color 0.3s ease;\n  padding: 4px;\n  border-radius: 4px;\n  background-color: ${props => props.$isSelected ? '#3a3a3a' : 'transparent'};\n`;\n_c3 = MessageWrapper;\nconst MessageList = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c4 = _s(({\n  messages,\n  selectedMessageId\n}, ref) => {\n  _s();\n  const dispatch = useDispatch();\n  const selectedMessageRef = useRef(null);\n  const containerRef = useRef(null);\n  console.log('[DEBUG] MessageList - Received messages:', messages);\n  const {\n    currentUser,\n    users,\n    activeChannelId\n  } = useSelector(state => ({\n    currentUser: state.auth.user,\n    users: state.chat.users,\n    activeChannelId: state.chat.activeChannelId\n  }));\n  console.log('[DEBUG] MessageList - Current state:', {\n    currentUser,\n    users,\n    activeChannelId\n  });\n  useEffect(() => {\n    // Scroll to bottom on initial load or when messages change\n    if (containerRef.current) {\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\n    }\n  }, [messages]);\n  useEffect(() => {\n    // Scroll to selected message\n    if (selectedMessageId && selectedMessageRef.current) {\n      selectedMessageRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center'\n      });\n    }\n  }, [selectedMessageId]);\n  const handleDeleteMessage = async messageId => {\n    try {\n      await deleteMessageApi(messageId);\n      if (activeChannelId) {\n        dispatch(deleteMessage({\n          channelId: activeChannelId,\n          messageId\n        }));\n      }\n    } catch (error) {\n      console.error('Error deleting message:', error);\n    }\n  };\n  const handleToggleReplies = messageId => {\n    if (activeChannelId) {\n      dispatch(toggleExpanded({\n        channelId: activeChannelId,\n        messageId\n      }));\n    }\n  };\n  const handleReply = messageId => {\n    // TODO: Implement reply functionality\n    console.log('Reply to message:', messageId);\n  };\n  console.log('[DEBUG] MessageList - About to render messages:', messages);\n  return /*#__PURE__*/_jsxDEV(MessageListContainer, {\n    ref: containerRef,\n    children: /*#__PURE__*/_jsxDEV(MessagesWrapper, {\n      children: messages.map(message => {\n        var _users$message$userId;\n        console.log('[DEBUG] MessageList - Rendering message:', message);\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(MessageWrapper, {\n            $isSelected: message.id === selectedMessageId,\n            ref: message.id === selectedMessageId ? selectedMessageRef : undefined,\n            children: /*#__PURE__*/_jsxDEV(Message, {\n              content: message.content,\n              sender: ((_users$message$userId = users[message.userId]) === null || _users$message$userId === void 0 ? void 0 : _users$message$userId.username) || message.userId,\n              timestamp: message.createdAt,\n              userId: message.userId,\n              currentUserId: currentUser === null || currentUser === void 0 ? void 0 : currentUser.id,\n              onDelete: () => handleDeleteMessage(message.id),\n              replyCount: message.replyCount,\n              isExpanded: message.isExpanded || false,\n              onToggleReplies: () => handleToggleReplies(message.id),\n              onReply: () => handleReply(message.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), message.isExpanded && message.replyCount > 0 && /*#__PURE__*/_jsxDEV(MessageReplies, {\n            parentId: message.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}, \"260Yn8b5qdeIybm8DR33X/Ujs3w=\", false, function () {\n  return [useDispatch, useSelector];\n})), \"260Yn8b5qdeIybm8DR33X/Ujs3w=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c5 = MessageList;\nMessageList.displayName = 'MessageList';\nexport default MessageList;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"MessageListContainer\");\n$RefreshReg$(_c2, \"MessagesWrapper\");\n$RefreshReg$(_c3, \"MessageWrapper\");\n$RefreshReg$(_c4, \"MessageList$forwardRef\");\n$RefreshReg$(_c5, \"MessageList\");","map":{"version":3,"names":["React","useEffect","useRef","forwardRef","styled","useSelector","useDispatch","Message","MessageReplies","deleteMessage","toggleExpanded","deleteMessageApi","jsxDEV","_jsxDEV","MessageListContainer","div","_c","MessagesWrapper","_c2","MessageWrapper","props","$isSelected","_c3","MessageList","_s","_c4","messages","selectedMessageId","ref","dispatch","selectedMessageRef","containerRef","console","log","currentUser","users","activeChannelId","state","auth","user","chat","current","scrollTop","scrollHeight","scrollIntoView","behavior","block","handleDeleteMessage","messageId","channelId","error","handleToggleReplies","handleReply","children","map","message","_users$message$userId","Fragment","id","undefined","content","sender","userId","username","timestamp","createdAt","currentUserId","onDelete","replyCount","isExpanded","onToggleReplies","onReply","fileName","_jsxFileName","lineNumber","columnNumber","parentId","_c5","displayName","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageList/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState, StoreMessage, User } from '../../../types';\nimport Message from '../Message';\nimport MessageReplies from '../MessageReplies';\nimport { deleteMessage, toggleExpanded } from '../../../store/messages/messagesSlice';\nimport { deleteMessage as deleteMessageApi } from '../../../services/api/chat';\n\ninterface MessageListProps {\n  messages: StoreMessage[];\n  selectedMessageId?: string | null;\n}\n\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nconst MessagesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: auto;\n`;\n\nconst MessageWrapper = styled.div<{ $isSelected?: boolean }>`\n  transition: background-color 0.3s ease;\n  padding: 4px;\n  border-radius: 4px;\n  background-color: ${props => props.$isSelected ? '#3a3a3a' : 'transparent'};\n`;\n\nconst MessageList = forwardRef<HTMLDivElement, MessageListProps>(({ messages, selectedMessageId }, ref) => {\n  const dispatch = useDispatch();\n  const selectedMessageRef = useRef<HTMLDivElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  console.log('[DEBUG] MessageList - Received messages:', messages);\n\n  const { currentUser, users, activeChannelId } = useSelector((state: RootState) => ({\n    currentUser: state.auth.user,\n    users: state.chat.users as { [key: string]: User },\n    activeChannelId: state.chat.activeChannelId\n  }));\n\n  console.log('[DEBUG] MessageList - Current state:', {\n    currentUser,\n    users,\n    activeChannelId\n  });\n\n  useEffect(() => {\n    // Scroll to bottom on initial load or when messages change\n    if (containerRef.current) {\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  useEffect(() => {\n    // Scroll to selected message\n    if (selectedMessageId && selectedMessageRef.current) {\n      selectedMessageRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center'\n      });\n    }\n  }, [selectedMessageId]);\n\n  const handleDeleteMessage = async (messageId: string) => {\n    try {\n      await deleteMessageApi(messageId);\n      if (activeChannelId) {\n        dispatch(deleteMessage({ channelId: activeChannelId, messageId }));\n      }\n    } catch (error) {\n      console.error('Error deleting message:', error);\n    }\n  };\n\n  const handleToggleReplies = (messageId: string) => {\n    if (activeChannelId) {\n      dispatch(toggleExpanded({ channelId: activeChannelId, messageId }));\n    }\n  };\n\n  const handleReply = (messageId: string) => {\n    // TODO: Implement reply functionality\n    console.log('Reply to message:', messageId);\n  };\n\n  console.log('[DEBUG] MessageList - About to render messages:', messages);\n\n  return (\n    <MessageListContainer ref={containerRef}>\n      <MessagesWrapper>\n        {messages.map(message => {\n          console.log('[DEBUG] MessageList - Rendering message:', message);\n          return (\n            <React.Fragment key={message.id}>\n              <MessageWrapper\n                $isSelected={message.id === selectedMessageId}\n                ref={message.id === selectedMessageId ? selectedMessageRef : undefined}\n              >\n                <Message\n                  content={message.content}\n                  sender={users[message.userId]?.username || message.userId}\n                  timestamp={message.createdAt}\n                  userId={message.userId}\n                  currentUserId={currentUser?.id}\n                  onDelete={() => handleDeleteMessage(message.id)}\n                  replyCount={message.replyCount}\n                  isExpanded={message.isExpanded || false}\n                  onToggleReplies={() => handleToggleReplies(message.id)}\n                  onReply={() => handleReply(message.id)}\n                />\n              </MessageWrapper>\n              {message.isExpanded && message.replyCount > 0 && (\n                <MessageReplies parentId={message.id} />\n              )}\n            </React.Fragment>\n          );\n        })}\n      </MessagesWrapper>\n    </MessageListContainer>\n  );\n});\n\nMessageList.displayName = 'MessageList';\n\nexport default MessageList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}