{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageReplies\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Message from '../Message';\nimport { setReplies } from '../../../store/messages/messagesSlice';\nimport { getReplies } from '../../../services/api/chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RepliesContainer = styled.div`\n  display: ${props => props.isExpanded ? 'block' : 'none'};\n  margin-left: 24px;\n  position: relative;\n  border-left: 2px solid ${props => props.theme.colors.border};\n  margin-top: 2px;\n  margin-bottom: 2px;\n  padding-left: 8px;\n\n  &:before {\n    content: '';\n    position: absolute;\n    left: -2px;\n    top: 0;\n    width: 8px;\n    height: 2px;\n    background-color: ${props => props.theme.colors.border};\n  }\n`;\n_c = RepliesContainer;\nconst ReplyWrapper = styled.div`\n  position: relative;\n  padding: 2px 0;\n  background-color: ${props => props.theme.colors.backgroundDark};\n\n  &:hover {\n    background-color: ${props => props.theme.colors.hover};\n  }\n\n  &:last-child {\n    &:after {\n      content: '';\n      position: absolute;\n      left: -10px;\n      bottom: 50%;\n      width: 8px;\n      height: 2px;\n      background-color: ${props => props.theme.colors.border};\n    }\n  }\n`;\n_c2 = ReplyWrapper;\nconst MessageReplies = ({\n  parentId,\n  replies,\n  isExpanded,\n  onToggleReplies,\n  onDelete,\n  currentUserId\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const users = useSelector(state => {\n    var _state$chat;\n    return ((_state$chat = state.chat) === null || _state$chat === void 0 ? void 0 : _state$chat.users) || {};\n  });\n  const activeChannelId = useSelector(state => state.chat.activeChannelId);\n\n  // Load replies when expanded\n  useEffect(() => {\n    const loadReplies = async () => {\n      if (!isExpanded || !activeChannelId || !parentId) return;\n      try {\n        const fetchedReplies = await getReplies(parentId);\n        const transformedReplies = fetchedReplies.map(reply => ({\n          id: reply.id.toString(),\n          content: reply.content,\n          channelId: reply.channel_id.toString(),\n          userId: reply.sender_id.toString(),\n          createdAt: new Date(reply.created_at).toISOString(),\n          updatedAt: reply.updated_at ? new Date(reply.updated_at).toISOString() : undefined,\n          reactions: [],\n          attachments: [],\n          replyCount: 0,\n          isExpanded: false,\n          parentId: parentId.toString()\n        }));\n        dispatch(setReplies({\n          channelId: activeChannelId,\n          messageId: parentId,\n          replies: transformedReplies\n        }));\n      } catch (error) {\n        console.error('Error loading replies:', error);\n      }\n    };\n    loadReplies();\n  }, [isExpanded, activeChannelId, parentId, dispatch]);\n\n  // Sort replies by creation time\n  const sortedReplies = [...replies].sort((a, b) => {\n    const timeA = new Date(a.createdAt).getTime();\n    const timeB = new Date(b.createdAt).getTime();\n    return timeA - timeB;\n  });\n  return /*#__PURE__*/_jsxDEV(RepliesContainer, {\n    isExpanded: isExpanded,\n    children: sortedReplies.map(reply => {\n      var _users$reply$userId;\n      return /*#__PURE__*/_jsxDEV(ReplyWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          content: reply.content,\n          sender: ((_users$reply$userId = users[reply.userId]) === null || _users$reply$userId === void 0 ? void 0 : _users$reply$userId.username) || reply.userId,\n          timestamp: reply.createdAt,\n          userId: reply.userId,\n          currentUserId: currentUserId,\n          onDelete: () => onDelete(reply.id),\n          replyCount: 0,\n          isExpanded: false,\n          onToggleReplies: () => {},\n          onReply: () => {},\n          isReply: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, reply.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageReplies, \"m89F5ZWiD7k0Z1HdL18rSVf6qoI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c3 = MessageReplies;\nexport default MessageReplies;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"RepliesContainer\");\n$RefreshReg$(_c2, \"ReplyWrapper\");\n$RefreshReg$(_c3, \"MessageReplies\");","map":{"version":3,"names":["React","useEffect","styled","useSelector","useDispatch","Message","setReplies","getReplies","jsxDEV","_jsxDEV","RepliesContainer","div","props","isExpanded","theme","colors","border","_c","ReplyWrapper","backgroundDark","hover","_c2","MessageReplies","parentId","replies","onToggleReplies","onDelete","currentUserId","_s","dispatch","users","state","_state$chat","chat","activeChannelId","loadReplies","fetchedReplies","transformedReplies","map","reply","id","toString","content","channelId","channel_id","userId","sender_id","createdAt","Date","created_at","toISOString","updatedAt","updated_at","undefined","reactions","attachments","replyCount","messageId","error","console","sortedReplies","sort","a","b","timeA","getTime","timeB","children","_users$reply$userId","sender","username","timestamp","onReply","isReply","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageReplies/index.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { StoreMessage, RootState } from '../../../types';\nimport Message from '../Message';\nimport { setReplies } from '../../../store/messages/messagesSlice';\nimport { getReplies } from '../../../services/api/chat';\n\ninterface MessageRepliesProps {\n  parentId: string;\n  replies: StoreMessage[];\n  isExpanded: boolean;\n  onToggleReplies: (messageId: string) => void;\n  onDelete: (messageId: string) => void;\n  currentUserId?: string;\n}\n\nconst RepliesContainer = styled.div<{ isExpanded: boolean }>`\n  display: ${props => props.isExpanded ? 'block' : 'none'};\n  margin-left: 24px;\n  position: relative;\n  border-left: 2px solid ${props => props.theme.colors.border};\n  margin-top: 2px;\n  margin-bottom: 2px;\n  padding-left: 8px;\n\n  &:before {\n    content: '';\n    position: absolute;\n    left: -2px;\n    top: 0;\n    width: 8px;\n    height: 2px;\n    background-color: ${props => props.theme.colors.border};\n  }\n`;\n\nconst ReplyWrapper = styled.div`\n  position: relative;\n  padding: 2px 0;\n  background-color: ${props => props.theme.colors.backgroundDark};\n\n  &:hover {\n    background-color: ${props => props.theme.colors.hover};\n  }\n\n  &:last-child {\n    &:after {\n      content: '';\n      position: absolute;\n      left: -10px;\n      bottom: 50%;\n      width: 8px;\n      height: 2px;\n      background-color: ${props => props.theme.colors.border};\n    }\n  }\n`;\n\nconst MessageReplies: React.FC<MessageRepliesProps> = ({\n  parentId,\n  replies,\n  isExpanded,\n  onToggleReplies,\n  onDelete,\n  currentUserId,\n}) => {\n  const dispatch = useDispatch();\n  const users = useSelector((state: RootState) => state.chat?.users || {});\n  const activeChannelId = useSelector((state: RootState) => state.chat.activeChannelId);\n\n  // Load replies when expanded\n  useEffect(() => {\n    const loadReplies = async () => {\n      if (!isExpanded || !activeChannelId || !parentId) return;\n\n      try {\n        const fetchedReplies = await getReplies(parentId);\n        const transformedReplies = fetchedReplies.map(reply => ({\n          id: reply.id.toString(),\n          content: reply.content,\n          channelId: reply.channel_id.toString(),\n          userId: reply.sender_id.toString(),\n          createdAt: new Date(reply.created_at).toISOString(),\n          updatedAt: reply.updated_at ? new Date(reply.updated_at).toISOString() : undefined,\n          reactions: [],\n          attachments: [],\n          replyCount: 0,\n          isExpanded: false,\n          parentId: parentId.toString()\n        }));\n\n        dispatch(setReplies({\n          channelId: activeChannelId,\n          messageId: parentId,\n          replies: transformedReplies\n        }));\n      } catch (error) {\n        console.error('Error loading replies:', error);\n      }\n    };\n\n    loadReplies();\n  }, [isExpanded, activeChannelId, parentId, dispatch]);\n\n  // Sort replies by creation time\n  const sortedReplies = [...replies].sort((a, b) => {\n    const timeA = new Date(a.createdAt).getTime();\n    const timeB = new Date(b.createdAt).getTime();\n    return timeA - timeB;\n  });\n\n  return (\n    <RepliesContainer isExpanded={isExpanded}>\n      {sortedReplies.map((reply) => (\n        <ReplyWrapper key={reply.id}>\n          <Message\n            content={reply.content}\n            sender={users[reply.userId]?.username || reply.userId}\n            timestamp={reply.createdAt}\n            userId={reply.userId}\n            currentUserId={currentUserId}\n            onDelete={() => onDelete(reply.id)}\n            replyCount={0}\n            isExpanded={false}\n            onToggleReplies={() => {}}\n            onReply={() => {}}\n            isReply\n          />\n        </ReplyWrapper>\n      ))}\n    </RepliesContainer>\n  );\n};\n\nexport default MessageReplies; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}