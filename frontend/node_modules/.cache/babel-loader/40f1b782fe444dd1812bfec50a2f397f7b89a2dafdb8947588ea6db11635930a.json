{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\layout\\\\MainLayout\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../../store/auth/authSlice';\nimport { setActiveChannel, setChannels, addMessage, setUsers, updateUserStatus } from '../../../store/chat/chatSlice';\nimport Button from '../../common/Button';\nimport UserListItem from '../../common/UserListItem';\nimport ChannelListItem from '../../common/ChannelListItem';\nimport CreateChannelModal from '../../chat/CreateChannelModal';\nimport MessageInput from '../../chat/MessageInput';\nimport MessageList from '../../chat/MessageList';\nimport wsService from '../../../services/websocket';\nimport { getChannels, getChannelUsers } from '../../../services/api/chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'VT323', monospace;\n`;\n_c = MainContainer;\nconst Sidebar = styled.div`\n  width: 200px;\n  border-right: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = Sidebar;\nconst ChannelList = styled.div`\n  flex: 1;\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n_c3 = ChannelList;\nconst UserList = styled.div`\n  height: 200px;\n  padding: 16px;\n  border-top: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n_c4 = UserList;\nconst ChatArea = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n`;\n_c5 = ChatArea;\nconst ChatHeader = styled.div`\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h1 {\n    margin: 0;\n    text-transform: uppercase;\n  }\n`;\n_c6 = ChatHeader;\nconst ChatInput = styled.div`\n  border-top: 2px solid ${props => props.theme.colors.border};\n`;\n_c7 = ChatInput;\nconst LogoutButton = styled.button`\n  background: none;\n  border: 2px solid ${props => props.theme.colors.error};\n  color: ${props => props.theme.colors.error};\n  padding: 4px 8px;\n  font-family: 'VT323', monospace;\n  cursor: pointer;\n  text-transform: uppercase;\n\n  &:hover {\n    background: ${props => props.theme.colors.error};\n    color: ${props => props.theme.colors.background};\n  }\n`;\n_c8 = LogoutButton;\nconst ChannelHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n\n  h2 {\n    margin: 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n_c9 = ChannelHeader;\nconst CreateChannelButton = styled(Button)`\n  padding: 2px 8px;\n  font-size: 0.875rem;\n`;\n_c10 = CreateChannelButton;\nconst MainLayout = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const activeChannelId = useSelector(state => state.chat.activeChannelId);\n  const channels = useSelector(state => state.chat.channels);\n  const users = useSelector(state => state.chat.users);\n  const activeChannel = channels.find(channel => channel.id === activeChannelId);\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const fetchedChannels = await getChannels();\n        dispatch(setChannels(fetchedChannels));\n        if (fetchedChannels.length > 0) {\n          const channelUsers = await getChannelUsers(fetchedChannels[0].id);\n          dispatch(setUsers(channelUsers));\n          dispatch(setActiveChannel(fetchedChannels[0].id));\n        }\n      } catch (error) {\n        console.error('Failed to fetch initial data:', error);\n      }\n    };\n    fetchInitialData();\n\n    // Set up WebSocket handlers\n    const messageHandler = data => {\n      if (data.type === 'new_message' && data.id && data.content && data.sender_id && data.channel_id) {\n        const message = {\n          id: data.id,\n          content: data.content,\n          sender_id: data.sender_id,\n          channel_id: data.channel_id,\n          created_at: data.created_at || new Date().toISOString(),\n          is_system: data.is_system\n        };\n        dispatch(addMessage(message));\n      }\n    };\n    const presenceHandler = data => {\n      if (data.type === 'presence_update' && data.user_id && data.status) {\n        dispatch(updateUserStatus({\n          userId: data.user_id,\n          status: data.status\n        }));\n      }\n    };\n    wsService.onMessage(messageHandler);\n    wsService.onPresence(presenceHandler);\n    return () => {\n      wsService.disconnect();\n    };\n  }, [dispatch]);\n  const handleChannelClick = async channelId => {\n    if (channelId !== activeChannelId) {\n      dispatch(setActiveChannel(channelId));\n      try {\n        const channelUsers = await getChannelUsers(channelId);\n        dispatch(setUsers(channelUsers));\n      } catch (error) {\n        console.error('Failed to fetch channel users:', error);\n      }\n    }\n  };\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(ChannelList, {\n        children: [/*#__PURE__*/_jsxDEV(ChannelHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Channels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CreateChannelButton, {\n            variant: \"secondary\",\n            size: \"small\",\n            onClick: () => setIsCreateModalOpen(true),\n            children: \"+New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), channels.map(channel => /*#__PURE__*/_jsxDEV(ChannelListItem, {\n          name: channel.name,\n          isActive: channel.id === activeChannelId,\n          hasUnread: false,\n          isDirect: channel.is_direct_message,\n          onClick: () => handleChannelClick(channel.id)\n        }, channel.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserList, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Online Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), Object.values(users).map(user => /*#__PURE__*/_jsxDEV(UserListItem, {\n          username: user.username,\n          status: user.status\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatArea, {\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: activeChannel ? `${activeChannel.is_direct_message ? '@' : '#'}${activeChannel.name}` : 'Select a channel'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n        channelId: activeChannelId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        children: /*#__PURE__*/_jsxDEV(MessageInput, {\n          channelId: activeChannelId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), isCreateModalOpen && /*#__PURE__*/_jsxDEV(CreateChannelModal, {\n      isOpen: isCreateModalOpen,\n      onClose: () => setIsCreateModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(MainLayout, \"vM4sN5oBeydMFKJ1DCkLfrzXvh8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c11 = MainLayout;\nexport default MainLayout;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"MainContainer\");\n$RefreshReg$(_c2, \"Sidebar\");\n$RefreshReg$(_c3, \"ChannelList\");\n$RefreshReg$(_c4, \"UserList\");\n$RefreshReg$(_c5, \"ChatArea\");\n$RefreshReg$(_c6, \"ChatHeader\");\n$RefreshReg$(_c7, \"ChatInput\");\n$RefreshReg$(_c8, \"LogoutButton\");\n$RefreshReg$(_c9, \"ChannelHeader\");\n$RefreshReg$(_c10, \"CreateChannelButton\");\n$RefreshReg$(_c11, \"MainLayout\");","map":{"version":3,"names":["React","useEffect","useState","styled","useDispatch","useSelector","logout","setActiveChannel","setChannels","addMessage","setUsers","updateUserStatus","Button","UserListItem","ChannelListItem","CreateChannelModal","MessageInput","MessageList","wsService","getChannels","getChannelUsers","jsxDEV","_jsxDEV","MainContainer","div","props","theme","colors","background","text","_c","Sidebar","border","_c2","ChannelList","primary","_c3","UserList","_c4","ChatArea","_c5","ChatHeader","_c6","ChatInput","_c7","LogoutButton","button","error","_c8","ChannelHeader","_c9","CreateChannelButton","_c10","MainLayout","_s","dispatch","isCreateModalOpen","setIsCreateModalOpen","activeChannelId","state","chat","channels","users","activeChannel","find","channel","id","fetchInitialData","fetchedChannels","length","channelUsers","console","messageHandler","data","type","content","sender_id","channel_id","message","created_at","Date","toISOString","is_system","presenceHandler","user_id","status","userId","onMessage","onPresence","disconnect","handleChannelClick","channelId","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","onClick","map","name","isActive","hasUnread","isDirect","is_direct_message","Object","values","user","username","isOpen","onClose","_c11","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/layout/MainLayout/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../../store/auth/authSlice';\nimport {\n  setActiveChannel,\n  setChannels,\n  addMessage,\n  setUsers,\n  updateUserStatus\n} from '../../../store/chat/chatSlice';\nimport Button from '../../common/Button';\nimport UserListItem from '../../common/UserListItem';\nimport ChannelListItem from '../../common/ChannelListItem';\nimport CreateChannelModal from '../../chat/CreateChannelModal';\nimport MessageInput from '../../chat/MessageInput';\nimport MessageList from '../../chat/MessageList';\nimport wsService from '../../../services/websocket';\nimport { getChannels, getChannelUsers } from '../../../services/api/chat';\nimport { WebSocketMessage } from '../../../types';\n\nconst MainContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'VT323', monospace;\n`;\n\nconst Sidebar = styled.div`\n  width: 200px;\n  border-right: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ChannelList = styled.div`\n  flex: 1;\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst UserList = styled.div`\n  height: 200px;\n  padding: 16px;\n  border-top: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst ChatArea = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst ChatHeader = styled.div`\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h1 {\n    margin: 0;\n    text-transform: uppercase;\n  }\n`;\n\nconst ChatInput = styled.div`\n  border-top: 2px solid ${props => props.theme.colors.border};\n`;\n\nconst LogoutButton = styled.button`\n  background: none;\n  border: 2px solid ${props => props.theme.colors.error};\n  color: ${props => props.theme.colors.error};\n  padding: 4px 8px;\n  font-family: 'VT323', monospace;\n  cursor: pointer;\n  text-transform: uppercase;\n\n  &:hover {\n    background: ${props => props.theme.colors.error};\n    color: ${props => props.theme.colors.background};\n  }\n`;\n\nconst ChannelHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n\n  h2 {\n    margin: 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst CreateChannelButton = styled(Button)`\n  padding: 2px 8px;\n  font-size: 0.875rem;\n`;\n\nconst MainLayout: React.FC = () => {\n  const dispatch = useDispatch();\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  \n  const activeChannelId = useSelector((state: any) => state.chat.activeChannelId);\n  const channels = useSelector((state: any) => state.chat.channels);\n  const users = useSelector((state: any) => state.chat.users);\n  const activeChannel = channels.find((channel: any) => channel.id === activeChannelId);\n\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const fetchedChannels = await getChannels();\n        dispatch(setChannels(fetchedChannels));\n\n        if (fetchedChannels.length > 0) {\n          const channelUsers = await getChannelUsers(fetchedChannels[0].id);\n          dispatch(setUsers(channelUsers));\n          dispatch(setActiveChannel(fetchedChannels[0].id));\n        }\n      } catch (error) {\n        console.error('Failed to fetch initial data:', error);\n      }\n    };\n\n    fetchInitialData();\n\n    // Set up WebSocket handlers\n    const messageHandler = (data: WebSocketMessage) => {\n      if (data.type === 'new_message' && data.id && data.content && data.sender_id && data.channel_id) {\n        const message = {\n          id: data.id,\n          content: data.content,\n          sender_id: data.sender_id,\n          channel_id: data.channel_id,\n          created_at: data.created_at || new Date().toISOString(),\n          is_system: data.is_system\n        };\n        dispatch(addMessage(message));\n      }\n    };\n\n    const presenceHandler = (data: WebSocketMessage) => {\n      if (data.type === 'presence_update' && data.user_id && data.status) {\n        dispatch(updateUserStatus({\n          userId: data.user_id,\n          status: data.status\n        }));\n      }\n    };\n\n    wsService.onMessage(messageHandler);\n    wsService.onPresence(presenceHandler);\n\n    return () => {\n      wsService.disconnect();\n    };\n  }, [dispatch]);\n\n  const handleChannelClick = async (channelId: number) => {\n    if (channelId !== activeChannelId) {\n      dispatch(setActiveChannel(channelId));\n      try {\n        const channelUsers = await getChannelUsers(channelId);\n        dispatch(setUsers(channelUsers));\n      } catch (error) {\n        console.error('Failed to fetch channel users:', error);\n      }\n    }\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <MainContainer>\n      <Sidebar>\n        <ChannelList>\n          <ChannelHeader>\n            <h2>Channels</h2>\n            <CreateChannelButton\n              variant=\"secondary\"\n              size=\"small\"\n              onClick={() => setIsCreateModalOpen(true)}\n            >\n              +New\n            </CreateChannelButton>\n          </ChannelHeader>\n          {channels.map((channel: any) => (\n            <ChannelListItem\n              key={channel.id}\n              name={channel.name}\n              isActive={channel.id === activeChannelId}\n              hasUnread={false}\n              isDirect={channel.is_direct_message}\n              onClick={() => handleChannelClick(channel.id)}\n            />\n          ))}\n        </ChannelList>\n        <UserList>\n          <h2>Online Users</h2>\n          {Object.values(users).map((user: any) => (\n            <UserListItem\n              key={user.id}\n              username={user.username}\n              status={user.status}\n            />\n          ))}\n        </UserList>\n      </Sidebar>\n      <ChatArea>\n        <ChatHeader>\n          <h1>{activeChannel ? `${activeChannel.is_direct_message ? '@' : '#'}${activeChannel.name}` : 'Select a channel'}</h1>\n          <LogoutButton onClick={handleLogout}>Logout</LogoutButton>\n        </ChatHeader>\n        <MessageList channelId={activeChannelId} />\n        <ChatInput>\n          <MessageInput channelId={activeChannelId} />\n        </ChatInput>\n      </ChatArea>\n      {isCreateModalOpen && (\n        <CreateChannelModal\n          isOpen={isCreateModalOpen}\n          onClose={() => setIsCreateModalOpen(false)}\n        />\n      )}\n    </MainContainer>\n  );\n};\n\nexport default MainLayout; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,MAAM,QAAQ,+BAA+B;AACtD,SACEC,gBAAgB,EAChBC,WAAW,EACXC,UAAU,EACVC,QAAQ,EACRC,gBAAgB,QACX,+BAA+B;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,kBAAkB,MAAM,+BAA+B;AAC9D,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,SAASC,WAAW,EAAEC,eAAe,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1E,MAAMC,aAAa,GAAGpB,MAAM,CAACqB,GAAG;AAChC;AACA;AACA,sBAAsBC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,UAAU;AAC5D,WAAWH,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACE,IAAI;AAC3C;AACA,CAAC;AAACC,EAAA,GANIP,aAAa;AAQnB,MAAMQ,OAAO,GAAG5B,MAAM,CAACqB,GAAG;AAC1B;AACA,4BAA4BC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACK,MAAM;AAC9D;AACA;AACA,CAAC;AAACC,GAAA,GALIF,OAAO;AAOb,MAAMG,WAAW,GAAG/B,MAAM,CAACqB,GAAG;AAC9B;AACA;AACA,6BAA6BC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACK,MAAM;AAC/D;AACA;AACA;AACA;AACA;AACA,aAAaP,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACQ,OAAO;AAChD;AACA,CAAC;AAACC,GAAA,GAXIF,WAAW;AAajB,MAAMG,QAAQ,GAAGlC,MAAM,CAACqB,GAAG;AAC3B;AACA;AACA,0BAA0BC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACK,MAAM;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAaP,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACQ,OAAO;AAChD;AACA,CAAC;AAACG,GAAA,GAXID,QAAQ;AAad,MAAME,QAAQ,GAAGpC,MAAM,CAACqB,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACgB,GAAA,GANID,QAAQ;AAQd,MAAME,UAAU,GAAGtC,MAAM,CAACqB,GAAG;AAC7B;AACA,6BAA6BC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACK,MAAM;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACU,GAAA,GAXID,UAAU;AAahB,MAAME,SAAS,GAAGxC,MAAM,CAACqB,GAAG;AAC5B,0BAA0BC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACK,MAAM;AAC5D,CAAC;AAACY,GAAA,GAFID,SAAS;AAIf,MAAME,YAAY,GAAG1C,MAAM,CAAC2C,MAAM;AAClC;AACA,sBAAsBrB,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACoB,KAAK;AACvD,WAAWtB,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACoB,KAAK;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBtB,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACoB,KAAK;AACnD,aAAatB,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,UAAU;AACnD;AACA,CAAC;AAACoB,GAAA,GAbIH,YAAY;AAelB,MAAMI,aAAa,GAAG9C,MAAM,CAACqB,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAaC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACQ,OAAO;AAChD;AACA,CAAC;AAACe,GAAA,GAXID,aAAa;AAanB,MAAME,mBAAmB,GAAGhD,MAAM,CAACS,MAAM,CAAC;AAC1C;AACA;AACA,CAAC;AAACwC,IAAA,GAHID,mBAAmB;AAKzB,MAAME,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGnD,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACoD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvD,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMwD,eAAe,GAAGrD,WAAW,CAAEsD,KAAU,IAAKA,KAAK,CAACC,IAAI,CAACF,eAAe,CAAC;EAC/E,MAAMG,QAAQ,GAAGxD,WAAW,CAAEsD,KAAU,IAAKA,KAAK,CAACC,IAAI,CAACC,QAAQ,CAAC;EACjE,MAAMC,KAAK,GAAGzD,WAAW,CAAEsD,KAAU,IAAKA,KAAK,CAACC,IAAI,CAACE,KAAK,CAAC;EAC3D,MAAMC,aAAa,GAAGF,QAAQ,CAACG,IAAI,CAAEC,OAAY,IAAKA,OAAO,CAACC,EAAE,KAAKR,eAAe,CAAC;EAErFzD,SAAS,CAAC,MAAM;IACd,MAAMkE,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,eAAe,GAAG,MAAMjD,WAAW,CAAC,CAAC;QAC3CoC,QAAQ,CAAC/C,WAAW,CAAC4D,eAAe,CAAC,CAAC;QAEtC,IAAIA,eAAe,CAACC,MAAM,GAAG,CAAC,EAAE;UAC9B,MAAMC,YAAY,GAAG,MAAMlD,eAAe,CAACgD,eAAe,CAAC,CAAC,CAAC,CAACF,EAAE,CAAC;UACjEX,QAAQ,CAAC7C,QAAQ,CAAC4D,YAAY,CAAC,CAAC;UAChCf,QAAQ,CAAChD,gBAAgB,CAAC6D,eAAe,CAAC,CAAC,CAAC,CAACF,EAAE,CAAC,CAAC;QACnD;MACF,CAAC,CAAC,OAAOnB,KAAK,EAAE;QACdwB,OAAO,CAACxB,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDoB,gBAAgB,CAAC,CAAC;;IAElB;IACA,MAAMK,cAAc,GAAIC,IAAsB,IAAK;MACjD,IAAIA,IAAI,CAACC,IAAI,KAAK,aAAa,IAAID,IAAI,CAACP,EAAE,IAAIO,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACG,SAAS,IAAIH,IAAI,CAACI,UAAU,EAAE;QAC/F,MAAMC,OAAO,GAAG;UACdZ,EAAE,EAAEO,IAAI,CAACP,EAAE;UACXS,OAAO,EAAEF,IAAI,CAACE,OAAO;UACrBC,SAAS,EAAEH,IAAI,CAACG,SAAS;UACzBC,UAAU,EAAEJ,IAAI,CAACI,UAAU;UAC3BE,UAAU,EAAEN,IAAI,CAACM,UAAU,IAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;UACvDC,SAAS,EAAET,IAAI,CAACS;QAClB,CAAC;QACD3B,QAAQ,CAAC9C,UAAU,CAACqE,OAAO,CAAC,CAAC;MAC/B;IACF,CAAC;IAED,MAAMK,eAAe,GAAIV,IAAsB,IAAK;MAClD,IAAIA,IAAI,CAACC,IAAI,KAAK,iBAAiB,IAAID,IAAI,CAACW,OAAO,IAAIX,IAAI,CAACY,MAAM,EAAE;QAClE9B,QAAQ,CAAC5C,gBAAgB,CAAC;UACxB2E,MAAM,EAAEb,IAAI,CAACW,OAAO;UACpBC,MAAM,EAAEZ,IAAI,CAACY;QACf,CAAC,CAAC,CAAC;MACL;IACF,CAAC;IAEDnE,SAAS,CAACqE,SAAS,CAACf,cAAc,CAAC;IACnCtD,SAAS,CAACsE,UAAU,CAACL,eAAe,CAAC;IAErC,OAAO,MAAM;MACXjE,SAAS,CAACuE,UAAU,CAAC,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,CAAClC,QAAQ,CAAC,CAAC;EAEd,MAAMmC,kBAAkB,GAAG,MAAOC,SAAiB,IAAK;IACtD,IAAIA,SAAS,KAAKjC,eAAe,EAAE;MACjCH,QAAQ,CAAChD,gBAAgB,CAACoF,SAAS,CAAC,CAAC;MACrC,IAAI;QACF,MAAMrB,YAAY,GAAG,MAAMlD,eAAe,CAACuE,SAAS,CAAC;QACrDpC,QAAQ,CAAC7C,QAAQ,CAAC4D,YAAY,CAAC,CAAC;MAClC,CAAC,CAAC,OAAOvB,KAAK,EAAE;QACdwB,OAAO,CAACxB,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF;EACF,CAAC;EAED,MAAM6C,YAAY,GAAGA,CAAA,KAAM;IACzBrC,QAAQ,CAACjD,MAAM,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,oBACEgB,OAAA,CAACC,aAAa;IAAAsE,QAAA,gBACZvE,OAAA,CAACS,OAAO;MAAA8D,QAAA,gBACNvE,OAAA,CAACY,WAAW;QAAA2D,QAAA,gBACVvE,OAAA,CAAC2B,aAAa;UAAA4C,QAAA,gBACZvE,OAAA;YAAAuE,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjB3E,OAAA,CAAC6B,mBAAmB;YAClB+C,OAAO,EAAC,WAAW;YACnBC,IAAI,EAAC,OAAO;YACZC,OAAO,EAAEA,CAAA,KAAM3C,oBAAoB,CAAC,IAAI,CAAE;YAAAoC,QAAA,EAC3C;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAqB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,EACfpC,QAAQ,CAACwC,GAAG,CAAEpC,OAAY,iBACzB3C,OAAA,CAACR,eAAe;UAEdwF,IAAI,EAAErC,OAAO,CAACqC,IAAK;UACnBC,QAAQ,EAAEtC,OAAO,CAACC,EAAE,KAAKR,eAAgB;UACzC8C,SAAS,EAAE,KAAM;UACjBC,QAAQ,EAAExC,OAAO,CAACyC,iBAAkB;UACpCN,OAAO,EAAEA,CAAA,KAAMV,kBAAkB,CAACzB,OAAO,CAACC,EAAE;QAAE,GALzCD,OAAO,CAACC,EAAE;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMhB,CACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC,eACd3E,OAAA,CAACe,QAAQ;QAAAwD,QAAA,gBACPvE,OAAA;UAAAuE,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACpBU,MAAM,CAACC,MAAM,CAAC9C,KAAK,CAAC,CAACuC,GAAG,CAAEQ,IAAS,iBAClCvF,OAAA,CAACT,YAAY;UAEXiG,QAAQ,EAAED,IAAI,CAACC,QAAS;UACxBzB,MAAM,EAAEwB,IAAI,CAACxB;QAAO,GAFfwB,IAAI,CAAC3C,EAAE;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGb,CACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACV3E,OAAA,CAACiB,QAAQ;MAAAsD,QAAA,gBACPvE,OAAA,CAACmB,UAAU;QAAAoD,QAAA,gBACTvE,OAAA;UAAAuE,QAAA,EAAK9B,aAAa,GAAG,GAAGA,aAAa,CAAC2C,iBAAiB,GAAG,GAAG,GAAG,GAAG,GAAG3C,aAAa,CAACuC,IAAI,EAAE,GAAG;QAAkB;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrH3E,OAAA,CAACuB,YAAY;UAACuD,OAAO,EAAER,YAAa;UAAAC,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACb3E,OAAA,CAACL,WAAW;QAAC0E,SAAS,EAAEjC;MAAgB;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3C3E,OAAA,CAACqB,SAAS;QAAAkD,QAAA,eACRvE,OAAA,CAACN,YAAY;UAAC2E,SAAS,EAAEjC;QAAgB;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EACVzC,iBAAiB,iBAChBlC,OAAA,CAACP,kBAAkB;MACjBgG,MAAM,EAAEvD,iBAAkB;MAC1BwD,OAAO,EAAEA,CAAA,KAAMvD,oBAAoB,CAAC,KAAK;IAAE;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAEpB,CAAC;AAAC3C,EAAA,CAjIID,UAAoB;EAAA,QACPjD,WAAW,EAGJC,WAAW,EAClBA,WAAW,EACdA,WAAW;AAAA;AAAA4G,IAAA,GANrB5D,UAAoB;AAmI1B,eAAeA,UAAU;AAAC,IAAAvB,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAI,GAAA,EAAAE,GAAA,EAAAE,IAAA,EAAA6D,IAAA;AAAAC,YAAA,CAAApF,EAAA;AAAAoF,YAAA,CAAAjF,GAAA;AAAAiF,YAAA,CAAA9E,GAAA;AAAA8E,YAAA,CAAA5E,GAAA;AAAA4E,YAAA,CAAA1E,GAAA;AAAA0E,YAAA,CAAAxE,GAAA;AAAAwE,YAAA,CAAAtE,GAAA;AAAAsE,YAAA,CAAAlE,GAAA;AAAAkE,YAAA,CAAAhE,GAAA;AAAAgE,YAAA,CAAA9D,IAAA;AAAA8D,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}