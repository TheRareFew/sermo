{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\layout\\\\Sidebar\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { setActiveChannel } from '../../../store/chat/chatSlice';\nimport Button from '../../common/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SidebarContainer = styled.div`\n  width: 240px;\n  display: flex;\n  flex-direction: column;\n  background-color: ${props => props.theme.colors.backgroundDark};\n  border-right: 2px solid ${props => props.theme.colors.border};\n  font-family: 'VT323', monospace;\n`;\n_c = SidebarContainer;\nconst Section = styled.div`\n  padding: 1rem;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n_c2 = Section;\nconst SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  padding: 0.25rem 0;\n  border-bottom: 1px solid ${props => props.theme.colors.border};\n`;\n_c3 = SectionHeader;\nconst SectionTitle = styled.h2`\n  margin: 0;\n  color: ${props => props.theme.colors.primary};\n  font-size: 1rem;\n  text-transform: uppercase;\n`;\n_c4 = SectionTitle;\nconst ChannelList = styled.div`\n  flex: 1;\n  overflow-y: auto;\n`;\n_c5 = ChannelList;\nconst UserList = styled.div`\n  height: 200px;\n  overflow-y: auto;\n`;\n_c6 = UserList;\nconst ChannelItem = styled.div`\n  padding: 0.25rem 0.5rem;\n  margin: 0.25rem 0;\n  cursor: pointer;\n  color: ${props => props.isActive ? props.theme.colors.primary : props.theme.colors.text};\n  background-color: ${props => props.isActive ? props.theme.colors.hover : 'transparent'};\n\n  &:hover {\n    background-color: ${props => props.theme.colors.hover};\n  }\n\n  &:before {\n    content: '#';\n    color: ${props => props.theme.colors.secondary};\n    margin-right: 0.5rem;\n  }\n`;\n_c7 = ChannelItem;\nconst UserItem = styled.div`\n  padding: 0.25rem 0.5rem;\n  margin: 0.25rem 0;\n  color: ${props => props.theme.colors.text};\n\n  &:before {\n    content: '@';\n    color: ${props => props.theme.colors.secondary};\n    margin-right: 0.5rem;\n  }\n\n  &:after {\n    content: '[${props => props.status.toUpperCase()}]';\n    color: ${props => {\n  switch (props.status) {\n    case 'online':\n      return props.theme.colors.success;\n    case 'away':\n      return props.theme.colors.warning;\n    case 'busy':\n      return props.theme.colors.error;\n    default:\n      return props.theme.colors.textDim;\n  }\n}};\n    margin-left: 0.5rem;\n    font-size: 0.875rem;\n  }\n`;\n_c8 = UserItem;\nconst Sidebar = ({\n  onCreateChannel\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const channels = useSelector(state => state.chat.channels);\n  const users = useSelector(state => state.chat.users);\n  const activeChannelId = useSelector(state => state.chat.activeChannelId);\n  const handleChannelClick = channelId => {\n    dispatch(setActiveChannel(channelId));\n  };\n  return /*#__PURE__*/_jsxDEV(SidebarContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: \"Channels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          size: \"small\",\n          onClick: onCreateChannel,\n          children: \"+New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChannelList, {\n        children: channels.map(channel => /*#__PURE__*/_jsxDEV(ChannelItem, {\n          isActive: channel.id === activeChannelId,\n          onClick: () => handleChannelClick(channel.id),\n          children: channel.name\n        }, channel.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n        children: /*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: \"Online Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserList, {\n        children: Object.values(users).map(user => /*#__PURE__*/_jsxDEV(UserItem, {\n          status: user.status || 'offline',\n          children: user.username\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"0oAO3PziDHz7I0XleVJcbQayhGw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c9 = Sidebar;\nexport default Sidebar;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"SidebarContainer\");\n$RefreshReg$(_c2, \"Section\");\n$RefreshReg$(_c3, \"SectionHeader\");\n$RefreshReg$(_c4, \"SectionTitle\");\n$RefreshReg$(_c5, \"ChannelList\");\n$RefreshReg$(_c6, \"UserList\");\n$RefreshReg$(_c7, \"ChannelItem\");\n$RefreshReg$(_c8, \"UserItem\");\n$RefreshReg$(_c9, \"Sidebar\");","map":{"version":3,"names":["React","useSelector","useDispatch","styled","setActiveChannel","Button","jsxDEV","_jsxDEV","SidebarContainer","div","props","theme","colors","backgroundDark","border","_c","Section","_c2","SectionHeader","_c3","SectionTitle","h2","primary","_c4","ChannelList","_c5","UserList","_c6","ChannelItem","isActive","text","hover","secondary","_c7","UserItem","status","toUpperCase","success","warning","error","textDim","_c8","Sidebar","onCreateChannel","_s","dispatch","channels","state","chat","users","activeChannelId","handleChannelClick","channelId","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","onClick","map","channel","id","name","Object","values","user","username","_c9","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/layout/Sidebar/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { RootState } from '../../../store/rootReducer';\r\nimport { setActiveChannel } from '../../../store/chat/chatSlice';\r\nimport Button from '../../common/Button';\r\n\r\nconst SidebarContainer = styled.div`\r\n  width: 240px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${props => props.theme.colors.backgroundDark};\r\n  border-right: 2px solid ${props => props.theme.colors.border};\r\n  font-family: 'VT323', monospace;\r\n`;\r\n\r\nconst Section = styled.div`\r\n  padding: 1rem;\r\n  border-bottom: 2px solid ${props => props.theme.colors.border};\r\n\r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nconst SectionHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 0.5rem;\r\n  padding: 0.25rem 0;\r\n  border-bottom: 1px solid ${props => props.theme.colors.border};\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n  margin: 0;\r\n  color: ${props => props.theme.colors.primary};\r\n  font-size: 1rem;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst ChannelList = styled.div`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst UserList = styled.div`\r\n  height: 200px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst ChannelItem = styled.div<{ isActive: boolean }>`\r\n  padding: 0.25rem 0.5rem;\r\n  margin: 0.25rem 0;\r\n  cursor: pointer;\r\n  color: ${props => props.isActive ? props.theme.colors.primary : props.theme.colors.text};\r\n  background-color: ${props => props.isActive ? props.theme.colors.hover : 'transparent'};\r\n\r\n  &:hover {\r\n    background-color: ${props => props.theme.colors.hover};\r\n  }\r\n\r\n  &:before {\r\n    content: '#';\r\n    color: ${props => props.theme.colors.secondary};\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst UserItem = styled.div<{ status: string }>`\r\n  padding: 0.25rem 0.5rem;\r\n  margin: 0.25rem 0;\r\n  color: ${props => props.theme.colors.text};\r\n\r\n  &:before {\r\n    content: '@';\r\n    color: ${props => props.theme.colors.secondary};\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  &:after {\r\n    content: '[${props => props.status.toUpperCase()}]';\r\n    color: ${props => {\r\n      switch (props.status) {\r\n        case 'online':\r\n          return props.theme.colors.success;\r\n        case 'away':\r\n          return props.theme.colors.warning;\r\n        case 'busy':\r\n          return props.theme.colors.error;\r\n        default:\r\n          return props.theme.colors.textDim;\r\n      }\r\n    }};\r\n    margin-left: 0.5rem;\r\n    font-size: 0.875rem;\r\n  }\r\n`;\r\n\r\ninterface SidebarProps {\r\n  onCreateChannel: () => void;\r\n}\r\n\r\nconst Sidebar: React.FC<SidebarProps> = ({ onCreateChannel }) => {\r\n  const dispatch = useDispatch();\r\n  const channels = useSelector((state: RootState) => state.chat.channels);\r\n  const users = useSelector((state: RootState) => state.chat.users);\r\n  const activeChannelId = useSelector((state: RootState) => state.chat.activeChannelId);\r\n\r\n  const handleChannelClick = (channelId: number) => {\r\n    dispatch(setActiveChannel(channelId));\r\n  };\r\n\r\n  return (\r\n    <SidebarContainer>\r\n      <Section>\r\n        <SectionHeader>\r\n          <SectionTitle>Channels</SectionTitle>\r\n          <Button variant=\"secondary\" size=\"small\" onClick={onCreateChannel}>\r\n            +New\r\n          </Button>\r\n        </SectionHeader>\r\n        <ChannelList>\r\n          {channels.map(channel => (\r\n            <ChannelItem\r\n              key={channel.id}\r\n              isActive={channel.id === activeChannelId}\r\n              onClick={() => handleChannelClick(channel.id)}\r\n            >\r\n              {channel.name}\r\n            </ChannelItem>\r\n          ))}\r\n        </ChannelList>\r\n      </Section>\r\n      <Section>\r\n        <SectionHeader>\r\n          <SectionTitle>Online Users</SectionTitle>\r\n        </SectionHeader>\r\n        <UserList>\r\n          {Object.values(users).map(user => (\r\n            <UserItem key={user.id} status={user.status || 'offline'}>\r\n              {user.username}\r\n            </UserItem>\r\n          ))}\r\n        </UserList>\r\n      </Section>\r\n    </SidebarContainer>\r\n  );\r\n};\r\n\r\nexport default Sidebar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}