{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageInput\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputContainer = styled.div`\n  padding: 8px;\n  background: ${props => props.theme.colors.background};\n  border-top: 2px solid ${props => props.theme.colors.border};\n`;\n_c = InputContainer;\nconst StyledInput = styled.input`\n  width: 100%;\n  padding: 8px;\n  background: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  border: 2px solid ${props => props.theme.colors.border};\n  font-family: 'Courier New', monospace;\n  font-size: 14px;\n\n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${props => props.theme.colors.textSecondary};\n  }\n`;\n_c2 = StyledInput;\nconst MessageInput = ({\n  channelId,\n  wsService\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && message.trim()) {\n      wsService.sendMessage(channelId, message.trim());\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(InputContainer, {\n    children: /*#__PURE__*/_jsxDEV(StyledInput, {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyPress: handleKeyPress,\n      placeholder: \"> Type your message and press Enter...\",\n      \"aria-label\": \"Message input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageInput, \"bGPKBe2V1vyt2i0iGlh2UJTgFRs=\", false, function () {\n  return [useDispatch];\n});\n_c3 = MessageInput;\nexport default MessageInput;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"InputContainer\");\n$RefreshReg$(_c2, \"StyledInput\");\n$RefreshReg$(_c3, \"MessageInput\");","map":{"version":3,"names":["React","useState","styled","useDispatch","jsxDEV","_jsxDEV","InputContainer","div","props","theme","colors","background","border","_c","StyledInput","input","text","primary","textSecondary","_c2","MessageInput","channelId","wsService","_s","message","setMessage","dispatch","handleKeyPress","e","key","trim","sendMessage","children","type","value","onChange","target","onKeyPress","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageInput/index.tsx"],"sourcesContent":["import React, { useState, KeyboardEvent } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport WebSocketService from '../../../services/websocket';\r\n\r\ninterface MessageInputProps {\r\n  channelId: number;\r\n  wsService: InstanceType<typeof WebSocketService>;\r\n}\r\n\r\nconst InputContainer = styled.div`\r\n  padding: 8px;\r\n  background: ${props => props.theme.colors.background};\r\n  border-top: 2px solid ${props => props.theme.colors.border};\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  padding: 8px;\r\n  background: ${props => props.theme.colors.background};\r\n  color: ${props => props.theme.colors.text};\r\n  border: 2px solid ${props => props.theme.colors.border};\r\n  font-family: 'Courier New', monospace;\r\n  font-size: 14px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${props => props.theme.colors.primary};\r\n  }\r\n\r\n  &::placeholder {\r\n    color: ${props => props.theme.colors.textSecondary};\r\n  }\r\n`;\r\n\r\nconst MessageInput: React.FC<MessageInputProps> = ({ channelId, wsService }) => {\r\n  const [message, setMessage] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter' && message.trim()) {\r\n      wsService.sendMessage(channelId, message.trim());\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputContainer>\r\n      <StyledInput\r\n        type=\"text\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        onKeyPress={handleKeyPress}\r\n        placeholder=\"> Type your message and press Enter...\"\r\n        aria-label=\"Message input\"\r\n      />\r\n    </InputContainer>\r\n  );\r\n};\r\n\r\nexport default MessageInput; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAuB,OAAO;AACtD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1C,MAAMC,cAAc,GAAGJ,MAAM,CAACK,GAAG;AACjC;AACA,gBAAgBC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,UAAU;AACtD,0BAA0BH,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACE,MAAM;AAC5D,CAAC;AAACC,EAAA,GAJIP,cAAc;AAMpB,MAAMQ,WAAW,GAAGZ,MAAM,CAACa,KAAK;AAChC;AACA;AACA,gBAAgBP,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,UAAU;AACtD,WAAWH,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACM,IAAI;AAC3C,sBAAsBR,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACE,MAAM;AACxD;AACA;AACA;AACA;AACA;AACA,oBAAoBJ,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACO,OAAO;AACvD;AACA;AACA;AACA,aAAaT,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACQ,aAAa;AACtD;AACA,CAAC;AAACC,GAAA,GAjBIL,WAAW;AAmBjB,MAAMM,YAAyC,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC9E,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMyB,QAAQ,GAAGvB,WAAW,CAAC,CAAC;EAE9B,MAAMwB,cAAc,GAAIC,CAAkC,IAAK;IAC7D,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAIL,OAAO,CAACM,IAAI,CAAC,CAAC,EAAE;MACvCR,SAAS,CAACS,WAAW,CAACV,SAAS,EAAEG,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC;MAChDL,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACEpB,OAAA,CAACC,cAAc;IAAA0B,QAAA,eACb3B,OAAA,CAACS,WAAW;MACVmB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEV,OAAQ;MACfW,QAAQ,EAAGP,CAAC,IAAKH,UAAU,CAACG,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MAC5CG,UAAU,EAAEV,cAAe;MAC3BW,WAAW,EAAC,wCAAwC;MACpD,cAAW;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAErB,CAAC;AAACnB,EAAA,CAvBIH,YAAyC;EAAA,QAE5BjB,WAAW;AAAA;AAAAwC,GAAA,GAFxBvB,YAAyC;AAyB/C,eAAeA,YAAY;AAAC,IAAAP,EAAA,EAAAM,GAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAA/B,EAAA;AAAA+B,YAAA,CAAAzB,GAAA;AAAAyB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}