{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  messagesByChannel: {},\n  loading: false,\n  error: null\n};\nconst messagesSlice = createSlice({\n  name: 'messages',\n  initialState,\n  reducers: {\n    setMessages: (state, action) => {\n      const {\n        channelId,\n        messages\n      } = action.payload;\n      state.messagesByChannel[channelId] = messages;\n    },\n    addMessage: (state, action) => {\n      const {\n        channelId,\n        message\n      } = action.payload;\n      if (!state.messagesByChannel[channelId]) {\n        state.messagesByChannel[channelId] = [];\n      }\n      state.messagesByChannel[channelId].push(message);\n    },\n    prependMessages: (state, action) => {\n      const {\n        channelId,\n        messages\n      } = action.payload;\n      if (!state.messagesByChannel[channelId]) {\n        state.messagesByChannel[channelId] = [];\n      }\n      state.messagesByChannel[channelId].unshift(...messages);\n    },\n    updateMessage: (state, action) => {\n      var _state$messagesByChan;\n      const {\n        channelId,\n        messageId,\n        message\n      } = action.payload;\n      const messageIndex = (_state$messagesByChan = state.messagesByChannel[channelId]) === null || _state$messagesByChan === void 0 ? void 0 : _state$messagesByChan.findIndex(m => m.id === messageId);\n      if (messageIndex !== undefined && messageIndex !== -1) {\n        state.messagesByChannel[channelId][messageIndex] = {\n          ...state.messagesByChannel[channelId][messageIndex],\n          ...message\n        };\n      }\n    },\n    deleteMessage: (state, action) => {\n      const {\n        channelId,\n        messageId\n      } = action.payload;\n      if (state.messagesByChannel[channelId]) {\n        state.messagesByChannel[channelId] = state.messagesByChannel[channelId].filter(message => message.id !== messageId);\n      }\n    },\n    toggleReplies: (state, action) => {\n      var _state$messagesByChan2;\n      const {\n        channelId,\n        messageId\n      } = action.payload;\n      const messageIndex = (_state$messagesByChan2 = state.messagesByChannel[channelId]) === null || _state$messagesByChan2 === void 0 ? void 0 : _state$messagesByChan2.findIndex(m => m.id === messageId);\n      if (messageIndex !== undefined && messageIndex !== -1) {\n        state.messagesByChannel[channelId][messageIndex].isExpanded = !state.messagesByChannel[channelId][messageIndex].isExpanded;\n      }\n    },\n    addReaction: (state, action) => {\n      var _state$messagesByChan3;\n      const {\n        channelId,\n        messageId,\n        reaction\n      } = action.payload;\n      const messageIndex = (_state$messagesByChan3 = state.messagesByChannel[channelId]) === null || _state$messagesByChan3 === void 0 ? void 0 : _state$messagesByChan3.findIndex(m => m.id === messageId);\n      if (messageIndex !== undefined && messageIndex !== -1) {\n        const message = state.messagesByChannel[channelId][messageIndex];\n        if (!message.reactions) {\n          message.reactions = [];\n        }\n        message.reactions.push(reaction);\n      }\n    },\n    removeReaction: (state, action) => {\n      var _state$messagesByChan4;\n      const {\n        channelId,\n        messageId,\n        userId,\n        emoji\n      } = action.payload;\n      const messageIndex = (_state$messagesByChan4 = state.messagesByChannel[channelId]) === null || _state$messagesByChan4 === void 0 ? void 0 : _state$messagesByChan4.findIndex(m => m.id === messageId);\n      if (messageIndex !== undefined && messageIndex !== -1) {\n        const message = state.messagesByChannel[channelId][messageIndex];\n        if (message.reactions) {\n          message.reactions = message.reactions.filter(r => !(r.userId === userId && r.emoji === emoji));\n        }\n      }\n    }\n  }\n});\nexport const {\n  setMessages,\n  addMessage,\n  prependMessages,\n  updateMessage,\n  deleteMessage,\n  toggleReplies,\n  addReaction,\n  removeReaction\n} = messagesSlice.actions;\nexport default messagesSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","messagesByChannel","loading","error","messagesSlice","name","reducers","setMessages","state","action","channelId","messages","payload","addMessage","message","push","prependMessages","unshift","updateMessage","_state$messagesByChan","messageId","messageIndex","findIndex","m","id","undefined","deleteMessage","filter","toggleReplies","_state$messagesByChan2","isExpanded","addReaction","_state$messagesByChan3","reaction","reactions","removeReaction","_state$messagesByChan4","userId","emoji","r","actions","reducer"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/store/messages/messagesSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { StoreMessage } from '../../types';\n\ninterface MessagesState {\n  messagesByChannel: {\n    [channelId: string]: StoreMessage[];\n  };\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: MessagesState = {\n  messagesByChannel: {},\n  loading: false,\n  error: null\n};\n\nconst messagesSlice = createSlice({\n  name: 'messages',\n  initialState,\n  reducers: {\n    setMessages: (state, action: PayloadAction<{ channelId: string; messages: StoreMessage[] }>) => {\n      const { channelId, messages } = action.payload;\n      state.messagesByChannel[channelId] = messages;\n    },\n    addMessage: (state, action: PayloadAction<{ channelId: string; message: StoreMessage }>) => {\n      const { channelId, message } = action.payload;\n      if (!state.messagesByChannel[channelId]) {\n        state.messagesByChannel[channelId] = [];\n      }\n      state.messagesByChannel[channelId].push(message);\n    },\n    prependMessages: (state, action: PayloadAction<{ channelId: string; messages: StoreMessage[] }>) => {\n      const { channelId, messages } = action.payload;\n      if (!state.messagesByChannel[channelId]) {\n        state.messagesByChannel[channelId] = [];\n      }\n      state.messagesByChannel[channelId].unshift(...messages);\n    },\n    updateMessage: (state, action: PayloadAction<{ channelId: string; messageId: string; message: Partial<StoreMessage> }>) => {\n      const { channelId, messageId, message } = action.payload;\n      const messageIndex = state.messagesByChannel[channelId]?.findIndex(m => m.id === messageId);\n      if (messageIndex !== undefined && messageIndex !== -1) {\n        state.messagesByChannel[channelId][messageIndex] = {\n          ...state.messagesByChannel[channelId][messageIndex],\n          ...message\n        };\n      }\n    },\n    deleteMessage: (state, action: PayloadAction<{ channelId: string; messageId: string }>) => {\n      const { channelId, messageId } = action.payload;\n      if (state.messagesByChannel[channelId]) {\n        state.messagesByChannel[channelId] = state.messagesByChannel[channelId].filter(message => message.id !== messageId);\n      }\n    },\n    toggleReplies: (state, action: PayloadAction<{ channelId: string; messageId: string }>) => {\n      const { channelId, messageId } = action.payload;\n      const messageIndex = state.messagesByChannel[channelId]?.findIndex(m => m.id === messageId);\n      if (messageIndex !== undefined && messageIndex !== -1) {\n        state.messagesByChannel[channelId][messageIndex].isExpanded = !state.messagesByChannel[channelId][messageIndex].isExpanded;\n      }\n    },\n    addReaction: (state, action: PayloadAction<{ channelId: string; messageId: string; reaction: any }>) => {\n      const { channelId, messageId, reaction } = action.payload;\n      const messageIndex = state.messagesByChannel[channelId]?.findIndex(m => m.id === messageId);\n      if (messageIndex !== undefined && messageIndex !== -1) {\n        const message = state.messagesByChannel[channelId][messageIndex];\n        if (!message.reactions) {\n          message.reactions = [];\n        }\n        message.reactions.push(reaction);\n      }\n    },\n    removeReaction: (state, action: PayloadAction<{ channelId: string; messageId: string; userId: string; emoji: string }>) => {\n      const { channelId, messageId, userId, emoji } = action.payload;\n      const messageIndex = state.messagesByChannel[channelId]?.findIndex(m => m.id === messageId);\n      if (messageIndex !== undefined && messageIndex !== -1) {\n        const message = state.messagesByChannel[channelId][messageIndex];\n        if (message.reactions) {\n          message.reactions = message.reactions.filter(r => \n            !(r.userId === userId && r.emoji === emoji)\n          );\n        }\n      }\n    },\n  },\n});\n\nexport const { \n  setMessages, \n  addMessage, \n  prependMessages, \n  updateMessage, \n  deleteMessage, \n  toggleReplies,\n  addReaction,\n  removeReaction\n} = messagesSlice.actions;\n\nexport default messagesSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}