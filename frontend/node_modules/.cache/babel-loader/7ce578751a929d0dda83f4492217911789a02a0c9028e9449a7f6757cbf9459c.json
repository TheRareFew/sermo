{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\layout\\\\MainLayout\\\\index.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../../store/auth/authSlice';\nimport { setActiveChannel, setChannels, setUsers } from '../../../store/chat/chatSlice';\nimport { addMessage } from '../../../store/messages/messagesSlice';\nimport Button from '../../common/Button';\nimport UserListItem from '../../common/UserListItem';\nimport ChannelListItem from '../../common/ChannelListItem';\nimport CreateChannelModal from '../../chat/CreateChannelModal';\nimport MessageInput from '../../chat/MessageInput';\nimport MessageList from '../../chat/MessageList';\nimport wsService from '../../../services/websocket';\nimport { getChannels, getChannelUsers } from '../../../services/api/chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'VT323', monospace;\n`;\n_c = MainContainer;\nconst Sidebar = styled.div`\n  width: 200px;\n  border-right: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = Sidebar;\nconst ChannelList = styled.div`\n  flex: 1;\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n_c3 = ChannelList;\nconst UserList = styled.div`\n  height: 200px;\n  padding: 16px;\n  border-top: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n_c4 = UserList;\nconst ChatArea = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n`;\n_c5 = ChatArea;\nconst ChatHeader = styled.div`\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h1 {\n    margin: 0;\n    text-transform: uppercase;\n  }\n`;\n_c6 = ChatHeader;\nconst ChatInput = styled.div`\n  border-top: 2px solid ${props => props.theme.colors.border};\n`;\n_c7 = ChatInput;\nconst LogoutButton = styled.button`\n  background: none;\n  border: 2px solid ${props => props.theme.colors.error};\n  color: ${props => props.theme.colors.error};\n  padding: 4px 8px;\n  font-family: 'VT323', monospace;\n  cursor: pointer;\n  text-transform: uppercase;\n\n  &:hover {\n    background: ${props => props.theme.colors.error};\n    color: ${props => props.theme.colors.background};\n  }\n`;\n_c8 = LogoutButton;\nconst ChannelHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n\n  h2 {\n    margin: 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n_c9 = ChannelHeader;\nconst CreateChannelButton = styled(Button)`\n  padding: 2px 8px;\n  font-size: 0.875rem;\n`;\n_c10 = CreateChannelButton;\nconst MainLayout = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const dispatch = useDispatch();\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const activeChannelId = useSelector(state => state.chat.activeChannelId);\n  const channels = useSelector(state => state.chat.channels);\n  const users = useSelector(state => state.chat.users);\n  const activeChannel = channels.find(channel => channel.id === activeChannelId);\n  _s(useEffect(_s(() => {\n    _s();\n    const fetchInitialData = async () => {\n      try {\n        const fetchedChannels = await getChannels();\n        dispatch(setChannels(fetchedChannels));\n        if (fetchedChannels.length > 0) {\n          const channelUsers = await getChannelUsers(fetchedChannels[0].id);\n          dispatch(setUsers(channelUsers));\n          dispatch(setActiveChannel(fetchedChannels[0].id));\n        }\n      } catch (error) {\n        console.error('Failed to fetch initial data:', error);\n      }\n    };\n    fetchInitialData();\n\n    // Connect WebSocket\n    wsService.connect();\n\n    // Handle WebSocket messages\n    useEffect(() => {\n      const handleMessage = message => {\n        console.log('Received WebSocket message:', message);\n        if (message.type === 'message' && message.message) {\n          try {\n            const {\n              id,\n              content,\n              channel_id,\n              sender_id,\n              created_at\n            } = message.message;\n            if (!id || !content || !channel_id || !sender_id) {\n              console.error('Invalid message format:', message);\n              return;\n            }\n            const transformedMessage = {\n              id: String(id),\n              content: content,\n              channelId: String(channel_id),\n              userId: String(sender_id),\n              reactions: [],\n              attachments: [],\n              createdAt: created_at || new Date().toISOString(),\n              updatedAt: created_at || new Date().toISOString()\n            };\n            console.log('Dispatching transformed message:', transformedMessage);\n            dispatch(addMessage(transformedMessage));\n          } catch (error) {\n            console.error('Error handling WebSocket message:', error);\n          }\n        }\n      };\n\n      // onMessage returns a cleanup function\n      const cleanup = wsService.onMessage(handleMessage);\n      return cleanup;\n    }, [dispatch]);\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"), [dispatch]), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  const handleChannelClick = async channelId => {\n    if (channelId !== activeChannelId) {\n      dispatch(setActiveChannel(channelId));\n      try {\n        const channelUsers = await getChannelUsers(channelId);\n        dispatch(setUsers(channelUsers));\n      } catch (error) {\n        console.error('Failed to fetch channel users:', error);\n      }\n    }\n  };\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(ChannelList, {\n        children: [/*#__PURE__*/_jsxDEV(ChannelHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Channels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CreateChannelButton, {\n            variant: \"secondary\",\n            size: \"small\",\n            onClick: () => setIsCreateModalOpen(true),\n            children: \"+New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), channels.map(channel => /*#__PURE__*/_jsxDEV(ChannelListItem, {\n          name: channel.name,\n          isActive: channel.id === activeChannelId,\n          hasUnread: false,\n          isDirect: channel.is_direct_message,\n          onClick: () => handleChannelClick(channel.id)\n        }, channel.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserList, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Online Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), Object.values(users).map(user => /*#__PURE__*/_jsxDEV(UserListItem, {\n          username: user.username,\n          status: user.status\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatArea, {\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: activeChannel ? `${activeChannel.is_direct_message ? '@' : '#'}${activeChannel.name}` : 'Select a channel'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n        channelId: activeChannelId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        children: /*#__PURE__*/_jsxDEV(MessageInput, {\n          channelId: activeChannelId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), isCreateModalOpen && /*#__PURE__*/_jsxDEV(CreateChannelModal, {\n      isOpen: isCreateModalOpen,\n      onClose: () => setIsCreateModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_s2(MainLayout, \"vM4sN5oBeydMFKJ1DCkLfrzXvh8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c11 = MainLayout;\nexport default MainLayout;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"MainContainer\");\n$RefreshReg$(_c2, \"Sidebar\");\n$RefreshReg$(_c3, \"ChannelList\");\n$RefreshReg$(_c4, \"UserList\");\n$RefreshReg$(_c5, \"ChatArea\");\n$RefreshReg$(_c6, \"ChatHeader\");\n$RefreshReg$(_c7, \"ChatInput\");\n$RefreshReg$(_c8, \"LogoutButton\");\n$RefreshReg$(_c9, \"ChannelHeader\");\n$RefreshReg$(_c10, \"CreateChannelButton\");\n$RefreshReg$(_c11, \"MainLayout\");","map":{"version":3,"names":["React","useEffect","useState","styled","useDispatch","useSelector","logout","setActiveChannel","setChannels","setUsers","addMessage","Button","UserListItem","ChannelListItem","CreateChannelModal","MessageInput","MessageList","wsService","getChannels","getChannelUsers","jsxDEV","_jsxDEV","MainContainer","div","props","theme","colors","background","text","_c","Sidebar","border","_c2","ChannelList","primary","_c3","UserList","_c4","ChatArea","_c5","ChatHeader","_c6","ChatInput","_c7","LogoutButton","button","error","_c8","ChannelHeader","_c9","CreateChannelButton","_c10","MainLayout","_s2","_s","$RefreshSig$","dispatch","isCreateModalOpen","setIsCreateModalOpen","activeChannelId","state","chat","channels","users","activeChannel","find","channel","id","fetchInitialData","fetchedChannels","length","channelUsers","console","connect","handleMessage","message","log","type","content","channel_id","sender_id","created_at","transformedMessage","String","channelId","userId","reactions","attachments","createdAt","Date","toISOString","updatedAt","cleanup","onMessage","handleChannelClick","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","onClick","map","name","isActive","hasUnread","isDirect","is_direct_message","Object","values","user","username","status","isOpen","onClose","_c11","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/layout/MainLayout/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../../store/auth/authSlice';\nimport {\n  setActiveChannel,\n  setChannels,\n  setUsers,\n  updateUserStatus\n} from '../../../store/chat/chatSlice';\nimport { addMessage } from '../../../store/messages/messagesSlice';\nimport Button from '../../common/Button';\nimport UserListItem from '../../common/UserListItem';\nimport ChannelListItem from '../../common/ChannelListItem';\nimport CreateChannelModal from '../../chat/CreateChannelModal';\nimport MessageInput from '../../chat/MessageInput';\nimport MessageList from '../../chat/MessageList';\nimport wsService, { WebSocketMessage } from '../../../services/websocket';\nimport { getChannels, getChannelUsers } from '../../../services/api/chat';\nimport { StoreMessage } from '../../../store/types';\n\nconst MainContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'VT323', monospace;\n`;\n\nconst Sidebar = styled.div`\n  width: 200px;\n  border-right: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ChannelList = styled.div`\n  flex: 1;\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst UserList = styled.div`\n  height: 200px;\n  padding: 16px;\n  border-top: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst ChatArea = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst ChatHeader = styled.div`\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h1 {\n    margin: 0;\n    text-transform: uppercase;\n  }\n`;\n\nconst ChatInput = styled.div`\n  border-top: 2px solid ${props => props.theme.colors.border};\n`;\n\nconst LogoutButton = styled.button`\n  background: none;\n  border: 2px solid ${props => props.theme.colors.error};\n  color: ${props => props.theme.colors.error};\n  padding: 4px 8px;\n  font-family: 'VT323', monospace;\n  cursor: pointer;\n  text-transform: uppercase;\n\n  &:hover {\n    background: ${props => props.theme.colors.error};\n    color: ${props => props.theme.colors.background};\n  }\n`;\n\nconst ChannelHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n\n  h2 {\n    margin: 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst CreateChannelButton = styled(Button)`\n  padding: 2px 8px;\n  font-size: 0.875rem;\n`;\n\nconst MainLayout: React.FC = () => {\n  const dispatch = useDispatch();\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  \n  const activeChannelId = useSelector((state: any) => state.chat.activeChannelId);\n  const channels = useSelector((state: any) => state.chat.channels);\n  const users = useSelector((state: any) => state.chat.users);\n  const activeChannel = channels.find((channel: any) => channel.id === activeChannelId);\n\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const fetchedChannels = await getChannels();\n        dispatch(setChannels(fetchedChannels));\n\n        if (fetchedChannels.length > 0) {\n          const channelUsers = await getChannelUsers(fetchedChannels[0].id);\n          dispatch(setUsers(channelUsers));\n          dispatch(setActiveChannel(fetchedChannels[0].id));\n        }\n      } catch (error) {\n        console.error('Failed to fetch initial data:', error);\n      }\n    };\n\n    fetchInitialData();\n\n    // Connect WebSocket\n    wsService.connect();\n\n    // Handle WebSocket messages\n    useEffect(() => {\n      const handleMessage = (message: WebSocketMessage) => {\n        console.log('Received WebSocket message:', message);\n        \n        if (message.type === 'message' && message.message) {\n          try {\n            const { id, content, channel_id, sender_id, created_at } = message.message;\n            if (!id || !content || !channel_id || !sender_id) {\n              console.error('Invalid message format:', message);\n              return;\n            }\n\n            const transformedMessage: StoreMessage = {\n              id: String(id),\n              content: content,\n              channelId: String(channel_id),\n              userId: String(sender_id),\n              reactions: [],\n              attachments: [],\n              createdAt: created_at || new Date().toISOString(),\n              updatedAt: created_at || new Date().toISOString()\n            };\n\n            console.log('Dispatching transformed message:', transformedMessage);\n            dispatch(addMessage(transformedMessage));\n          } catch (error) {\n            console.error('Error handling WebSocket message:', error);\n          }\n        }\n      };\n\n      // onMessage returns a cleanup function\n      const cleanup = wsService.onMessage(handleMessage);\n      return cleanup;\n    }, [dispatch]);\n  }, [dispatch]);\n\n  const handleChannelClick = async (channelId: number) => {\n    if (channelId !== activeChannelId) {\n      dispatch(setActiveChannel(channelId));\n      try {\n        const channelUsers = await getChannelUsers(channelId);\n        dispatch(setUsers(channelUsers));\n      } catch (error) {\n        console.error('Failed to fetch channel users:', error);\n      }\n    }\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <MainContainer>\n      <Sidebar>\n        <ChannelList>\n          <ChannelHeader>\n            <h2>Channels</h2>\n            <CreateChannelButton\n              variant=\"secondary\"\n              size=\"small\"\n              onClick={() => setIsCreateModalOpen(true)}\n            >\n              +New\n            </CreateChannelButton>\n          </ChannelHeader>\n          {channels.map((channel: any) => (\n            <ChannelListItem\n              key={channel.id}\n              name={channel.name}\n              isActive={channel.id === activeChannelId}\n              hasUnread={false}\n              isDirect={channel.is_direct_message}\n              onClick={() => handleChannelClick(channel.id)}\n            />\n          ))}\n        </ChannelList>\n        <UserList>\n          <h2>Online Users</h2>\n          {Object.values(users).map((user: any) => (\n            <UserListItem\n              key={user.id}\n              username={user.username}\n              status={user.status}\n            />\n          ))}\n        </UserList>\n      </Sidebar>\n      <ChatArea>\n        <ChatHeader>\n          <h1>{activeChannel ? `${activeChannel.is_direct_message ? '@' : '#'}${activeChannel.name}` : 'Select a channel'}</h1>\n          <LogoutButton onClick={handleLogout}>Logout</LogoutButton>\n        </ChatHeader>\n        <MessageList channelId={activeChannelId} />\n        <ChatInput>\n          <MessageInput channelId={activeChannelId} />\n        </ChatInput>\n      </ChatArea>\n      {isCreateModalOpen && (\n        <CreateChannelModal\n          isOpen={isCreateModalOpen}\n          onClose={() => setIsCreateModalOpen(false)}\n        />\n      )}\n    </MainContainer>\n  );\n};\n\nexport default MainLayout; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}