{"ast":null,"code":"import { getAuthToken } from './auth';\nexport const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nexport async function apiRequest(endpoint, options = {}) {\n  const {\n    requiresAuth = true,\n    headers = {},\n    ...rest\n  } = options;\n  const requestHeaders = {\n    'Content-Type': 'application/json',\n    ...headers\n  };\n  if (requiresAuth) {\n    const token = getAuthToken();\n    if (!token) {\n      throw new Error('No auth token available');\n    }\n    requestHeaders['Authorization'] = `Bearer ${token}`;\n    console.log('Using token for request:', token);\n    console.log('Request headers:', requestHeaders);\n  }\n  const response = await fetch(`${API_URL}${endpoint}`, {\n    headers: requestHeaders,\n    credentials: 'include',\n    ...rest\n  });\n  console.log('Response status:', response.status);\n  let data;\n  const contentType = response.headers.get('content-type');\n  if (contentType && contentType.includes('application/json')) {\n    data = await response.json();\n    console.log('Response data:', data);\n  } else {\n    data = await response.text();\n    console.log('Response text:', data);\n  }\n  if (!response.ok) {\n    throw new Error(data.detail || data || 'An error occurred');\n  }\n  return data;\n}\nexport function getAuthHeaders() {\n  const token = getAuthToken();\n  if (!token) {\n    throw new Error('No auth token available');\n  }\n  return {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n  };\n}","map":{"version":3,"names":["getAuthToken","API_URL","process","env","REACT_APP_API_URL","apiRequest","endpoint","options","requiresAuth","headers","rest","requestHeaders","token","Error","console","log","response","fetch","credentials","status","data","contentType","get","includes","json","text","ok","detail","getAuthHeaders"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/services/api/utils.ts"],"sourcesContent":["import { getAuthToken } from './auth';\r\n\r\nexport interface ApiRequestOptions extends Omit<RequestInit, 'headers'> {\r\n  requiresAuth?: boolean;\r\n  headers?: Record<string, string>;\r\n}\r\n\r\nexport const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\nexport async function apiRequest<T>(\r\n  endpoint: string,\r\n  options: ApiRequestOptions = {}\r\n): Promise<T> {\r\n  const { requiresAuth = true, headers = {}, ...rest } = options;\r\n  \r\n  const requestHeaders: Record<string, string> = {\r\n    'Content-Type': 'application/json',\r\n    ...headers,\r\n  };\r\n\r\n  if (requiresAuth) {\r\n    const token = getAuthToken();\r\n    if (!token) {\r\n      throw new Error('No auth token available');\r\n    }\r\n    requestHeaders['Authorization'] = `Bearer ${token}`;\r\n    console.log('Using token for request:', token);\r\n    console.log('Request headers:', requestHeaders);\r\n  }\r\n\r\n  const response = await fetch(`${API_URL}${endpoint}`, {\r\n    headers: requestHeaders,\r\n    credentials: 'include',\r\n    ...rest,\r\n  });\r\n\r\n  console.log('Response status:', response.status);\r\n\r\n  let data;\r\n  const contentType = response.headers.get('content-type');\r\n  if (contentType && contentType.includes('application/json')) {\r\n    data = await response.json();\r\n    console.log('Response data:', data);\r\n  } else {\r\n    data = await response.text();\r\n    console.log('Response text:', data);\r\n  }\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.detail || data || 'An error occurred');\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\nexport function getAuthHeaders(): Record<string, string> {\r\n  const token = getAuthToken();\r\n  if (!token) {\r\n    throw new Error('No auth token available');\r\n  }\r\n  \r\n  return {\r\n    'Authorization': `Bearer ${token}`,\r\n    'Content-Type': 'application/json',\r\n  };\r\n} "],"mappings":"AAAA,SAASA,YAAY,QAAQ,QAAQ;AAOrC,OAAO,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE/E,OAAO,eAAeC,UAAUA,CAC9BC,QAAgB,EAChBC,OAA0B,GAAG,CAAC,CAAC,EACnB;EACZ,MAAM;IAAEC,YAAY,GAAG,IAAI;IAAEC,OAAO,GAAG,CAAC,CAAC;IAAE,GAAGC;EAAK,CAAC,GAAGH,OAAO;EAE9D,MAAMI,cAAsC,GAAG;IAC7C,cAAc,EAAE,kBAAkB;IAClC,GAAGF;EACL,CAAC;EAED,IAAID,YAAY,EAAE;IAChB,MAAMI,KAAK,GAAGZ,YAAY,CAAC,CAAC;IAC5B,IAAI,CAACY,KAAK,EAAE;MACV,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC5C;IACAF,cAAc,CAAC,eAAe,CAAC,GAAG,UAAUC,KAAK,EAAE;IACnDE,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEH,KAAK,CAAC;IAC9CE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,cAAc,CAAC;EACjD;EAEA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGhB,OAAO,GAAGK,QAAQ,EAAE,EAAE;IACpDG,OAAO,EAAEE,cAAc;IACvBO,WAAW,EAAE,SAAS;IACtB,GAAGR;EACL,CAAC,CAAC;EAEFI,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,QAAQ,CAACG,MAAM,CAAC;EAEhD,IAAIC,IAAI;EACR,MAAMC,WAAW,GAAGL,QAAQ,CAACP,OAAO,CAACa,GAAG,CAAC,cAAc,CAAC;EACxD,IAAID,WAAW,IAAIA,WAAW,CAACE,QAAQ,CAAC,kBAAkB,CAAC,EAAE;IAC3DH,IAAI,GAAG,MAAMJ,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAC5BV,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEK,IAAI,CAAC;EACrC,CAAC,MAAM;IACLA,IAAI,GAAG,MAAMJ,QAAQ,CAACS,IAAI,CAAC,CAAC;IAC5BX,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEK,IAAI,CAAC;EACrC;EAEA,IAAI,CAACJ,QAAQ,CAACU,EAAE,EAAE;IAChB,MAAM,IAAIb,KAAK,CAACO,IAAI,CAACO,MAAM,IAAIP,IAAI,IAAI,mBAAmB,CAAC;EAC7D;EAEA,OAAOA,IAAI;AACb;AAEA,OAAO,SAASQ,cAAcA,CAAA,EAA2B;EACvD,MAAMhB,KAAK,GAAGZ,YAAY,CAAC,CAAC;EAC5B,IAAI,CAACY,KAAK,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEA,OAAO;IACL,eAAe,EAAE,UAAUD,KAAK,EAAE;IAClC,cAAc,EAAE;EAClB,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}