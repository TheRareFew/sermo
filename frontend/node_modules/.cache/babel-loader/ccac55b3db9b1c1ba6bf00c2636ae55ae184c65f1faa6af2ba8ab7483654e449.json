{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageInput\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport wsService from '../../../services/websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledInput = styled.textarea`\n  width: 100%;\n  padding: 16px;\n  border: none;\n  background: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'VT323', monospace;\n  resize: none;\n  min-height: 50px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n_c = StyledInput;\nconst ErrorText = styled.div`\n  color: ${props => props.theme.colors.error};\n  padding: 8px 16px;\n  font-size: 0.875rem;\n`;\n_c2 = ErrorText;\nconst MessageInput = ({\n  channelId\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleKeyPress = async event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      const trimmedMessage = message.trim();\n      if (!trimmedMessage || !channelId) return;\n      setIsLoading(true);\n      setError(null);\n      try {\n        console.log('Sending message:', {\n          channelId,\n          content: trimmedMessage\n        });\n        await wsService.sendMessage(channelId, trimmedMessage);\n        setMessage('');\n      } catch (error) {\n        console.error('Failed to send message:', error);\n        setError('Failed to send message. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  const handleChange = event => {\n    setMessage(event.target.value);\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n      value: message,\n      onChange: handleChange,\n      onKeyDown: handleKeyPress,\n      placeholder: \"Type a message...\",\n      disabled: isLoading,\n      rows: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorText, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageInput, \"FUeMDPl3ilWV9F5+IbLfihH+xac=\");\n_c3 = MessageInput;\nexport default MessageInput;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledInput\");\n$RefreshReg$(_c2, \"ErrorText\");\n$RefreshReg$(_c3, \"MessageInput\");","map":{"version":3,"names":["React","useState","styled","wsService","jsxDEV","_jsxDEV","StyledInput","textarea","props","theme","colors","background","text","_c","ErrorText","div","error","_c2","MessageInput","channelId","_s","message","setMessage","isLoading","setIsLoading","setError","handleKeyPress","event","key","shiftKey","preventDefault","trimmedMessage","trim","console","log","content","sendMessage","handleChange","target","value","children","onChange","onKeyDown","placeholder","disabled","rows","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageInput/index.tsx"],"sourcesContent":["import React, { useState, KeyboardEvent } from 'react';\nimport styled from 'styled-components';\nimport wsService from '../../../services/websocket';\n\ninterface MessageInputProps {\n  channelId: string;\n}\n\nconst StyledInput = styled.textarea`\n  width: 100%;\n  padding: 16px;\n  border: none;\n  background: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'VT323', monospace;\n  resize: none;\n  min-height: 50px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst ErrorText = styled.div`\n  color: ${props => props.theme.colors.error};\n  padding: 8px 16px;\n  font-size: 0.875rem;\n`;\n\nconst MessageInput: React.FC<MessageInputProps> = ({ channelId }) => {\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleKeyPress = async (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      \n      const trimmedMessage = message.trim();\n      if (!trimmedMessage || !channelId) return;\n\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        console.log('Sending message:', { channelId, content: trimmedMessage });\n        await wsService.sendMessage(channelId, trimmedMessage);\n        setMessage('');\n      } catch (error) {\n        console.error('Failed to send message:', error);\n        setError('Failed to send message. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setMessage(event.target.value);\n    setError(null);\n  };\n\n  return (\n    <div>\n      <StyledInput\n        value={message}\n        onChange={handleChange}\n        onKeyDown={handleKeyPress}\n        placeholder=\"Type a message...\"\n        disabled={isLoading}\n        rows={2}\n      />\n      {error && <ErrorText>{error}</ErrorText>}\n    </div>\n  );\n};\n\nexport default MessageInput; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}