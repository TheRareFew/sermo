{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageInput\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport wsService from '../../../services/websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputContainer = styled.div`\n  padding: 16px;\n  border-top: 1px solid ${props => props.theme.colors.border};\n  background-color: ${props => props.theme.colors.background};\n`;\n_c = InputContainer;\nconst StyledInput = styled.textarea`\n  width: 100%;\n  min-height: 40px;\n  max-height: 120px;\n  padding: 8px;\n  border: 1px solid ${props => props.theme.colors.border};\n  border-radius: 4px;\n  background-color: ${props => props.theme.colors.inputBackground};\n  color: ${props => props.theme.colors.text};\n  font-family: 'Courier New', monospace;\n  resize: vertical;\n\n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.colors.primary};\n  }\n`;\n_c2 = StyledInput;\nconst MessageInput = ({\n  onMessageSent\n}) => {\n  _s();\n  const [content, setContent] = useState('');\n  const activeChannelId = useSelector(state => state.chat.activeChannelId);\n  const handleKeyPress = useCallback(async event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      if (!content.trim() || !activeChannelId) return;\n      try {\n        console.log('Sending message:', {\n          channelId: activeChannelId,\n          content\n        });\n        await wsService.sendMessage(activeChannelId, content.trim());\n        setContent('');\n        onMessageSent === null || onMessageSent === void 0 ? void 0 : onMessageSent();\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  }, [content, activeChannelId, onMessageSent]);\n  return /*#__PURE__*/_jsxDEV(InputContainer, {\n    children: /*#__PURE__*/_jsxDEV(StyledInput, {\n      value: content,\n      onChange: e => setContent(e.target.value),\n      onKeyPress: handleKeyPress,\n      placeholder: \"Type a message...\",\n      rows: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageInput, \"thJVIZjiO3ku2nA0esHA83Ld7Iw=\", false, function () {\n  return [useSelector];\n});\n_c3 = MessageInput;\nexport default MessageInput;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"InputContainer\");\n$RefreshReg$(_c2, \"StyledInput\");\n$RefreshReg$(_c3, \"MessageInput\");","map":{"version":3,"names":["useState","useCallback","styled","useSelector","wsService","jsxDEV","_jsxDEV","InputContainer","div","props","theme","colors","border","background","_c","StyledInput","textarea","inputBackground","text","primary","_c2","MessageInput","onMessageSent","_s","content","setContent","activeChannelId","state","chat","handleKeyPress","event","key","shiftKey","preventDefault","trim","console","log","channelId","sendMessage","error","children","value","onChange","e","target","onKeyPress","placeholder","rows","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageInput/index.tsx"],"sourcesContent":["import { useState, useCallback, KeyboardEvent } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../types';\nimport wsService from '../../../services/websocket';\n\nconst InputContainer = styled.div`\n  padding: 16px;\n  border-top: 1px solid ${props => props.theme.colors.border};\n  background-color: ${props => props.theme.colors.background};\n`;\n\nconst StyledInput = styled.textarea`\n  width: 100%;\n  min-height: 40px;\n  max-height: 120px;\n  padding: 8px;\n  border: 1px solid ${props => props.theme.colors.border};\n  border-radius: 4px;\n  background-color: ${props => props.theme.colors.inputBackground};\n  color: ${props => props.theme.colors.text};\n  font-family: 'Courier New', monospace;\n  resize: vertical;\n\n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.colors.primary};\n  }\n`;\n\ninterface MessageInputProps {\n  onMessageSent?: () => void;\n}\n\nconst MessageInput = ({ onMessageSent }: MessageInputProps) => {\n  const [content, setContent] = useState('');\n  const activeChannelId = useSelector((state: RootState) => state.chat.activeChannelId);\n\n  const handleKeyPress = useCallback(async (event: KeyboardEvent<HTMLTextAreaElement>) => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      \n      if (!content.trim() || !activeChannelId) return;\n\n      try {\n        console.log('Sending message:', { channelId: activeChannelId, content });\n        await wsService.sendMessage(activeChannelId, content.trim());\n        setContent('');\n        onMessageSent?.();\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  }, [content, activeChannelId, onMessageSent]);\n\n  return (\n    <InputContainer>\n      <StyledInput\n        value={content}\n        onChange={(e) => setContent(e.target.value)}\n        onKeyPress={handleKeyPress}\n        placeholder=\"Type a message...\"\n        rows={1}\n      />\n    </InputContainer>\n  );\n};\n\nexport default MessageInput; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}