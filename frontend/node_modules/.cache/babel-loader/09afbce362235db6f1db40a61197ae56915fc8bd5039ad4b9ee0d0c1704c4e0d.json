{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, forwardRef, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { transformMessage } from '../../../utils/messageTransform';\nimport Message from '../Message';\nimport MessageReplies from '../MessageReplies';\nimport { deleteMessage, toggleExpanded, prependMessages } from '../../../store/messages/messagesSlice';\nimport { deleteMessage as deleteMessageApi, getChannelMessages } from '../../../services/api/chat';\nimport { setError } from '../../../store/chat/chatSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n_c = MessageListContainer;\nconst MessagesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: auto;\n`;\n_c2 = MessagesWrapper;\nconst LoadingIndicator = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.textLight};\n  font-family: 'Courier New', monospace;\n`;\n_c3 = LoadingIndicator;\nconst MessageWrapper = styled.div`\n  transition: all 0.3s ease;\n  padding: 4px;\n  border-radius: 4px;\n  background-color: ${props => props.$isSelected ? '#3a3a3a' : 'transparent'};\n  border-left: ${props => props.$isSelected ? '2px solid #666' : '2px solid transparent'};\n  \n  &.highlight {\n    animation: flash 1s;\n  }\n\n  @keyframes flash {\n    0% { background-color: #4a4a4a; }\n    100% { background-color: ${props => props.$isSelected ? '#3a3a3a' : 'transparent'}; }\n  }\n`;\n_c4 = MessageWrapper;\nconst MessageList = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c5 = _s((props, ref) => {\n  _s();\n  const {\n    messages,\n    selectedMessageId\n  } = props;\n  const dispatch = useDispatch();\n  const containerRef = useRef(null);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [page, setPage] = useState(0);\n  const [replyToMessage, setReplyToMessage] = useState(null);\n  const PAGE_SIZE = 50;\n  const scrollLockRef = useRef(null);\n  const loadedRepliesRef = useRef(new Set());\n  const lastMessageTimestamp = useRef(null);\n  const [isAutoScrollEnabled, setIsAutoScrollEnabled] = useState(true);\n  const highlightTimeoutRef = useRef();\n  const {\n    currentUser,\n    users,\n    activeChannelId\n  } = useSelector(state => ({\n    currentUser: state.auth.user,\n    users: state.chat.users,\n    activeChannelId: state.chat.activeChannelId\n  }));\n\n  // Handle scroll and auto-scroll behavior\n  const handleScroll = useCallback(event => {\n    const container = event.currentTarget;\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight\n    } = container;\n\n    // Check if we're near the top for loading more messages\n    if (scrollTop <= 100 && !isLoadingMore) {\n      loadMoreMessages();\n    }\n\n    // Enable auto-scroll only when we're near the bottom and no message is selected\n    const isNearBottom = scrollTop + clientHeight >= scrollHeight - 50;\n    setIsAutoScrollEnabled(isNearBottom && !selectedMessageId);\n  }, [loadMoreMessages, isLoadingMore, selectedMessageId]);\n\n  // Auto-scroll to bottom for new messages\n  useEffect(() => {\n    if (isAutoScrollEnabled && containerRef.current && !selectedMessageId) {\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\n    }\n  }, [messages, isAutoScrollEnabled, selectedMessageId]);\n\n  // Enhanced scroll to selected message with highlight effect\n  useEffect(() => {\n    if (selectedMessageId && containerRef.current) {\n      const messageElement = containerRef.current.querySelector(`[data-message-id=\"${selectedMessageId}\"]`);\n      if (messageElement) {\n        // Scroll the message into view\n        messageElement.scrollIntoView({\n          behavior: 'smooth',\n          block: 'center'\n        });\n\n        // Add highlight effect\n        messageElement.classList.add('highlight');\n\n        // Clear any existing timeout\n        if (highlightTimeoutRef.current) {\n          clearTimeout(highlightTimeoutRef.current);\n        }\n\n        // Remove highlight class after animation\n        highlightTimeoutRef.current = setTimeout(() => {\n          messageElement.classList.remove('highlight');\n        }, 1000);\n      }\n    }\n\n    // Cleanup\n    return () => {\n      if (highlightTimeoutRef.current) {\n        clearTimeout(highlightTimeoutRef.current);\n      }\n    };\n  }, [selectedMessageId]);\n\n  // Enhanced fetch selected message\n  useEffect(() => {\n    const fetchSelectedMessage = async () => {\n      if (selectedMessageId && activeChannelId && !messages.find(msg => msg.id === selectedMessageId)) {\n        try {\n          setIsLoadingMore(true);\n          const response = await getChannelMessages(activeChannelId, PAGE_SIZE);\n          const transformedMessages = response.map(transformMessage);\n\n          // Check if the selected message is in the response\n          const messageFound = transformedMessages.some(msg => msg.id === selectedMessageId);\n          if (messageFound) {\n            dispatch(prependMessages({\n              channelId: activeChannelId,\n              messages: transformedMessages\n            }));\n          } else {\n            // If message not found in first page, try to fetch more\n            const moreMessages = await getChannelMessages(activeChannelId, PAGE_SIZE, PAGE_SIZE);\n            const moreTransformedMessages = moreMessages.map(transformMessage);\n            dispatch(prependMessages({\n              channelId: activeChannelId,\n              messages: moreTransformedMessages\n            }));\n          }\n        } catch (error) {\n          console.error('Error fetching selected message:', error);\n          dispatch(setError('Failed to load message'));\n        } finally {\n          setIsLoadingMore(false);\n        }\n      }\n    };\n    fetchSelectedMessage();\n  }, [selectedMessageId, activeChannelId, messages, dispatch]);\n  const handleDeleteMessage = async messageId => {\n    try {\n      await deleteMessageApi(messageId);\n      if (activeChannelId) {\n        dispatch(deleteMessage({\n          channelId: activeChannelId,\n          messageId\n        }));\n      }\n    } catch (error) {\n      console.error('Error deleting message:', error);\n    }\n  };\n  const handleToggleReplies = async messageId => {\n    if (!activeChannelId) return;\n    const message = messages.find(m => m.id === messageId);\n    if (!message) return;\n    dispatch(toggleExpanded({\n      channelId: activeChannelId,\n      messageId\n    }));\n  };\n  const handleReply = messageId => {\n    const message = messages.find(m => m.id === messageId);\n    if (message) {\n      setReplyToMessage(message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MessageListContainer, {\n    ref: containerRef,\n    onScroll: handleScroll,\n    children: [isLoadingMore && /*#__PURE__*/_jsxDEV(LoadingIndicator, {\n      children: \"Loading messages...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(MessagesWrapper, {\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(MessageWrapper, {\n        $isSelected: message.id === selectedMessageId,\n        \"data-message-id\": message.id,\n        children: [/*#__PURE__*/_jsxDEV(Message, {\n          message: message,\n          currentUser: currentUser,\n          users: users,\n          onDelete: () => handleDeleteMessage(message.id),\n          onToggleReplies: () => handleToggleReplies(message.id),\n          onReply: () => handleReply(message.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), message.isExpanded && message.replies && /*#__PURE__*/_jsxDEV(MessageReplies, {\n          replies: message.replies,\n          users: users,\n          currentUser: currentUser,\n          onDelete: handleDeleteMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}, \"OG3XXA5agnrwxlgCpAbgzOAzOcQ=\", false, function () {\n  return [useDispatch, useSelector];\n})), \"OG3XXA5agnrwxlgCpAbgzOAzOcQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c6 = MessageList;\nMessageList.displayName = 'MessageList';\nexport default MessageList;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"MessageListContainer\");\n$RefreshReg$(_c2, \"MessagesWrapper\");\n$RefreshReg$(_c3, \"LoadingIndicator\");\n$RefreshReg$(_c4, \"MessageWrapper\");\n$RefreshReg$(_c5, \"MessageList$forwardRef\");\n$RefreshReg$(_c6, \"MessageList\");","map":{"version":3,"names":["React","useEffect","useRef","forwardRef","useState","useCallback","styled","useSelector","useDispatch","transformMessage","Message","MessageReplies","deleteMessage","toggleExpanded","prependMessages","deleteMessageApi","getChannelMessages","setError","jsxDEV","_jsxDEV","MessageListContainer","div","_c","MessagesWrapper","_c2","LoadingIndicator","props","theme","colors","textLight","_c3","MessageWrapper","$isSelected","_c4","MessageList","_s","_c5","ref","messages","selectedMessageId","dispatch","containerRef","isLoadingMore","setIsLoadingMore","hasMore","setHasMore","page","setPage","replyToMessage","setReplyToMessage","PAGE_SIZE","scrollLockRef","loadedRepliesRef","Set","lastMessageTimestamp","isAutoScrollEnabled","setIsAutoScrollEnabled","highlightTimeoutRef","currentUser","users","activeChannelId","state","auth","user","chat","handleScroll","event","container","currentTarget","scrollTop","scrollHeight","clientHeight","loadMoreMessages","isNearBottom","current","messageElement","querySelector","scrollIntoView","behavior","block","classList","add","clearTimeout","setTimeout","remove","fetchSelectedMessage","find","msg","id","response","transformedMessages","map","messageFound","some","channelId","moreMessages","moreTransformedMessages","error","console","handleDeleteMessage","messageId","handleToggleReplies","message","m","handleReply","onScroll","children","fileName","_jsxFileName","lineNumber","columnNumber","onDelete","onToggleReplies","onReply","isExpanded","replies","_c6","displayName","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageList/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, forwardRef, useState, useCallback, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState, StoreMessage, User } from '../../../types';\nimport { transformMessage } from '../../../utils/messageTransform';\nimport Message from '../Message';\nimport MessageReplies from '../MessageReplies';\nimport ReplyModal from '../ReplyModal';\nimport { deleteMessage, toggleExpanded, prependMessages, addMessage, setMessages, setReplies, updateMessage } from '../../../store/messages/messagesSlice';\nimport { deleteMessage as deleteMessageApi, getChannelMessages, createReply, getReplies } from '../../../services/api/chat';\nimport { setError } from '../../../store/chat/chatSlice';\nimport { toast } from 'react-toastify';\nimport WebSocketService from '../../../services/websocket';\n\ninterface MessageListProps {\n  messages: StoreMessage[];\n  selectedMessageId?: string | null;\n}\n\nconst MessageListContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nconst MessagesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: auto;\n`;\n\nconst LoadingIndicator = styled.div`\n  text-align: center;\n  padding: 8px;\n  color: ${props => props.theme.colors.textLight};\n  font-family: 'Courier New', monospace;\n`;\n\nconst MessageWrapper = styled.div<{ $isSelected?: boolean }>`\n  transition: all 0.3s ease;\n  padding: 4px;\n  border-radius: 4px;\n  background-color: ${props => props.$isSelected ? '#3a3a3a' : 'transparent'};\n  border-left: ${props => props.$isSelected ? '2px solid #666' : '2px solid transparent'};\n  \n  &.highlight {\n    animation: flash 1s;\n  }\n\n  @keyframes flash {\n    0% { background-color: #4a4a4a; }\n    100% { background-color: ${props => props.$isSelected ? '#3a3a3a' : 'transparent'}; }\n  }\n`;\n\nconst MessageList = forwardRef<HTMLDivElement, MessageListProps>((props, ref) => {\n  const { messages, selectedMessageId } = props;\n  const dispatch = useDispatch();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [page, setPage] = useState(0);\n  const [replyToMessage, setReplyToMessage] = useState<StoreMessage | null>(null);\n  const PAGE_SIZE = 50;\n  const scrollLockRef = useRef<{ position: number; height: number } | null>(null);\n  const loadedRepliesRef = useRef<Set<string>>(new Set());\n  const lastMessageTimestamp = useRef<number | null>(null);\n  const [isAutoScrollEnabled, setIsAutoScrollEnabled] = useState(true);\n  const highlightTimeoutRef = useRef<NodeJS.Timeout>();\n\n  const { currentUser, users, activeChannelId } = useSelector((state: RootState) => ({\n    currentUser: state.auth.user,\n    users: state.chat.users as { [key: string]: User },\n    activeChannelId: state.chat.activeChannelId\n  }));\n\n  // Handle scroll and auto-scroll behavior\n  const handleScroll = useCallback((event: React.UIEvent<HTMLDivElement>) => {\n    const container = event.currentTarget;\n    const { scrollTop, scrollHeight, clientHeight } = container;\n    \n    // Check if we're near the top for loading more messages\n    if (scrollTop <= 100 && !isLoadingMore) {\n      loadMoreMessages();\n    }\n\n    // Enable auto-scroll only when we're near the bottom and no message is selected\n    const isNearBottom = scrollTop + clientHeight >= scrollHeight - 50;\n    setIsAutoScrollEnabled(isNearBottom && !selectedMessageId);\n  }, [loadMoreMessages, isLoadingMore, selectedMessageId]);\n\n  // Auto-scroll to bottom for new messages\n  useEffect(() => {\n    if (isAutoScrollEnabled && containerRef.current && !selectedMessageId) {\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\n    }\n  }, [messages, isAutoScrollEnabled, selectedMessageId]);\n\n  // Enhanced scroll to selected message with highlight effect\n  useEffect(() => {\n    if (selectedMessageId && containerRef.current) {\n      const messageElement = containerRef.current.querySelector(`[data-message-id=\"${selectedMessageId}\"]`) as HTMLElement;\n      if (messageElement) {\n        // Scroll the message into view\n        messageElement.scrollIntoView({\n          behavior: 'smooth',\n          block: 'center'\n        });\n\n        // Add highlight effect\n        messageElement.classList.add('highlight');\n        \n        // Clear any existing timeout\n        if (highlightTimeoutRef.current) {\n          clearTimeout(highlightTimeoutRef.current);\n        }\n        \n        // Remove highlight class after animation\n        highlightTimeoutRef.current = setTimeout(() => {\n          messageElement.classList.remove('highlight');\n        }, 1000);\n      }\n    }\n\n    // Cleanup\n    return () => {\n      if (highlightTimeoutRef.current) {\n        clearTimeout(highlightTimeoutRef.current);\n      }\n    };\n  }, [selectedMessageId]);\n\n  // Enhanced fetch selected message\n  useEffect(() => {\n    const fetchSelectedMessage = async () => {\n      if (selectedMessageId && activeChannelId && !messages.find(msg => msg.id === selectedMessageId)) {\n        try {\n          setIsLoadingMore(true);\n          const response = await getChannelMessages(activeChannelId, PAGE_SIZE);\n          const transformedMessages = response.map(transformMessage);\n          \n          // Check if the selected message is in the response\n          const messageFound = transformedMessages.some(msg => msg.id === selectedMessageId);\n          \n          if (messageFound) {\n            dispatch(prependMessages({\n              channelId: activeChannelId,\n              messages: transformedMessages\n            }));\n          } else {\n            // If message not found in first page, try to fetch more\n            const moreMessages = await getChannelMessages(activeChannelId, PAGE_SIZE, PAGE_SIZE);\n            const moreTransformedMessages = moreMessages.map(transformMessage);\n            dispatch(prependMessages({\n              channelId: activeChannelId,\n              messages: moreTransformedMessages\n            }));\n          }\n        } catch (error) {\n          console.error('Error fetching selected message:', error);\n          dispatch(setError('Failed to load message'));\n        } finally {\n          setIsLoadingMore(false);\n        }\n      }\n    };\n\n    fetchSelectedMessage();\n  }, [selectedMessageId, activeChannelId, messages, dispatch]);\n\n  const handleDeleteMessage = async (messageId: string) => {\n    try {\n      await deleteMessageApi(messageId);\n      if (activeChannelId) {\n        dispatch(deleteMessage({ channelId: activeChannelId, messageId }));\n      }\n    } catch (error) {\n      console.error('Error deleting message:', error);\n    }\n  };\n\n  const handleToggleReplies = async (messageId: string) => {\n    if (!activeChannelId) return;\n\n    const message = messages.find(m => m.id === messageId);\n    if (!message) return;\n\n    dispatch(toggleExpanded({ channelId: activeChannelId, messageId }));\n  };\n\n  const handleReply = (messageId: string) => {\n    const message = messages.find(m => m.id === messageId);\n    if (message) {\n      setReplyToMessage(message);\n    }\n  };\n\n  return (\n    <MessageListContainer \n      ref={containerRef}\n      onScroll={handleScroll}\n    >\n      {isLoadingMore && <LoadingIndicator>Loading messages...</LoadingIndicator>}\n      <MessagesWrapper>\n        {messages.map(message => (\n          <MessageWrapper\n            key={message.id}\n            $isSelected={message.id === selectedMessageId}\n            data-message-id={message.id}\n          >\n            <Message\n              message={message}\n              currentUser={currentUser}\n              users={users}\n              onDelete={() => handleDeleteMessage(message.id)}\n              onToggleReplies={() => handleToggleReplies(message.id)}\n              onReply={() => handleReply(message.id)}\n            />\n            {message.isExpanded && message.replies && (\n              <MessageReplies\n                replies={message.replies}\n                users={users}\n                currentUser={currentUser}\n                onDelete={handleDeleteMessage}\n              />\n            )}\n          </MessageWrapper>\n        ))}\n      </MessagesWrapper>\n    </MessageListContainer>\n  );\n});\n\nMessageList.displayName = 'MessageList';\n\nexport default MessageList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}