{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageInput\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport wsService from '../../../services/websocket';\nimport { sendMessage } from '../../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputContainer = styled.div`\n  padding: 16px;\n  position: relative;\n`;\n_c = InputContainer;\nconst Input = styled.input`\n  width: 100%;\n  padding: 8px;\n  border: 2px solid ${props => props.theme.colors.border};\n  background: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'VT323', monospace;\n\n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.colors.primary};\n  }\n\n  &:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;\n_c2 = Input;\nconst ErrorMessage = styled.div`\n  color: ${props => props.theme.colors.error};\n  font-family: 'VT323', monospace;\n  font-size: 0.875rem;\n  margin-top: 4px;\n  padding: 4px;\n`;\n_c3 = ErrorMessage;\nconst MessageInput = ({\n  channelId\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleKeyPress = async e => {\n    if (e.key === 'Enter' && message.trim() && channelId) {\n      setError(null);\n      setIsLoading(true);\n      try {\n        // Send via WebSocket first\n        await wsService.sendMessage(channelId, message.trim());\n\n        // Also send via API to ensure message is stored\n        const response = await sendMessage({\n          channelId,\n          content: message.trim()\n        });\n        setMessage('');\n      } catch (error) {\n        console.error('Failed to send message:', error);\n        setError('Failed to send message. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  const handleChange = e => {\n    setMessage(e.target.value);\n    if (error) {\n      setError(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(InputContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      value: message,\n      onChange: handleChange,\n      onKeyPress: handleKeyPress,\n      placeholder: \"Type a message...\",\n      disabled: isLoading || !channelId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageInput, \"aYwsb6a3EkVv9nHiPRwdUuI5994=\");\n_c4 = MessageInput;\nexport default MessageInput;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"InputContainer\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"ErrorMessage\");\n$RefreshReg$(_c4, \"MessageInput\");","map":{"version":3,"names":["React","useState","styled","wsService","sendMessage","jsxDEV","_jsxDEV","InputContainer","div","_c","Input","input","props","theme","colors","border","background","text","primary","_c2","ErrorMessage","error","_c3","MessageInput","channelId","_s","message","setMessage","setError","isLoading","setIsLoading","handleKeyPress","e","key","trim","response","content","console","handleChange","target","value","children","type","onChange","onKeyPress","placeholder","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageInput/index.tsx"],"sourcesContent":["import React, { useState, KeyboardEvent } from 'react';\nimport styled from 'styled-components';\nimport wsService from '../../../services/websocket';\nimport { sendMessage } from '../../../services/api';\n\ninterface MessageInputProps {\n  channelId: string | null;\n}\n\nconst InputContainer = styled.div`\n  padding: 16px;\n  position: relative;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 8px;\n  border: 2px solid ${props => props.theme.colors.border};\n  background: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'VT323', monospace;\n\n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.colors.primary};\n  }\n\n  &:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: ${props => props.theme.colors.error};\n  font-family: 'VT323', monospace;\n  font-size: 0.875rem;\n  margin-top: 4px;\n  padding: 4px;\n`;\n\nconst MessageInput: React.FC<MessageInputProps> = ({ channelId }) => {\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleKeyPress = async (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter' && message.trim() && channelId) {\n      setError(null);\n      setIsLoading(true);\n\n      try {\n        // Send via WebSocket first\n        await wsService.sendMessage(channelId, message.trim());\n        \n        // Also send via API to ensure message is stored\n        const response = await sendMessage({\n          channelId,\n          content: message.trim()\n        });\n        \n        setMessage('');\n      } catch (error) {\n        console.error('Failed to send message:', error);\n        setError('Failed to send message. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setMessage(e.target.value);\n    if (error) {\n      setError(null);\n    }\n  };\n\n  return (\n    <InputContainer>\n      <Input\n        type=\"text\"\n        value={message}\n        onChange={handleChange}\n        onKeyPress={handleKeyPress}\n        placeholder=\"Type a message...\"\n        disabled={isLoading || !channelId}\n      />\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n    </InputContainer>\n  );\n};\n\nexport default MessageInput; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}