{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\MessageReplies\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport Message from '../Message';\nimport { addReaction, removeReaction } from '../../../services/api/reactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RepliesContainer = styled.div`\n  margin-left: 24px;\n  border-left: 1px solid ${props => props.theme.colors.border};\n  padding-left: 8px;\n`;\n_c = RepliesContainer;\nconst ReplyWrapper = styled.div`\n  margin-top: 4px;\n  opacity: 0.9;\n`;\n_c2 = ReplyWrapper;\nconst MessageReplies = ({\n  parentId,\n  replies = [],\n  currentUserId,\n  isExpanded,\n  onToggleReplies,\n  onDelete\n}) => {\n  _s();\n  const {\n    users\n  } = useSelector(state => ({\n    users: state.chat.users\n  }));\n  const handleReply = messageId => {\n    // Replies to replies are not supported\n    console.log('Replies to replies are not supported');\n  };\n  const handleToggleReplies = () => {\n    // Replies of replies are not supported\n  };\n  const handleReactionAdd = async (messageId, emoji) => {\n    try {\n      await addReaction(messageId, emoji);\n    } catch (error) {\n      console.error('Failed to add reaction to reply:', error);\n    }\n  };\n  const handleReactionRemove = async (messageId, emoji) => {\n    try {\n      await removeReaction(messageId, emoji);\n    } catch (error) {\n      console.error('Failed to remove reaction from reply:', error);\n    }\n  };\n\n  // Sort replies by creation time\n  const sortedReplies = [...replies].sort((a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime());\n  return /*#__PURE__*/_jsxDEV(RepliesContainer, {\n    children: sortedReplies.map(reply => {\n      var _users$reply$userId;\n      return /*#__PURE__*/_jsxDEV(ReplyWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          id: reply.id,\n          content: reply.content,\n          sender: ((_users$reply$userId = users[reply.userId]) === null || _users$reply$userId === void 0 ? void 0 : _users$reply$userId.username) || reply.userId,\n          timestamp: reply.createdAt,\n          userId: reply.userId,\n          currentUserId: currentUserId,\n          onDelete: () => onDelete(reply.id),\n          replyCount: 0,\n          isExpanded: false,\n          onToggleReplies: handleToggleReplies,\n          onReply: () => handleReply(reply.id),\n          isReply: true,\n          reactions: reply.reactions || [],\n          onReactionAdd: emoji => handleReactionAdd(reply.id, emoji),\n          onReactionRemove: emoji => handleReactionRemove(reply.id, emoji)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, reply.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageReplies, \"V/z1XVlAcsE+Fi5UJdza+2p1LZc=\", false, function () {\n  return [useSelector];\n});\n_c3 = MessageReplies;\nexport default MessageReplies;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"RepliesContainer\");\n$RefreshReg$(_c2, \"ReplyWrapper\");\n$RefreshReg$(_c3, \"MessageReplies\");","map":{"version":3,"names":["React","styled","useSelector","Message","addReaction","removeReaction","jsxDEV","_jsxDEV","RepliesContainer","div","props","theme","colors","border","_c","ReplyWrapper","_c2","MessageReplies","parentId","replies","currentUserId","isExpanded","onToggleReplies","onDelete","_s","users","state","chat","handleReply","messageId","console","log","handleToggleReplies","handleReactionAdd","emoji","error","handleReactionRemove","sortedReplies","sort","a","b","Date","createdAt","getTime","children","map","reply","_users$reply$userId","id","content","sender","userId","username","timestamp","replyCount","onReply","isReply","reactions","onReactionAdd","onReactionRemove","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/MessageReplies/index.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { RootState, StoreMessage, User } from '../../../types';\nimport Message from '../Message';\nimport { addReaction, removeReaction } from '../../../services/api/reactions';\n\ninterface MessageRepliesProps {\n  parentId: string;\n  replies?: StoreMessage[];\n  currentUserId?: string;\n  isExpanded: boolean;\n  onToggleReplies: () => void;\n  onDelete: (messageId: string) => void;\n}\n\nconst RepliesContainer = styled.div`\n  margin-left: 24px;\n  border-left: 1px solid ${props => props.theme.colors.border};\n  padding-left: 8px;\n`;\n\nconst ReplyWrapper = styled.div`\n  margin-top: 4px;\n  opacity: 0.9;\n`;\n\nconst MessageReplies: React.FC<MessageRepliesProps> = ({\n  parentId,\n  replies = [],\n  currentUserId,\n  isExpanded,\n  onToggleReplies,\n  onDelete\n}) => {\n  const { users } = useSelector((state: RootState) => ({\n    users: state.chat.users as { [key: string]: User }\n  }));\n\n  const handleReply = (messageId: string) => {\n    // Replies to replies are not supported\n    console.log('Replies to replies are not supported');\n  };\n\n  const handleToggleReplies = () => {\n    // Replies of replies are not supported\n  };\n\n  const handleReactionAdd = async (messageId: string, emoji: string) => {\n    try {\n      await addReaction(messageId, emoji);\n    } catch (error) {\n      console.error('Failed to add reaction to reply:', error);\n    }\n  };\n\n  const handleReactionRemove = async (messageId: string, emoji: string) => {\n    try {\n      await removeReaction(messageId, emoji);\n    } catch (error) {\n      console.error('Failed to remove reaction from reply:', error);\n    }\n  };\n\n  // Sort replies by creation time\n  const sortedReplies = [...replies].sort(\n    (a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n  );\n\n  return (\n    <RepliesContainer>\n      {sortedReplies.map((reply) => (\n        <ReplyWrapper key={reply.id}>\n          <Message\n            id={reply.id}\n            content={reply.content}\n            sender={users[reply.userId]?.username || reply.userId}\n            timestamp={reply.createdAt}\n            userId={reply.userId}\n            currentUserId={currentUserId}\n            onDelete={() => onDelete(reply.id)}\n            replyCount={0}\n            isExpanded={false}\n            onToggleReplies={handleToggleReplies}\n            onReply={() => handleReply(reply.id)}\n            isReply={true}\n            reactions={reply.reactions || []}\n            onReactionAdd={(emoji) => handleReactionAdd(reply.id, emoji)}\n            onReactionRemove={(emoji) => handleReactionRemove(reply.id, emoji)}\n          />\n        </ReplyWrapper>\n      ))}\n    </RepliesContainer>\n  );\n};\n\nexport default MessageReplies; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}