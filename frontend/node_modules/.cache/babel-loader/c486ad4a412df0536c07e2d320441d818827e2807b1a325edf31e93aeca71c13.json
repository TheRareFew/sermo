{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/types/index.ts"],"sourcesContent":["// User Types\nexport type UserStatus = 'online' | 'offline' | 'away' | 'busy';\n\nexport interface User {\n  id: string;\n  username: string;\n  status: UserStatus;\n  avatar_url?: string;\n}\n\n// Base types\nexport interface Channel {\n  id: string;\n  name: string;\n  description?: string;\n  is_direct_message: boolean;\n  is_public: boolean;\n  created_at: string;\n  created_by_id: string;\n  members: string[];\n  unreadCount: number;\n}\n\nexport interface RawMessage {\n  id: number | string;\n  content: string;\n  channel_id: number | string;\n  sender_id: number | string;\n  created_at: string;\n  updated_at?: string;\n  is_system?: boolean;\n  parent_id?: number | string;\n  reply_count?: number;\n  reactions?: Reaction[];\n  attachments?: Attachment[];\n}\n\nexport interface Message {\n  id: string;\n  content: string;\n  sender_id: string;\n  channel_id: string;\n  created_at: string;\n  updated_at: string;\n  is_system?: boolean;\n  parent_id?: string;\n  reply_count?: number;\n  reactions?: Reaction[];\n  attachments?: Attachment[];\n}\n\n// Store Message type\nexport interface StoreMessage {\n  id: string;\n  content: string;\n  channelId: string;\n  userId: string;\n  reactions: Reaction[];\n  attachments: Attachment[];\n  createdAt: string;\n  updatedAt: string;\n  parentId?: string;\n  replyCount: number;\n  isExpanded?: boolean;\n  repliesLoaded?: boolean;\n  replies?: StoreMessage[];\n}\n\n// Attachment type\nexport interface Attachment {\n  id: string;\n  type: 'image' | 'file';\n  url: string;\n  name: string;\n  size: number;\n}\n\n// Reaction type\nexport interface Reaction {\n  id: string;\n  messageId: string;\n  userId: string;\n  emoji: string;\n  createdAt: string;\n}\n\n// Auth types\nexport interface AuthResponse {\n  token: string;\n  user: User;\n}\n\nexport interface ApiAuthResponse {\n  access_token: string;\n  token_type: string;\n  user: {\n    id: string;\n    username: string;\n    email: string;\n    full_name: string;\n    status: 'online' | 'offline' | 'away' | 'busy';\n    last_seen: string;\n  };\n}\n\n// State types\nexport interface AuthState {\n  isAuthenticated: boolean;\n  user: User | null;\n  token: string | null;\n  loading: boolean;\n  error: string | null;\n}\n\nexport interface ChannelsState {\n  channels: Channel[];\n  activeChannel: Channel | null;\n  loading: boolean;\n  error: string | null;\n}\n\nexport interface ChatState {\n  activeChannelId: string | null;\n  channels: Channel[];\n  users: { [key: string]: User };\n  loading: boolean;\n  error: string | null;\n}\n\nexport interface MessagesState {\n  messagesByChannel: {\n    [channelId: string]: StoreMessage[];\n  };\n  loading: boolean;\n  error: string | null;\n}\n\nexport interface UsersState {\n  users: User[];\n  onlineUsers: string[];\n  loading: boolean;\n  error: string | null;\n}\n\n// WebSocket message types\nexport type WebSocketMessageType = \n  | 'join'\n  | 'joined'\n  | 'message'\n  | 'message_sent'\n  | 'message_updated'\n  | 'new_message'\n  | 'new_reply'\n  | 'message_deleted'\n  | 'channel_created'\n  | 'channel_updated'\n  | 'channel_deleted'\n  | 'unread_count_updated'\n  | 'user_status'\n  | 'error'\n  | 'ping'\n  | 'pong'\n  | 'reaction_added'\n  | 'reaction_removed';\n\nexport interface WebSocketMessageData {\n  channel_id?: number;\n  message_id?: string;\n  content?: string;\n  id?: string;\n  user_id?: string;\n  status?: UserStatus;\n  count?: number;\n  message?: RawMessage;\n  error?: string;\n  parent_id?: string;\n  reaction?: Reaction;\n  emoji?: string;\n}\n\nexport interface WebSocketMessage {\n  type: WebSocketMessageType;\n  data?: WebSocketMessageData;\n  message?: string; // For error messages\n}\n\n// Root State type\nexport interface RootState {\n  auth: AuthState;\n  chat: ChatState;\n  messages: MessagesState;\n  users: UsersState;\n}\n\nexport interface SearchResult {\n  channels: ChannelSearchResult[];\n  messages: MessageSearchResult[];\n  files: FileSearchResult[];\n}\n\nexport interface ChannelSearchResult {\n  id: string;\n  name: string;\n  description?: string;\n  is_direct_message: boolean;\n  member_count: number;\n}\n\nexport interface MessageSearchResult {\n  id: string;\n  content: string;\n  created_at: string;\n  sender_id: string;\n  channel_id: string;\n  channel_name: string;\n}\n\nexport interface FileSearchResult {\n  id: string;\n  filename: string;\n  file_type: string;\n  file_path: string;\n  created_at: string;\n  channel_id: string;\n  channel_name: string;\n} "],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}