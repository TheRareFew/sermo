{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\layout\\\\MainLayout\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useMemo, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { prependMessages } from '../../../store/messages/messagesSlice';\nimport { transformMessage } from '../../../utils/messageTransform';\nimport Button from '../../common/Button';\nimport MessageList from '../../chat/MessageList';\nimport { getChannelMessages } from '../../../services/api/chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'VT323', monospace;\n`;\n_c = MainContainer;\nconst Sidebar = styled.div`\n  width: 200px;\n  border-right: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  flex-direction: column;\n`;\nconst ChannelList = styled.div`\n  flex: 1;\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\nconst UserList = styled.div`\n  height: 200px;\n  padding: 16px;\n  border-top: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\nconst ChatArea = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n`;\nconst ChatHeader = styled.div`\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h1 {\n    margin: 0;\n    text-transform: uppercase;\n  }\n`;\nconst ChatInput = styled.div`\n  border-top: 2px solid ${props => props.theme.colors.border};\n`;\nconst LogoutButton = styled.button`\n  background: none;\n  border: 2px solid ${props => props.theme.colors.error};\n  color: ${props => props.theme.colors.error};\n  padding: 4px 8px;\n  font-family: 'VT323', monospace;\n  cursor: pointer;\n  text-transform: uppercase;\n\n  &:hover {\n    background: ${props => props.theme.colors.error};\n    color: ${props => props.theme.colors.background};\n  }\n`;\nconst ChannelHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n\n  h2 {\n    margin: 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\nconst CreateChannelButton = styled(Button)`\n  padding: 2px 8px;\n  font-size: 0.875rem;\n`;\nconst ChannelGroup = styled.div`\n  margin-bottom: 16px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\nconst GroupTitle = styled.h3`\n  margin: 0 0 8px 0;\n  padding: 4px 8px;\n  font-size: 0.875rem;\n  text-transform: uppercase;\n  color: ${props => props.theme.colors.textLight};\n  border-bottom: 1px solid ${props => props.theme.colors.border};\n  font-family: 'Courier New', monospace;\n`;\nconst ChannelActions = styled.div`\n  display: flex;\n  gap: 8px;\n`;\nconst SettingsButton = styled(Button)`\n  padding: 2px 8px;\n  font-size: 0.875rem;\n`;\nconst SearchContainer = styled.div`\n  position: relative;\n  margin-right: 16px;\n`;\n\n// Constants\nconst PAGE_SIZE = 50;\nconst MainLayout = () => {\n  _s();\n  const dispatch = useDispatch();\n  const messageListRef = useRef(null);\n  const [selectedMessageId, setSelectedMessageId] = useState(null);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const currentUser = useSelector(state => state.auth.user);\n  const activeChannelId = useSelector(state => state.chat.activeChannelId);\n  const userMap = useSelector(state => state.chat.users);\n  const channelMessages = useSelector(state => state.messages.messagesByChannel[activeChannelId || ''] || []);\n\n  // Transform StoreMessages to ExtendedMessages\n  const transformedMessages = useMemo(() => {\n    return channelMessages.map(message => {\n      const user = userMap[message.userId];\n      return {\n        id: message.id,\n        content: message.content,\n        sender: (user === null || user === void 0 ? void 0 : user.username) || message.userId,\n        timestamp: message.createdAt,\n        userId: message.userId,\n        replyCount: message.replyCount,\n        isExpanded: !!message.isExpanded,\n        parentId: message.parentId,\n        reactions: message.reactions,\n        sender_id: message.userId,\n        channel_id: message.channelId,\n        created_at: message.createdAt,\n        updated_at: message.updatedAt,\n        attachments: message.attachments,\n        is_system: false\n      };\n    });\n  }, [channelMessages, userMap]);\n  const handleLoadMore = useCallback(async () => {\n    if (!activeChannelId || isLoadingMore) return;\n    try {\n      setIsLoadingMore(true);\n      const olderMessages = await getChannelMessages(activeChannelId, 50,\n      // limit\n      channelMessages.length // skip\n      );\n      if (olderMessages.length > 0) {\n        const transformedOlderMessages = olderMessages.map(transformMessage);\n        dispatch(prependMessages({\n          channelId: activeChannelId,\n          messages: transformedOlderMessages\n        }));\n      }\n    } catch (error) {\n      console.error('Failed to load more messages:', error);\n    } finally {\n      setIsLoadingMore(false);\n    }\n  }, [activeChannelId, channelMessages.length, dispatch, isLoadingMore]);\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: /*#__PURE__*/_jsxDEV(MessagesContainer, {\n      children: /*#__PURE__*/_jsxDEV(MessageList, {\n        ref: messageListRef,\n        messages: transformedMessages,\n        selectedMessageId: selectedMessageId || undefined,\n        currentUser: currentUser,\n        isLoadingMore: isLoadingMore,\n        onLoadMore: handleLoadMore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n};\n_s(MainLayout, \"Co9hkTv7d792kWJP60JbWf4Ax4A=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c2 = MainLayout;\nexport default MainLayout;\nvar _c, _c2;\n$RefreshReg$(_c, \"MainContainer\");\n$RefreshReg$(_c2, \"MainLayout\");","map":{"version":3,"names":["React","useRef","useState","useMemo","useCallback","styled","useDispatch","useSelector","prependMessages","transformMessage","Button","MessageList","getChannelMessages","jsxDEV","_jsxDEV","MainContainer","div","props","theme","colors","background","text","_c","Sidebar","border","ChannelList","primary","UserList","ChatArea","ChatHeader","ChatInput","LogoutButton","button","error","ChannelHeader","CreateChannelButton","ChannelGroup","GroupTitle","h3","textLight","ChannelActions","SettingsButton","SearchContainer","PAGE_SIZE","MainLayout","_s","dispatch","messageListRef","selectedMessageId","setSelectedMessageId","isLoadingMore","setIsLoadingMore","currentUser","state","auth","user","activeChannelId","chat","userMap","users","channelMessages","messages","messagesByChannel","transformedMessages","map","message","userId","id","content","sender","username","timestamp","createdAt","replyCount","isExpanded","parentId","reactions","sender_id","channel_id","channelId","created_at","updated_at","updatedAt","attachments","is_system","handleLoadMore","olderMessages","length","transformedOlderMessages","console","children","MessagesContainer","ref","undefined","onLoadMore","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/layout/MainLayout/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useMemo, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../../store/auth/authSlice';\nimport {\n  setActiveChannel,\n  setChannels,\n  setUsers,\n  updateUserStatus,\n  addChannel,\n  removeChannel,\n  updateChannelUnreadCount,\n  setError\n} from '../../../store/chat/chatSlice';\nimport {\n  addMessage,\n  setMessages,\n  deleteMessage,\n  updateMessage,\n  prependMessages\n} from '../../../store/messages/messagesSlice';\nimport { transformMessage } from '../../../utils/messageTransform';\nimport Button from '../../common/Button';\nimport UserListItem from '../../chat/UserListItem';\nimport ChannelListItem from '../../chat/ChannelListItem';\nimport CreateChannelModal from '../../chat/CreateChannelModal';\nimport MessageInput from '../../chat/MessageInput';\nimport MessageList from '../../chat/MessageList';\nimport SearchBar from '../../common/SearchBar';\nimport SearchResults from '../../common/SearchResults';\nimport { getChannels, getChannelUsers, getChannelMessages, joinChannel, getReplies, getMessagePosition } from '../../../services/api/chat';\nimport { searchAll } from '../../../services/api/search';\nimport WebSocketService from '../../../services/websocket';\nimport { \n  RootState, \n  Channel, \n  User, \n  Message, \n  SearchResult,\n  UserStatus,\n  RawMessage,\n  StoreMessage,\n  ExtendedMessage\n} from '../../../types';\nimport ChannelSettings from '../../chat/ChannelSettings';\nimport { AppDispatch } from '../../../store';\nimport { store } from '../../../store';\n\nconst MainContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'VT323', monospace;\n`;\n\nconst Sidebar = styled.div`\n  width: 200px;\n  border-right: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ChannelList = styled.div`\n  flex: 1;\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst UserList = styled.div`\n  height: 200px;\n  padding: 16px;\n  border-top: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst ChatArea = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst ChatHeader = styled.div`\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h1 {\n    margin: 0;\n    text-transform: uppercase;\n  }\n`;\n\nconst ChatInput = styled.div`\n  border-top: 2px solid ${props => props.theme.colors.border};\n`;\n\nconst LogoutButton = styled.button`\n  background: none;\n  border: 2px solid ${props => props.theme.colors.error};\n  color: ${props => props.theme.colors.error};\n  padding: 4px 8px;\n  font-family: 'VT323', monospace;\n  cursor: pointer;\n  text-transform: uppercase;\n\n  &:hover {\n    background: ${props => props.theme.colors.error};\n    color: ${props => props.theme.colors.background};\n  }\n`;\n\nconst ChannelHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n\n  h2 {\n    margin: 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst CreateChannelButton = styled(Button)`\n  padding: 2px 8px;\n  font-size: 0.875rem;\n`;\n\nconst ChannelGroup = styled.div`\n  margin-bottom: 16px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst GroupTitle = styled.h3`\n  margin: 0 0 8px 0;\n  padding: 4px 8px;\n  font-size: 0.875rem;\n  text-transform: uppercase;\n  color: ${props => props.theme.colors.textLight};\n  border-bottom: 1px solid ${props => props.theme.colors.border};\n  font-family: 'Courier New', monospace;\n`;\n\nconst ChannelActions = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst SettingsButton = styled(Button)`\n  padding: 2px 8px;\n  font-size: 0.875rem;\n`;\n\nconst SearchContainer = styled.div`\n  position: relative;\n  margin-right: 16px;\n`;\n\n// Constants\nconst PAGE_SIZE = 50;\n\nconst MainLayout: React.FC = () => {\n  const dispatch = useDispatch();\n  const messageListRef = useRef<HTMLDivElement>(null);\n  const [selectedMessageId, setSelectedMessageId] = useState<string | null>(null);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const currentUser = useSelector((state: RootState) => state.auth.user);\n  const activeChannelId = useSelector((state: RootState) => state.chat.activeChannelId);\n  const userMap = useSelector((state: RootState) => state.chat.users);\n  const channelMessages = useSelector((state: RootState) => \n    state.messages.messagesByChannel[activeChannelId || ''] || []\n  );\n\n  // Transform StoreMessages to ExtendedMessages\n  const transformedMessages = useMemo(() => {\n    return channelMessages.map((message: StoreMessage): ExtendedMessage => {\n      const user = userMap[message.userId];\n      return {\n        id: message.id,\n        content: message.content,\n        sender: user?.username || message.userId,\n        timestamp: message.createdAt,\n        userId: message.userId,\n        replyCount: message.replyCount,\n        isExpanded: !!message.isExpanded,\n        parentId: message.parentId,\n        reactions: message.reactions,\n        sender_id: message.userId,\n        channel_id: message.channelId,\n        created_at: message.createdAt,\n        updated_at: message.updatedAt,\n        attachments: message.attachments,\n        is_system: false\n      };\n    });\n  }, [channelMessages, userMap]);\n\n  const handleLoadMore = useCallback(async () => {\n    if (!activeChannelId || isLoadingMore) return;\n\n    try {\n      setIsLoadingMore(true);\n      const olderMessages = await getChannelMessages(\n        activeChannelId,\n        50, // limit\n        channelMessages.length // skip\n      );\n\n      if (olderMessages.length > 0) {\n        const transformedOlderMessages = olderMessages.map(transformMessage);\n        dispatch(prependMessages({\n          channelId: activeChannelId,\n          messages: transformedOlderMessages\n        }));\n      }\n    } catch (error) {\n      console.error('Failed to load more messages:', error);\n    } finally {\n      setIsLoadingMore(false);\n    }\n  }, [activeChannelId, channelMessages.length, dispatch, isLoadingMore]);\n\n  return (\n    <MainContainer>\n      {/* ... other components ... */}\n      <MessagesContainer>\n        <MessageList\n          ref={messageListRef}\n          messages={transformedMessages}\n          selectedMessageId={selectedMessageId || undefined}\n          currentUser={currentUser}\n          isLoadingMore={isLoadingMore}\n          onLoadMore={handleLoadMore}\n        />\n      </MessagesContainer>\n      {/* ... other components ... */}\n    </MainContainer>\n  );\n};\n\nexport default MainLayout; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}