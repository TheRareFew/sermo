{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\layout\\\\MainLayout\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../../store/auth/authSlice';\nimport { setActiveChannel, setChannels, setUsers, updateUserStatus } from '../../../store/chat/chatSlice';\nimport { addMessage } from '../../../store/messages/messagesSlice';\nimport Button from '../../common/Button';\nimport UserListItem from '../../common/UserListItem';\nimport ChannelListItem from '../../common/ChannelListItem';\nimport CreateChannelModal from '../../chat/CreateChannelModal';\nimport MessageInput from '../../chat/MessageInput';\nimport MessageList from '../../chat/MessageList';\nimport SearchBar from '../../common/SearchBar';\nimport SearchResults from '../../common/SearchResults';\nimport wsService from '../../../services/websocket';\nimport { getChannels, getChannelUsers } from '../../../services/api/chat';\nimport { searchAll } from '../../../services/api/search';\nimport ChannelSettings from '../../chat/ChannelSettings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'VT323', monospace;\n`;\n_c = MainContainer;\nconst Sidebar = styled.div`\n  width: 200px;\n  border-right: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = Sidebar;\nconst ChannelList = styled.div`\n  flex: 1;\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n_c3 = ChannelList;\nconst UserList = styled.div`\n  height: 200px;\n  padding: 16px;\n  border-top: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n_c4 = UserList;\nconst ChatArea = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n`;\n_c5 = ChatArea;\nconst ChatHeader = styled.div`\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h1 {\n    margin: 0;\n    text-transform: uppercase;\n  }\n`;\n_c6 = ChatHeader;\nconst ChatInput = styled.div`\n  border-top: 2px solid ${props => props.theme.colors.border};\n`;\n_c7 = ChatInput;\nconst LogoutButton = styled.button`\n  background: none;\n  border: 2px solid ${props => props.theme.colors.error};\n  color: ${props => props.theme.colors.error};\n  padding: 4px 8px;\n  font-family: 'VT323', monospace;\n  cursor: pointer;\n  text-transform: uppercase;\n\n  &:hover {\n    background: ${props => props.theme.colors.error};\n    color: ${props => props.theme.colors.background};\n  }\n`;\n_c8 = LogoutButton;\nconst ChannelHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n\n  h2 {\n    margin: 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n_c9 = ChannelHeader;\nconst CreateChannelButton = styled(Button)`\n  padding: 2px 8px;\n  font-size: 0.875rem;\n`;\n_c10 = CreateChannelButton;\nconst ChannelGroup = styled.div`\n  margin-bottom: 16px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n_c11 = ChannelGroup;\nconst GroupTitle = styled.h3`\n  margin: 0 0 8px 0;\n  padding: 4px 8px;\n  font-size: 0.875rem;\n  text-transform: uppercase;\n  color: ${props => props.theme.colors.textLight};\n  border-bottom: 1px solid ${props => props.theme.colors.border};\n  font-family: 'Courier New', monospace;\n`;\n_c12 = GroupTitle;\nconst ChannelActions = styled.div`\n  display: flex;\n  gap: 8px;\n`;\nconst SettingsButton = styled(Button)`\n  padding: 2px 8px;\n  font-size: 0.875rem;\n`;\n_c13 = SettingsButton;\nconst SearchContainer = styled.div`\n  position: relative;\n  margin-right: 16px;\n`;\n_c14 = SearchContainer;\nconst MainLayout = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchResults, setSearchResults] = useState(null);\n  const [searchError, setSearchError] = useState();\n  const {\n    channels,\n    activeChannelId,\n    users\n  } = useSelector(state => ({\n    channels: state.chat.channels,\n    activeChannelId: state.chat.activeChannelId,\n    users: state.chat.users\n  }));\n  const activeChannel = channels.find(channel => channel.id === activeChannelId);\n\n  // Initial data fetch\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const fetchedChannels = await getChannels();\n        dispatch(setChannels(fetchedChannels));\n        if (fetchedChannels.length > 0) {\n          const channelUsers = await getChannelUsers(fetchedChannels[0].id);\n          dispatch(setUsers(channelUsers));\n          dispatch(setActiveChannel(fetchedChannels[0].id));\n        }\n      } catch (error) {\n        console.error('Failed to fetch initial data:', error);\n      }\n    };\n    fetchInitialData();\n    return () => {\n      wsService.disconnect();\n    };\n  }, [dispatch]);\n\n  // Handle channel switching and WebSocket connection\n  useEffect(() => {\n    let isMounted = true;\n    const connectToChannel = async () => {\n      if (!activeChannelId || isConnecting) return;\n      setIsConnecting(true);\n      try {\n        // First disconnect from any existing connection\n        wsService.disconnect();\n\n        // Wait a bit before reconnecting to avoid race conditions\n        await new Promise(resolve => setTimeout(resolve, 500));\n\n        // Connect to the new channel\n        await wsService.connect(activeChannelId);\n        if (!isMounted) return;\n\n        // After successful connection, join the channel\n        await wsService.joinChannel(activeChannelId);\n        if (!isMounted) return;\n\n        // After joining, fetch channel users\n        const channelUsers = await getChannelUsers(activeChannelId);\n        if (isMounted) {\n          dispatch(setUsers(channelUsers));\n        }\n      } catch (error) {\n        console.error('Error connecting to channel:', error);\n      } finally {\n        if (isMounted) {\n          setIsConnecting(false);\n        }\n      }\n    };\n    if (activeChannelId) {\n      connectToChannel();\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [activeChannelId, dispatch, isConnecting]);\n\n  // Handle WebSocket messages\n  useEffect(() => {\n    const handleWebSocketMessage = message => {\n      console.log('Received WebSocket message:', message);\n\n      // Handle broadcast messages\n      if (message.type === 'message' || message.type === 'new_reply') {\n        // Type guard to ensure we have a channel message\n        const isChannelMessage = msg => {\n          return (msg.type === 'message' || msg.type === 'new_reply') && 'message' in msg;\n        };\n        if (!isChannelMessage(message)) {\n          console.error('Invalid message format:', message);\n          return;\n        }\n        try {\n          const {\n            message: wsMessage\n          } = message;\n          const storeMessage = {\n            id: wsMessage.id.toString(),\n            content: wsMessage.content,\n            channelId: wsMessage.channel_id.toString(),\n            userId: wsMessage.sender_id.toString(),\n            reactions: [],\n            attachments: [],\n            createdAt: wsMessage.created_at,\n            updatedAt: wsMessage.created_at,\n            replyCount: 0,\n            isExpanded: false,\n            ...(message.type === 'new_reply' && message.parentId ? {\n              parentId: message.parentId.toString()\n            } : {})\n          };\n          dispatch(addMessage(storeMessage));\n        } catch (error) {\n          console.error('Error handling WebSocket message:', error);\n        }\n      }\n\n      // Handle status messages\n      if (message.type === 'user_status' || message.type === 'presence_update') {\n        const isStatusMessage = msg => {\n          return (msg.type === 'user_status' || msg.type === 'presence_update') && 'user_id' in msg && 'status' in msg;\n        };\n        if (!isStatusMessage(message)) {\n          console.error('Invalid status message format:', message);\n          return;\n        }\n        dispatch(updateUserStatus({\n          userId: message.user_id.toString(),\n          status: message.status\n        }));\n      }\n    };\n    const unsubscribe = wsService.onMessage(handleWebSocketMessage);\n    return () => unsubscribe();\n  }, [dispatch]);\n  const handleChannelClick = async channelId => {\n    if (channelId !== activeChannelId) {\n      dispatch(setActiveChannel(channelId));\n    }\n  };\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  // Sort and group channels\n  const sortedChannels = [...channels].sort((a, b) => {\n    // Sort by public/private first\n    if (a.is_public !== b.is_public) {\n      return a.is_public ? -1 : 1;\n    }\n    // Then sort by name\n    return a.name.localeCompare(b.name);\n  });\n  const publicChannels = sortedChannels.filter(channel => channel.is_public && !channel.is_direct_message);\n  const privateChannels = sortedChannels.filter(channel => !channel.is_public && !channel.is_direct_message);\n  const directMessages = sortedChannels.filter(channel => channel.is_direct_message);\n  const handleSearch = async query => {\n    if (!query.trim()) {\n      setSearchResults(null);\n      setSearchError(undefined);\n      return;\n    }\n    setIsSearching(true);\n    setSearchError(undefined);\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 10000); // 10s timeout\n\n      const results = await searchAll(query);\n      clearTimeout(timeoutId);\n      setSearchResults(results);\n    } catch (error) {\n      console.error('Search failed:', error);\n      if (error instanceof Error) {\n        if (error.name === 'AbortError') {\n          setSearchError('SEARCH TIMED OUT');\n        } else {\n          setSearchError('SEARCH FAILED');\n        }\n      }\n    } finally {\n      setIsSearching(false);\n    }\n  };\n  const handleSearchClose = () => {\n    setSearchResults(null);\n    setSearchError(undefined);\n  };\n  const handleSearchSelect = {\n    channel: channelId => {\n      handleChannelClick(channelId);\n      setSearchResults(null);\n    },\n    message: (channelId, messageId) => {\n      handleChannelClick(channelId);\n      // TODO: Implement scroll to message\n      setSearchResults(null);\n    },\n    file: fileId => {\n      // TODO: Implement file download/preview\n      setSearchResults(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(ChannelList, {\n        children: [/*#__PURE__*/_jsxDEV(ChannelHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Channels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CreateChannelButton, {\n            variant: \"secondary\",\n            size: \"small\",\n            onClick: () => setIsCreateModalOpen(true),\n            children: \"+New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), publicChannels.length > 0 && /*#__PURE__*/_jsxDEV(ChannelGroup, {\n          children: [/*#__PURE__*/_jsxDEV(GroupTitle, {\n            children: \"Public Channels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this), publicChannels.map(channel => /*#__PURE__*/_jsxDEV(ChannelListItem, {\n            name: channel.name,\n            isActive: channel.id === activeChannelId,\n            hasUnread: channel.unreadCount > 0,\n            isDirect: channel.is_direct_message,\n            isPublic: channel.is_public,\n            onClick: () => handleChannelClick(channel.id)\n          }, channel.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this), privateChannels.length > 0 && /*#__PURE__*/_jsxDEV(ChannelGroup, {\n          children: [/*#__PURE__*/_jsxDEV(GroupTitle, {\n            children: \"Private Channels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this), privateChannels.map(channel => /*#__PURE__*/_jsxDEV(ChannelListItem, {\n            name: channel.name,\n            isActive: channel.id === activeChannelId,\n            hasUnread: channel.unreadCount > 0,\n            isDirect: channel.is_direct_message,\n            isPublic: channel.is_public,\n            onClick: () => handleChannelClick(channel.id)\n          }, channel.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this), directMessages.length > 0 && /*#__PURE__*/_jsxDEV(ChannelGroup, {\n          children: [/*#__PURE__*/_jsxDEV(GroupTitle, {\n            children: \"Direct Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this), directMessages.map(channel => /*#__PURE__*/_jsxDEV(ChannelListItem, {\n            name: channel.name,\n            isActive: channel.id === activeChannelId,\n            hasUnread: channel.unreadCount > 0,\n            isDirect: channel.is_direct_message,\n            isPublic: channel.is_public,\n            onClick: () => handleChannelClick(channel.id)\n          }, channel.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserList, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Online Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), Object.values(users).map(user => /*#__PURE__*/_jsxDEV(UserListItem, {\n          username: user.username,\n          status: user.status\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatArea, {\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: activeChannel ? `${activeChannel.is_direct_message ? '@' : '#'}${activeChannel.name}` : 'Select a channel'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(SearchContainer, {\n            children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n              onSearch: handleSearch,\n              error: searchError,\n              onClickOutside: handleSearchClose\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this), (isSearching || searchResults) && !searchError && /*#__PURE__*/_jsxDEV(SearchResults, {\n              isLoading: isSearching,\n              channels: (searchResults === null || searchResults === void 0 ? void 0 : searchResults.channels) || [],\n              messages: (searchResults === null || searchResults === void 0 ? void 0 : searchResults.messages) || [],\n              files: (searchResults === null || searchResults === void 0 ? void 0 : searchResults.files) || [],\n              onSelectChannel: handleSearchSelect.channel,\n              onSelectMessage: handleSearchSelect.message,\n              onSelectFile: handleSearchSelect.file\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this), activeChannel && /*#__PURE__*/_jsxDEV(SettingsButton, {\n            variant: \"secondary\",\n            size: \"small\",\n            onClick: () => setIsSettingsOpen(true),\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n        channelId: activeChannelId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        children: /*#__PURE__*/_jsxDEV(MessageInput, {\n          channelId: activeChannelId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }, this), isCreateModalOpen && /*#__PURE__*/_jsxDEV(CreateChannelModal, {\n      isOpen: isCreateModalOpen,\n      onClose: () => setIsCreateModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 9\n    }, this), isSettingsOpen && activeChannel && /*#__PURE__*/_jsxDEV(ChannelSettings, {\n      isOpen: isSettingsOpen,\n      onClose: () => setIsSettingsOpen(false),\n      channel: activeChannel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 387,\n    columnNumber: 5\n  }, this);\n};\n_s(MainLayout, \"Bkiuc5F810/Wg+bjdywbUA+OKcA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c15 = MainLayout;\nexport default MainLayout;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"MainContainer\");\n$RefreshReg$(_c2, \"Sidebar\");\n$RefreshReg$(_c3, \"ChannelList\");\n$RefreshReg$(_c4, \"UserList\");\n$RefreshReg$(_c5, \"ChatArea\");\n$RefreshReg$(_c6, \"ChatHeader\");\n$RefreshReg$(_c7, \"ChatInput\");\n$RefreshReg$(_c8, \"LogoutButton\");\n$RefreshReg$(_c9, \"ChannelHeader\");\n$RefreshReg$(_c10, \"CreateChannelButton\");\n$RefreshReg$(_c11, \"ChannelGroup\");\n$RefreshReg$(_c12, \"GroupTitle\");\n$RefreshReg$(_c13, \"SettingsButton\");\n$RefreshReg$(_c14, \"SearchContainer\");\n$RefreshReg$(_c15, \"MainLayout\");","map":{"version":3,"names":["React","useEffect","useState","styled","useDispatch","useSelector","logout","setActiveChannel","setChannels","setUsers","updateUserStatus","addMessage","Button","UserListItem","ChannelListItem","CreateChannelModal","MessageInput","MessageList","SearchBar","SearchResults","wsService","getChannels","getChannelUsers","searchAll","ChannelSettings","jsxDEV","_jsxDEV","MainContainer","div","props","theme","colors","background","text","_c","Sidebar","border","_c2","ChannelList","primary","_c3","UserList","_c4","ChatArea","_c5","ChatHeader","_c6","ChatInput","_c7","LogoutButton","button","error","_c8","ChannelHeader","_c9","CreateChannelButton","_c10","ChannelGroup","_c11","GroupTitle","h3","textLight","_c12","ChannelActions","SettingsButton","_c13","SearchContainer","_c14","MainLayout","_s","dispatch","isCreateModalOpen","setIsCreateModalOpen","isSettingsOpen","setIsSettingsOpen","isConnecting","setIsConnecting","isSearching","setIsSearching","searchResults","setSearchResults","searchError","setSearchError","channels","activeChannelId","users","state","chat","activeChannel","find","channel","id","fetchInitialData","fetchedChannels","length","channelUsers","console","disconnect","isMounted","connectToChannel","Promise","resolve","setTimeout","connect","joinChannel","handleWebSocketMessage","message","log","type","isChannelMessage","msg","wsMessage","storeMessage","toString","content","channelId","channel_id","userId","sender_id","reactions","attachments","createdAt","created_at","updatedAt","replyCount","isExpanded","parentId","isStatusMessage","user_id","status","unsubscribe","onMessage","handleChannelClick","handleLogout","sortedChannels","sort","a","b","is_public","name","localeCompare","publicChannels","filter","is_direct_message","privateChannels","directMessages","handleSearch","query","trim","undefined","controller","AbortController","timeoutId","abort","results","clearTimeout","Error","handleSearchClose","handleSearchSelect","messageId","file","fileId","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","onClick","map","isActive","hasUnread","unreadCount","isDirect","isPublic","Object","values","user","username","style","display","alignItems","onSearch","onClickOutside","isLoading","messages","files","onSelectChannel","onSelectMessage","onSelectFile","isOpen","onClose","_c15","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/layout/MainLayout/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../../store/auth/authSlice';\nimport {\n  setActiveChannel,\n  setChannels,\n  setUsers,\n  updateUserStatus\n} from '../../../store/chat/chatSlice';\nimport { addMessage } from '../../../store/messages/messagesSlice';\nimport Button from '../../common/Button';\nimport UserListItem from '../../common/UserListItem';\nimport ChannelListItem from '../../common/ChannelListItem';\nimport CreateChannelModal from '../../chat/CreateChannelModal';\nimport MessageInput from '../../chat/MessageInput';\nimport MessageList from '../../chat/MessageList';\nimport SearchBar from '../../common/SearchBar';\nimport SearchResults from '../../common/SearchResults';\nimport wsService from '../../../services/websocket';\nimport { getChannels, getChannelUsers } from '../../../services/api/chat';\nimport { searchAll } from '../../../services/api/search';\nimport { RootState, WebSocketMessage, StoreMessage, Channel, User, WebSocketChannelMessage, WebSocketStatusMessage, SearchResult } from '../../../types';\nimport ChannelSettings from '../../chat/ChannelSettings';\nimport { AppDispatch } from '../../../store';\n\nconst MainContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'VT323', monospace;\n`;\n\nconst Sidebar = styled.div`\n  width: 200px;\n  border-right: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ChannelList = styled.div`\n  flex: 1;\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst UserList = styled.div`\n  height: 200px;\n  padding: 16px;\n  border-top: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst ChatArea = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst ChatHeader = styled.div`\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h1 {\n    margin: 0;\n    text-transform: uppercase;\n  }\n`;\n\nconst ChatInput = styled.div`\n  border-top: 2px solid ${props => props.theme.colors.border};\n`;\n\nconst LogoutButton = styled.button`\n  background: none;\n  border: 2px solid ${props => props.theme.colors.error};\n  color: ${props => props.theme.colors.error};\n  padding: 4px 8px;\n  font-family: 'VT323', monospace;\n  cursor: pointer;\n  text-transform: uppercase;\n\n  &:hover {\n    background: ${props => props.theme.colors.error};\n    color: ${props => props.theme.colors.background};\n  }\n`;\n\nconst ChannelHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n\n  h2 {\n    margin: 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst CreateChannelButton = styled(Button)`\n  padding: 2px 8px;\n  font-size: 0.875rem;\n`;\n\nconst ChannelGroup = styled.div`\n  margin-bottom: 16px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst GroupTitle = styled.h3`\n  margin: 0 0 8px 0;\n  padding: 4px 8px;\n  font-size: 0.875rem;\n  text-transform: uppercase;\n  color: ${props => props.theme.colors.textLight};\n  border-bottom: 1px solid ${props => props.theme.colors.border};\n  font-family: 'Courier New', monospace;\n`;\n\nconst ChannelActions = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst SettingsButton = styled(Button)`\n  padding: 2px 8px;\n  font-size: 0.875rem;\n`;\n\nconst SearchContainer = styled.div`\n  position: relative;\n  margin-right: 16px;\n`;\n\nconst MainLayout: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchResults, setSearchResults] = useState<SearchResult | null>(null);\n  const [searchError, setSearchError] = useState<string | undefined>();\n  \n  const { channels, activeChannelId, users } = useSelector((state: RootState) => ({\n    channels: state.chat.channels,\n    activeChannelId: state.chat.activeChannelId,\n    users: state.chat.users as { [key: string]: User }\n  }));\n  const activeChannel = channels.find(channel => channel.id === activeChannelId);\n\n  // Initial data fetch\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const fetchedChannels = await getChannels();\n        dispatch(setChannels(fetchedChannels));\n\n        if (fetchedChannels.length > 0) {\n          const channelUsers = await getChannelUsers(fetchedChannels[0].id);\n          dispatch(setUsers(channelUsers));\n          dispatch(setActiveChannel(fetchedChannels[0].id));\n        }\n      } catch (error) {\n        console.error('Failed to fetch initial data:', error);\n      }\n    };\n\n    fetchInitialData();\n    \n    return () => {\n      wsService.disconnect();\n    };\n  }, [dispatch]);\n\n  // Handle channel switching and WebSocket connection\n  useEffect(() => {\n    let isMounted = true;\n\n    const connectToChannel = async () => {\n      if (!activeChannelId || isConnecting) return;\n\n      setIsConnecting(true);\n      \n      try {\n        // First disconnect from any existing connection\n        wsService.disconnect();\n        \n        // Wait a bit before reconnecting to avoid race conditions\n        await new Promise(resolve => setTimeout(resolve, 500));\n        \n        // Connect to the new channel\n        await wsService.connect(activeChannelId);\n        \n        if (!isMounted) return;\n        \n        // After successful connection, join the channel\n        await wsService.joinChannel(activeChannelId);\n        \n        if (!isMounted) return;\n        \n        // After joining, fetch channel users\n        const channelUsers = await getChannelUsers(activeChannelId);\n        if (isMounted) {\n          dispatch(setUsers(channelUsers));\n        }\n      } catch (error) {\n        console.error('Error connecting to channel:', error);\n      } finally {\n        if (isMounted) {\n          setIsConnecting(false);\n        }\n      }\n    };\n\n    if (activeChannelId) {\n      connectToChannel();\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [activeChannelId, dispatch, isConnecting]);\n\n  // Handle WebSocket messages\n  useEffect(() => {\n    const handleWebSocketMessage = (message: WebSocketMessage) => {\n      console.log('Received WebSocket message:', message);\n      \n      // Handle broadcast messages\n      if (message.type === 'message' || message.type === 'new_reply') {\n        // Type guard to ensure we have a channel message\n        const isChannelMessage = (msg: WebSocketMessage): msg is WebSocketChannelMessage => {\n          return (msg.type === 'message' || msg.type === 'new_reply') && 'message' in msg;\n        };\n\n        if (!isChannelMessage(message)) {\n          console.error('Invalid message format:', message);\n          return;\n        }\n\n        try {\n          const { message: wsMessage } = message;\n          const storeMessage: StoreMessage = {\n            id: wsMessage.id.toString(),\n            content: wsMessage.content,\n            channelId: wsMessage.channel_id.toString(),\n            userId: wsMessage.sender_id.toString(),\n            reactions: [],\n            attachments: [],\n            createdAt: wsMessage.created_at,\n            updatedAt: wsMessage.created_at,\n            replyCount: 0,\n            isExpanded: false,\n            ...(message.type === 'new_reply' && message.parentId ? { parentId: message.parentId.toString() } : {})\n          };\n\n          dispatch(addMessage(storeMessage));\n        } catch (error) {\n          console.error('Error handling WebSocket message:', error);\n        }\n      }\n\n      // Handle status messages\n      if (message.type === 'user_status' || message.type === 'presence_update') {\n        const isStatusMessage = (msg: WebSocketMessage): msg is WebSocketStatusMessage => {\n          return (msg.type === 'user_status' || msg.type === 'presence_update') && 'user_id' in msg && 'status' in msg;\n        };\n\n        if (!isStatusMessage(message)) {\n          console.error('Invalid status message format:', message);\n          return;\n        }\n\n        dispatch(updateUserStatus({\n          userId: message.user_id.toString(),\n          status: message.status\n        }));\n      }\n    };\n\n    const unsubscribe = wsService.onMessage(handleWebSocketMessage);\n    return () => unsubscribe();\n  }, [dispatch]);\n\n  const handleChannelClick = async (channelId: string) => {\n    if (channelId !== activeChannelId) {\n      dispatch(setActiveChannel(channelId));\n    }\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  // Sort and group channels\n  const sortedChannels = [...channels].sort((a, b) => {\n    // Sort by public/private first\n    if (a.is_public !== b.is_public) {\n      return a.is_public ? -1 : 1;\n    }\n    // Then sort by name\n    return a.name.localeCompare(b.name);\n  });\n\n  const publicChannels = sortedChannels.filter(channel => channel.is_public && !channel.is_direct_message);\n  const privateChannels = sortedChannels.filter(channel => !channel.is_public && !channel.is_direct_message);\n  const directMessages = sortedChannels.filter(channel => channel.is_direct_message);\n\n  const handleSearch = async (query: string) => {\n    if (!query.trim()) {\n      setSearchResults(null);\n      setSearchError(undefined);\n      return;\n    }\n\n    setIsSearching(true);\n    setSearchError(undefined);\n\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 10000); // 10s timeout\n\n      const results = await searchAll(query);\n      clearTimeout(timeoutId);\n\n      setSearchResults(results);\n    } catch (error) {\n      console.error('Search failed:', error);\n      if (error instanceof Error) {\n        if (error.name === 'AbortError') {\n          setSearchError('SEARCH TIMED OUT');\n        } else {\n          setSearchError('SEARCH FAILED');\n        }\n      }\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const handleSearchClose = () => {\n    setSearchResults(null);\n    setSearchError(undefined);\n  };\n\n  const handleSearchSelect = {\n    channel: (channelId: string) => {\n      handleChannelClick(channelId);\n      setSearchResults(null);\n    },\n    message: (channelId: string, messageId: string) => {\n      handleChannelClick(channelId);\n      // TODO: Implement scroll to message\n      setSearchResults(null);\n    },\n    file: (fileId: string) => {\n      // TODO: Implement file download/preview\n      setSearchResults(null);\n    }\n  };\n\n  return (\n    <MainContainer>\n      <Sidebar>\n        <ChannelList>\n          <ChannelHeader>\n            <h2>Channels</h2>\n            <CreateChannelButton\n              variant=\"secondary\"\n              size=\"small\"\n              onClick={() => setIsCreateModalOpen(true)}\n            >\n              +New\n            </CreateChannelButton>\n          </ChannelHeader>\n\n          {publicChannels.length > 0 && (\n            <ChannelGroup>\n              <GroupTitle>Public Channels</GroupTitle>\n              {publicChannels.map((channel: Channel) => (\n                <ChannelListItem\n                  key={channel.id}\n                  name={channel.name}\n                  isActive={channel.id === activeChannelId}\n                  hasUnread={channel.unreadCount > 0}\n                  isDirect={channel.is_direct_message}\n                  isPublic={channel.is_public}\n                  onClick={() => handleChannelClick(channel.id)}\n                />\n              ))}\n            </ChannelGroup>\n          )}\n\n          {privateChannels.length > 0 && (\n            <ChannelGroup>\n              <GroupTitle>Private Channels</GroupTitle>\n              {privateChannels.map((channel: Channel) => (\n                <ChannelListItem\n                  key={channel.id}\n                  name={channel.name}\n                  isActive={channel.id === activeChannelId}\n                  hasUnread={channel.unreadCount > 0}\n                  isDirect={channel.is_direct_message}\n                  isPublic={channel.is_public}\n                  onClick={() => handleChannelClick(channel.id)}\n                />\n              ))}\n            </ChannelGroup>\n          )}\n\n          {directMessages.length > 0 && (\n            <ChannelGroup>\n              <GroupTitle>Direct Messages</GroupTitle>\n              {directMessages.map((channel: Channel) => (\n                <ChannelListItem\n                  key={channel.id}\n                  name={channel.name}\n                  isActive={channel.id === activeChannelId}\n                  hasUnread={channel.unreadCount > 0}\n                  isDirect={channel.is_direct_message}\n                  isPublic={channel.is_public}\n                  onClick={() => handleChannelClick(channel.id)}\n                />\n              ))}\n            </ChannelGroup>\n          )}\n        </ChannelList>\n        <UserList>\n          <h2>Online Users</h2>\n          {Object.values(users).map((user) => (\n            <UserListItem\n              key={user.id}\n              username={user.username}\n              status={user.status}\n            />\n          ))}\n        </UserList>\n      </Sidebar>\n      <ChatArea>\n        <ChatHeader>\n          <h1>{activeChannel ? `${activeChannel.is_direct_message ? '@' : '#'}${activeChannel.name}` : 'Select a channel'}</h1>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <SearchContainer>\n              <SearchBar \n                onSearch={handleSearch}\n                error={searchError}\n                onClickOutside={handleSearchClose}\n              />\n              {(isSearching || searchResults) && !searchError && (\n                <SearchResults\n                  isLoading={isSearching}\n                  channels={searchResults?.channels || []}\n                  messages={searchResults?.messages || []}\n                  files={searchResults?.files || []}\n                  onSelectChannel={handleSearchSelect.channel}\n                  onSelectMessage={handleSearchSelect.message}\n                  onSelectFile={handleSearchSelect.file}\n                />\n              )}\n            </SearchContainer>\n            {activeChannel && (\n              <SettingsButton\n                variant=\"secondary\"\n                size=\"small\"\n                onClick={() => setIsSettingsOpen(true)}\n              >\n                Settings\n              </SettingsButton>\n            )}\n            <LogoutButton onClick={handleLogout}>Logout</LogoutButton>\n          </div>\n        </ChatHeader>\n        <MessageList channelId={activeChannelId} />\n        <ChatInput>\n          <MessageInput channelId={activeChannelId} />\n        </ChatInput>\n      </ChatArea>\n      {isCreateModalOpen && (\n        <CreateChannelModal\n          isOpen={isCreateModalOpen}\n          onClose={() => setIsCreateModalOpen(false)}\n        />\n      )}\n      {isSettingsOpen && activeChannel && (\n        <ChannelSettings\n          isOpen={isSettingsOpen}\n          onClose={() => setIsSettingsOpen(false)}\n          channel={activeChannel}\n        />\n      )}\n    </MainContainer>\n  );\n};\n\nexport default MainLayout; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}