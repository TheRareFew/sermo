{"ast":null,"code":"export const transformMessage = message => {\n  var _message$replies;\n  return {\n    id: message.id,\n    content: message.content,\n    userId: message.user_id,\n    channelId: message.channel_id,\n    createdAt: message.created_at,\n    updatedAt: message.updated_at,\n    parentId: message.parent_id,\n    replyCount: message.reply_count || 0,\n    isExpanded: message.is_expanded || false,\n    repliesLoaded: message.replies_loaded || false,\n    replies: (_message$replies = message.replies) === null || _message$replies === void 0 ? void 0 : _message$replies.map(transformMessage)\n  };\n};","map":{"version":3,"names":["transformMessage","message","_message$replies","id","content","userId","user_id","channelId","channel_id","createdAt","created_at","updatedAt","updated_at","parentId","parent_id","replyCount","reply_count","isExpanded","is_expanded","repliesLoaded","replies_loaded","replies","map"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/utils/messageTransform.ts"],"sourcesContent":["import { Message, StoreMessage } from '../types';\r\n\r\nexport const transformMessage = (message: Message): StoreMessage => ({\r\n  id: message.id,\r\n  content: message.content,\r\n  userId: message.user_id,\r\n  channelId: message.channel_id,\r\n  createdAt: message.created_at,\r\n  updatedAt: message.updated_at,\r\n  parentId: message.parent_id,\r\n  replyCount: message.reply_count || 0,\r\n  isExpanded: message.is_expanded || false,\r\n  repliesLoaded: message.replies_loaded || false,\r\n  replies: message.replies?.map(transformMessage)\r\n}); "],"mappings":"AAEA,OAAO,MAAMA,gBAAgB,GAAIC,OAAgB;EAAA,IAAAC,gBAAA;EAAA,OAAoB;IACnEC,EAAE,EAAEF,OAAO,CAACE,EAAE;IACdC,OAAO,EAAEH,OAAO,CAACG,OAAO;IACxBC,MAAM,EAAEJ,OAAO,CAACK,OAAO;IACvBC,SAAS,EAAEN,OAAO,CAACO,UAAU;IAC7BC,SAAS,EAAER,OAAO,CAACS,UAAU;IAC7BC,SAAS,EAAEV,OAAO,CAACW,UAAU;IAC7BC,QAAQ,EAAEZ,OAAO,CAACa,SAAS;IAC3BC,UAAU,EAAEd,OAAO,CAACe,WAAW,IAAI,CAAC;IACpCC,UAAU,EAAEhB,OAAO,CAACiB,WAAW,IAAI,KAAK;IACxCC,aAAa,EAAElB,OAAO,CAACmB,cAAc,IAAI,KAAK;IAC9CC,OAAO,GAAAnB,gBAAA,GAAED,OAAO,CAACoB,OAAO,cAAAnB,gBAAA,uBAAfA,gBAAA,CAAiBoB,GAAG,CAACtB,gBAAgB;EAChD,CAAC;AAAA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}