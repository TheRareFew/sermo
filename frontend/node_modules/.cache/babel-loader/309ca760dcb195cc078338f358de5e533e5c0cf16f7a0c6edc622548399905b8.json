{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\layout\\\\MainLayout\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../../store/auth/authSlice';\nimport { setActiveChannel, setChannels, addMessage, setMessages, setUsers, updateUserStatus } from '../../../store/chat/chatSlice';\nimport Input from '../../common/Input';\nimport ChatMessage from '../../common/ChatMessage';\nimport UserListItem from '../../common/UserListItem';\nimport ChannelListItem from '../../common/ChannelListItem';\nimport wsService from '../../../services/websocket';\nimport { getChannels, getChannelMessages, getChannelUsers } from '../../../services/api/chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.text};\n  font-family: 'VT323', monospace;\n`;\n_c = MainContainer;\nconst Sidebar = styled.div`\n  width: 200px;\n  border-right: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = Sidebar;\nconst ChannelList = styled.div`\n  flex: 1;\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n_c3 = ChannelList;\nconst UserList = styled.div`\n  height: 200px;\n  padding: 16px;\n  border-top: 2px solid ${props => props.theme.colors.border};\n  overflow-y: auto;\n\n  h2 {\n    margin: 0 0 16px 0;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n_c4 = UserList;\nconst ChatArea = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n_c5 = ChatArea;\nconst ChatHeader = styled.div`\n  padding: 16px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h1 {\n    margin: 0;\n    text-transform: uppercase;\n  }\n`;\n_c6 = ChatHeader;\nconst ChatMessages = styled.div`\n  flex: 1;\n  padding: 16px;\n  overflow-y: auto;\n  font-family: 'Courier New', monospace;\n`;\n_c7 = ChatMessages;\nconst ChatInput = styled.div`\n  padding: 16px;\n  border-top: 2px solid ${props => props.theme.colors.border};\n`;\n_c8 = ChatInput;\nconst LogoutButton = styled.button`\n  background: none;\n  border: 2px solid ${props => props.theme.colors.error};\n  color: ${props => props.theme.colors.error};\n  padding: 4px 8px;\n  font-family: 'VT323', monospace;\n  cursor: pointer;\n  text-transform: uppercase;\n\n  &:hover {\n    background: ${props => props.theme.colors.error};\n    color: ${props => props.theme.colors.background};\n  }\n`;\n_c9 = LogoutButton;\nconst MainLayout = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [message, setMessage] = useState('');\n  const messagesEndRef = useRef(null);\n  const activeChannelId = useSelector(state => state.chat.activeChannelId);\n  const channels = useSelector(state => state.chat.channels);\n  const messages = useSelector(state => state.chat.messages[activeChannelId] || []);\n  const users = useSelector(state => state.chat.users);\n  useEffect(() => {\n    // Initial data fetch\n    const fetchInitialData = async () => {\n      try {\n        const channelsData = await getChannels();\n        dispatch(setChannels(channelsData));\n        if (channelsData.length > 0) {\n          const firstChannelId = channelsData[0].id;\n          dispatch(setActiveChannel(firstChannelId));\n          const [messagesData, usersData] = await Promise.all([getChannelMessages(firstChannelId), getChannelUsers(firstChannelId)]);\n          dispatch(setMessages({\n            channelId: firstChannelId,\n            messages: messagesData\n          }));\n          dispatch(setUsers(usersData));\n        }\n      } catch (error) {\n        console.error('Failed to fetch initial data:', error);\n      }\n    };\n    fetchInitialData();\n    wsService.connect();\n\n    // WebSocket event handlers\n    const messageHandler = data => {\n      if (data.type === 'message') {\n        dispatch(addMessage(data));\n      }\n    };\n    const presenceHandler = data => {\n      if (data.type === 'status_update') {\n        dispatch(updateUserStatus({\n          userId: data.user_id,\n          status: data.status\n        }));\n      }\n    };\n    wsService.onMessage(messageHandler);\n    wsService.onPresence(presenceHandler);\n    return () => {\n      wsService.disconnect();\n    };\n  }, [dispatch]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    // Scroll to bottom when messages change\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleChannelClick = async channelId => {\n    dispatch(setActiveChannel(channelId));\n    try {\n      const [messagesData, usersData] = await Promise.all([getChannelMessages(channelId), getChannelUsers(channelId)]);\n      dispatch(setMessages({\n        channelId,\n        messages: messagesData\n      }));\n      dispatch(setUsers(usersData));\n      wsService.joinChannel(channelId);\n    } catch (error) {\n      console.error('Failed to fetch channel data:', error);\n    }\n  };\n  const handleLogout = () => {\n    wsService.disconnect();\n    dispatch(logout());\n  };\n  const handleMessageSubmit = e => {\n    if (e.key === 'Enter' && message.trim() && activeChannelId) {\n      wsService.sendMessage(activeChannelId, message.trim());\n      setMessage('');\n    }\n  };\n  const activeChannel = channels.find(c => c.id === activeChannelId);\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(ChannelList, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Channels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), channels.map(channel => /*#__PURE__*/_jsxDEV(ChannelListItem, {\n          name: channel.name,\n          isActive: channel.id === activeChannelId,\n          hasUnread: false // TODO: Implement unread tracking\n          ,\n          isDirect: channel.is_direct_message,\n          onClick: () => handleChannelClick(channel.id)\n        }, channel.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserList, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Online Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), Object.values(users).map(user => /*#__PURE__*/_jsxDEV(UserListItem, {\n          username: user.username,\n          status: user.status\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatArea, {\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: activeChannel ? `${activeChannel.is_direct_message ? '@' : '#'}${activeChannel.name}` : 'Select a channel'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatMessages, {\n        children: [messages.map(msg => {\n          var _users$msg$sender_id;\n          return /*#__PURE__*/_jsxDEV(ChatMessage, {\n            content: msg.content,\n            sender: ((_users$msg$sender_id = users[msg.sender_id]) === null || _users$msg$sender_id === void 0 ? void 0 : _users$msg$sender_id.username) || 'Unknown',\n            timestamp: msg.created_at,\n            isSystem: msg.is_system\n          }, msg.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyPress: handleMessageSubmit,\n          placeholder: \"Type your message here...\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(MainLayout, \"HT9nbgQrd+tA9oFho0YTNQaTYTU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c10 = MainLayout;\nexport default MainLayout;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"MainContainer\");\n$RefreshReg$(_c2, \"Sidebar\");\n$RefreshReg$(_c3, \"ChannelList\");\n$RefreshReg$(_c4, \"UserList\");\n$RefreshReg$(_c5, \"ChatArea\");\n$RefreshReg$(_c6, \"ChatHeader\");\n$RefreshReg$(_c7, \"ChatMessages\");\n$RefreshReg$(_c8, \"ChatInput\");\n$RefreshReg$(_c9, \"LogoutButton\");\n$RefreshReg$(_c10, \"MainLayout\");","map":{"version":3,"names":["React","useEffect","useState","useRef","styled","useDispatch","useSelector","logout","setActiveChannel","setChannels","addMessage","setMessages","setUsers","updateUserStatus","Input","ChatMessage","UserListItem","ChannelListItem","wsService","getChannels","getChannelMessages","getChannelUsers","jsxDEV","_jsxDEV","MainContainer","div","props","theme","colors","background","text","_c","Sidebar","border","_c2","ChannelList","primary","_c3","UserList","_c4","ChatArea","_c5","ChatHeader","_c6","ChatMessages","_c7","ChatInput","_c8","LogoutButton","button","error","_c9","MainLayout","_s","dispatch","message","setMessage","messagesEndRef","activeChannelId","state","chat","channels","messages","users","fetchInitialData","channelsData","length","firstChannelId","id","messagesData","usersData","Promise","all","channelId","console","connect","messageHandler","data","type","presenceHandler","userId","user_id","status","onMessage","onPresence","disconnect","_messagesEndRef$curre","current","scrollIntoView","behavior","handleChannelClick","joinChannel","handleLogout","handleMessageSubmit","e","key","trim","sendMessage","activeChannel","find","c","children","fileName","_jsxFileName","lineNumber","columnNumber","map","channel","name","isActive","hasUnread","isDirect","is_direct_message","onClick","Object","values","user","username","msg","_users$msg$sender_id","content","sender","sender_id","timestamp","created_at","isSystem","is_system","ref","value","onChange","target","onKeyPress","placeholder","fullWidth","_c10","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/layout/MainLayout/index.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../../store/auth/authSlice';\r\nimport {\r\n  setActiveChannel,\r\n  setChannels,\r\n  addMessage,\r\n  setMessages,\r\n  setUsers,\r\n  updateUserStatus\r\n} from '../../../store/chat/chatSlice';\r\nimport Input from '../../common/Input';\r\nimport ChatMessage from '../../common/ChatMessage';\r\nimport UserListItem from '../../common/UserListItem';\r\nimport ChannelListItem from '../../common/ChannelListItem';\r\nimport wsService from '../../../services/websocket';\r\nimport { getChannels, getChannelMessages, getChannelUsers } from '../../../services/api/chat';\r\n\r\nconst MainContainer = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  background-color: ${props => props.theme.colors.background};\r\n  color: ${props => props.theme.colors.text};\r\n  font-family: 'VT323', monospace;\r\n`;\r\n\r\nconst Sidebar = styled.div`\r\n  width: 200px;\r\n  border-right: 2px solid ${props => props.theme.colors.border};\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ChannelList = styled.div`\r\n  flex: 1;\r\n  padding: 16px;\r\n  border-bottom: 2px solid ${props => props.theme.colors.border};\r\n  overflow-y: auto;\r\n\r\n  h2 {\r\n    margin: 0 0 16px 0;\r\n    text-transform: uppercase;\r\n    color: ${props => props.theme.colors.primary};\r\n  }\r\n`;\r\n\r\nconst UserList = styled.div`\r\n  height: 200px;\r\n  padding: 16px;\r\n  border-top: 2px solid ${props => props.theme.colors.border};\r\n  overflow-y: auto;\r\n\r\n  h2 {\r\n    margin: 0 0 16px 0;\r\n    text-transform: uppercase;\r\n    color: ${props => props.theme.colors.primary};\r\n  }\r\n`;\r\n\r\nconst ChatArea = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ChatHeader = styled.div`\r\n  padding: 16px;\r\n  border-bottom: 2px solid ${props => props.theme.colors.border};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  h1 {\r\n    margin: 0;\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nconst ChatMessages = styled.div`\r\n  flex: 1;\r\n  padding: 16px;\r\n  overflow-y: auto;\r\n  font-family: 'Courier New', monospace;\r\n`;\r\n\r\nconst ChatInput = styled.div`\r\n  padding: 16px;\r\n  border-top: 2px solid ${props => props.theme.colors.border};\r\n`;\r\n\r\nconst LogoutButton = styled.button`\r\n  background: none;\r\n  border: 2px solid ${props => props.theme.colors.error};\r\n  color: ${props => props.theme.colors.error};\r\n  padding: 4px 8px;\r\n  font-family: 'VT323', monospace;\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n\r\n  &:hover {\r\n    background: ${props => props.theme.colors.error};\r\n    color: ${props => props.theme.colors.background};\r\n  }\r\n`;\r\n\r\nconst MainLayout: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState('');\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  \r\n  const activeChannelId = useSelector((state: any) => state.chat.activeChannelId);\r\n  const channels = useSelector((state: any) => state.chat.channels);\r\n  const messages = useSelector((state: any) => state.chat.messages[activeChannelId] || []);\r\n  const users = useSelector((state: any) => state.chat.users);\r\n\r\n  useEffect(() => {\r\n    // Initial data fetch\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        const channelsData = await getChannels();\r\n        dispatch(setChannels(channelsData));\r\n        \r\n        if (channelsData.length > 0) {\r\n          const firstChannelId = channelsData[0].id;\r\n          dispatch(setActiveChannel(firstChannelId));\r\n          \r\n          const [messagesData, usersData] = await Promise.all([\r\n            getChannelMessages(firstChannelId),\r\n            getChannelUsers(firstChannelId)\r\n          ]);\r\n          \r\n          dispatch(setMessages({ channelId: firstChannelId, messages: messagesData }));\r\n          dispatch(setUsers(usersData));\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch initial data:', error);\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n    wsService.connect();\r\n\r\n    // WebSocket event handlers\r\n    const messageHandler = (data: any) => {\r\n      if (data.type === 'message') {\r\n        dispatch(addMessage(data));\r\n      }\r\n    };\r\n\r\n    const presenceHandler = (data: any) => {\r\n      if (data.type === 'status_update') {\r\n        dispatch(updateUserStatus({ userId: data.user_id, status: data.status }));\r\n      }\r\n    };\r\n\r\n    wsService.onMessage(messageHandler);\r\n    wsService.onPresence(presenceHandler);\r\n\r\n    return () => {\r\n      wsService.disconnect();\r\n    };\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    // Scroll to bottom when messages change\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleChannelClick = async (channelId: number) => {\r\n    dispatch(setActiveChannel(channelId));\r\n    try {\r\n      const [messagesData, usersData] = await Promise.all([\r\n        getChannelMessages(channelId),\r\n        getChannelUsers(channelId)\r\n      ]);\r\n      dispatch(setMessages({ channelId, messages: messagesData }));\r\n      dispatch(setUsers(usersData));\r\n      wsService.joinChannel(channelId);\r\n    } catch (error) {\r\n      console.error('Failed to fetch channel data:', error);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    wsService.disconnect();\r\n    dispatch(logout());\r\n  };\r\n\r\n  const handleMessageSubmit = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter' && message.trim() && activeChannelId) {\r\n      wsService.sendMessage(activeChannelId, message.trim());\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const activeChannel = channels.find((c: any) => c.id === activeChannelId);\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Sidebar>\r\n        <ChannelList>\r\n          <h2>Channels</h2>\r\n          {channels.map((channel: any) => (\r\n            <ChannelListItem\r\n              key={channel.id}\r\n              name={channel.name}\r\n              isActive={channel.id === activeChannelId}\r\n              hasUnread={false} // TODO: Implement unread tracking\r\n              isDirect={channel.is_direct_message}\r\n              onClick={() => handleChannelClick(channel.id)}\r\n            />\r\n          ))}\r\n        </ChannelList>\r\n        <UserList>\r\n          <h2>Online Users</h2>\r\n          {Object.values(users).map((user: any) => (\r\n            <UserListItem\r\n              key={user.id}\r\n              username={user.username}\r\n              status={user.status}\r\n            />\r\n          ))}\r\n        </UserList>\r\n      </Sidebar>\r\n      <ChatArea>\r\n        <ChatHeader>\r\n          <h1>{activeChannel ? `${activeChannel.is_direct_message ? '@' : '#'}${activeChannel.name}` : 'Select a channel'}</h1>\r\n          <LogoutButton onClick={handleLogout}>Logout</LogoutButton>\r\n        </ChatHeader>\r\n        <ChatMessages>\r\n          {messages.map((msg: any) => (\r\n            <ChatMessage\r\n              key={msg.id}\r\n              content={msg.content}\r\n              sender={users[msg.sender_id]?.username || 'Unknown'}\r\n              timestamp={msg.created_at}\r\n              isSystem={msg.is_system}\r\n            />\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </ChatMessages>\r\n        <ChatInput>\r\n          <Input\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            onKeyPress={handleMessageSubmit}\r\n            placeholder=\"Type your message here...\"\r\n            fullWidth\r\n          />\r\n        </ChatInput>\r\n      </ChatArea>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default MainLayout; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}