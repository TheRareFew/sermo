{"ast":null,"code":"var _jsxFileName = \"Z:\\\\GAUNTLET\\\\projects\\\\SERMO\\\\sermo-app\\\\frontend\\\\src\\\\components\\\\chat\\\\CreateChannelModal\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { createChannel } from '../../../services/api/chat';\nimport { setActiveChannel } from '../../../store/chat/chatSlice';\nimport Button from '../../common/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\n_c = ModalOverlay;\nconst ModalContent = styled.div`\n  background-color: ${props => props.theme.colors.background};\n  border: 2px solid ${props => props.theme.colors.primary};\n  padding: 20px;\n  width: 400px;\n  font-family: 'DOS VGA 437', monospace;\n`;\n_c2 = ModalContent;\nconst ModalHeader = styled.div`\n  margin-bottom: 20px;\n  padding-bottom: 10px;\n  border-bottom: 2px solid ${props => props.theme.colors.border};\n  color: ${props => props.theme.colors.primary};\n  text-transform: uppercase;\n`;\n_c3 = ModalHeader;\nconst FormGroup = styled.div`\n  margin-bottom: 15px;\n`;\n_c4 = FormGroup;\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 5px;\n  color: ${props => props.theme.colors.text};\n`;\n_c5 = Label;\nconst Input = styled.input`\n  width: 100%;\n  padding: 8px;\n  background-color: ${props => props.theme.colors.background};\n  border: 2px solid ${props => props.theme.colors.border};\n  color: ${props => props.theme.colors.text};\n  font-family: 'DOS VGA 437', monospace;\n\n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.colors.primary};\n  }\n`;\n_c6 = Input;\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n  margin-top: 20px;\n`;\n_c7 = ButtonGroup;\nconst CreateChannelModal = ({\n  onClose\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!name.trim()) {\n      setError('Channel name is required');\n      return;\n    }\n    try {\n      const channel = await createChannel(name.trim(), description.trim() || undefined);\n      dispatch(setActiveChannel(channel.id));\n      onClose();\n    } catch (error) {\n      setError(error instanceof Error ? error.message : 'Failed to create channel');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ModalOverlay, {\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: \"Create New Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Channel Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            placeholder: \"e.g., general\",\n            maxLength: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Description (optional):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            placeholder: \"Channel description\",\n            maxLength: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClose,\n            variant: \"secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateChannelModal, \"L3p8JdRZQv2YWGN9A2UsIJLjGns=\", false, function () {\n  return [useDispatch];\n});\n_c8 = CreateChannelModal;\nexport default CreateChannelModal;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"ModalOverlay\");\n$RefreshReg$(_c2, \"ModalContent\");\n$RefreshReg$(_c3, \"ModalHeader\");\n$RefreshReg$(_c4, \"FormGroup\");\n$RefreshReg$(_c5, \"Label\");\n$RefreshReg$(_c6, \"Input\");\n$RefreshReg$(_c7, \"ButtonGroup\");\n$RefreshReg$(_c8, \"CreateChannelModal\");","map":{"version":3,"names":["React","useState","styled","useDispatch","createChannel","setActiveChannel","Button","jsxDEV","_jsxDEV","ModalOverlay","div","_c","ModalContent","props","theme","colors","background","primary","_c2","ModalHeader","border","_c3","FormGroup","_c4","Label","label","text","_c5","Input","input","_c6","ButtonGroup","_c7","CreateChannelModal","onClose","_s","dispatch","name","setName","description","setDescription","error","setError","handleSubmit","e","preventDefault","trim","channel","undefined","id","Error","message","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","maxLength","style","color","variant","_c8","$RefreshReg$"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/components/chat/CreateChannelModal/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createChannel } from '../../../services/api/chat';\r\nimport { setActiveChannel, setChannels } from '../../../store/chat/chatSlice';\r\nimport Button from '../../common/Button';\r\n\r\ninterface CreateChannelModalProps {\r\n  onClose: () => void;\r\n}\r\n\r\nconst ModalOverlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  background-color: ${props => props.theme.colors.background};\r\n  border: 2px solid ${props => props.theme.colors.primary};\r\n  padding: 20px;\r\n  width: 400px;\r\n  font-family: 'DOS VGA 437', monospace;\r\n`;\r\n\r\nconst ModalHeader = styled.div`\r\n  margin-bottom: 20px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 2px solid ${props => props.theme.colors.border};\r\n  color: ${props => props.theme.colors.primary};\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: ${props => props.theme.colors.text};\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 8px;\r\n  background-color: ${props => props.theme.colors.background};\r\n  border: 2px solid ${props => props.theme.colors.border};\r\n  color: ${props => props.theme.colors.text};\r\n  font-family: 'DOS VGA 437', monospace;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${props => props.theme.colors.primary};\r\n  }\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst CreateChannelModal: React.FC<CreateChannelModalProps> = ({ onClose }) => {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!name.trim()) {\r\n      setError('Channel name is required');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const channel = await createChannel(name.trim(), description.trim() || undefined);\r\n      dispatch(setActiveChannel(channel.id));\r\n      onClose();\r\n    } catch (error) {\r\n      setError(error instanceof Error ? error.message : 'Failed to create channel');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ModalOverlay onClick={onClose}>\r\n      <ModalContent onClick={e => e.stopPropagation()}>\r\n        <ModalHeader>Create New Channel</ModalHeader>\r\n        <form onSubmit={handleSubmit}>\r\n          <FormGroup>\r\n            <Label>Channel Name:</Label>\r\n            <Input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={e => setName(e.target.value)}\r\n              placeholder=\"e.g., general\"\r\n              maxLength={50}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label>Description (optional):</Label>\r\n            <Input\r\n              type=\"text\"\r\n              value={description}\r\n              onChange={e => setDescription(e.target.value)}\r\n              placeholder=\"Channel description\"\r\n              maxLength={200}\r\n            />\r\n          </FormGroup>\r\n          {error && (\r\n            <FormGroup>\r\n              <span style={{ color: 'red' }}>{error}</span>\r\n            </FormGroup>\r\n          )}\r\n          <ButtonGroup>\r\n            <Button onClick={onClose} variant=\"secondary\">Cancel</Button>\r\n            <Button type=\"submit\">Create</Button>\r\n          </ButtonGroup>\r\n        </form>\r\n      </ModalContent>\r\n    </ModalOverlay>\r\n  );\r\n};\r\n\r\nexport default CreateChannelModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}