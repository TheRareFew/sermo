{"ast":null,"code":"export const transformMessage = message => ({\n  id: Number(message.id),\n  content: message.content,\n  channelId: Number(message.channel_id),\n  userId: Number(message.user_id),\n  reactions: [],\n  attachments: [],\n  createdAt: message.created_at,\n  updatedAt: message.updated_at || message.created_at,\n  parentId: message.parent_id ? Number(message.parent_id) : undefined,\n  replyCount: message.reply_count || 0,\n  isExpanded: false,\n  repliesLoaded: false,\n  replies: []\n});","map":{"version":3,"names":["transformMessage","message","id","Number","content","channelId","channel_id","userId","user_id","reactions","attachments","createdAt","created_at","updatedAt","updated_at","parentId","parent_id","undefined","replyCount","reply_count","isExpanded","repliesLoaded","replies"],"sources":["Z:/GAUNTLET/projects/SERMO/sermo-app/frontend/src/utils/messageTransform.ts"],"sourcesContent":["import { Message, RawMessage, StoreMessage } from '../types';\r\n\r\nexport const transformMessage = (message: RawMessage | Message): StoreMessage => ({\r\n  id: Number(message.id),\r\n  content: message.content,\r\n  channelId: Number(message.channel_id),\r\n  userId: Number(message.user_id),\r\n  reactions: [],\r\n  attachments: [],\r\n  createdAt: message.created_at,\r\n  updatedAt: message.updated_at || message.created_at,\r\n  parentId: message.parent_id ? Number(message.parent_id) : undefined,\r\n  replyCount: message.reply_count || 0,\r\n  isExpanded: false,\r\n  repliesLoaded: false,\r\n  replies: []\r\n}); "],"mappings":"AAEA,OAAO,MAAMA,gBAAgB,GAAIC,OAA6B,KAAoB;EAChFC,EAAE,EAAEC,MAAM,CAACF,OAAO,CAACC,EAAE,CAAC;EACtBE,OAAO,EAAEH,OAAO,CAACG,OAAO;EACxBC,SAAS,EAAEF,MAAM,CAACF,OAAO,CAACK,UAAU,CAAC;EACrCC,MAAM,EAAEJ,MAAM,CAACF,OAAO,CAACO,OAAO,CAAC;EAC/BC,SAAS,EAAE,EAAE;EACbC,WAAW,EAAE,EAAE;EACfC,SAAS,EAAEV,OAAO,CAACW,UAAU;EAC7BC,SAAS,EAAEZ,OAAO,CAACa,UAAU,IAAIb,OAAO,CAACW,UAAU;EACnDG,QAAQ,EAAEd,OAAO,CAACe,SAAS,GAAGb,MAAM,CAACF,OAAO,CAACe,SAAS,CAAC,GAAGC,SAAS;EACnEC,UAAU,EAAEjB,OAAO,CAACkB,WAAW,IAAI,CAAC;EACpCC,UAAU,EAAE,KAAK;EACjBC,aAAa,EAAE,KAAK;EACpBC,OAAO,EAAE;AACX,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}